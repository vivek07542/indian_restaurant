{"version":3,"sources":["component/BreadCrumbs/BreadCrumbs.js","component/Main/Main.js","assets/images/resturantLogo1.png","component/Header/Header.js","component/Footer/Footer.js","store/reducer/FoodItem/FoodItemReducer.js","component/FormWrapper/FormWrapper.js","UI/Table/Table.js","UI/Button/Button.js","UI/DropDown/DropDown.js","UI/Pagination/Pagination.js","component/TableWrapper/TableWrapper.js","container/FoodItem/FoodItem.js","Utility/AutoComplete.js","Utility/stateConversion.js","Utility/PriceCalculation.js","store/reducer/CustomerOrder/CustomerOrderReducer.js","container/CustomerOrder/CustomerOrder.js","store/reducer/IngredientMaster/IngredientMasterReducer.js","container/AdminBackendTabs/IngredientMaster.js","store/reducer/Inventory/InventoryReducer.js","container/AdminBackendTabs/Inventory.js","store/reducer/InvestmentBudget/InvestmentBudgetReducer.js","container/AdminBackendTabs/InvestmentBudget.js","store/reducer/ItemRecipe/ItemRecipeReducer.js","container/AdminBackendTabs/ItemRecipe.js","store/reducer/MonthlyExpense/MonthlyExpenseReducer.js","container/AdminBackendTabs/MonthlyExpense.js","store/reducer/Quantity/QuantityReducer.js","container/AdminBackendTabs/Quantity.js","store/reducer/Unit/UnitReducer.js","container/AdminBackendTabs/Unit.js","store/reducer/RecipeGeneratorReducer/RecipeGeneratorReducer.js","container/AdminBackendTabs/RecipeGenerator.js","store/reducer/VendorIngredientMappingReducer/VendorIngredientMappingReducer.js","container/AdminBackendTabs/VendorIngredientMapping.js","store/reducer/VendorMaster/VendorMasterReducer.js","container/AdminBackendTabs/VendorMaster.js","store/reducer/TableReservation/TableReservationReducer.js","container/AdminBackendTabs/TableReservation.js","store/reducer/OrderReport/OrderReportReducer.js","container/Reports/OrderDetail.js","store/reducer/ProfitLoss/ProfitLossReducer.js","container/Reports/ProfitLossMaster.js","store/reducer/TopSellDish/TopSellDishReducer.js","container/Reports/TopSellingDishes.js","container/Direction/Direction.js","container/ErrorPage/ErrorPage.js","container/ResturantPage/ResturantPage.js","App.js","store/reducer/root_reducer.js","store/saga/FootItemSsaga/FoodItemSaga.js","store/saga/Quantity/QuantitySaga.js","store/saga/Unit/UnitSaga.js","store/saga/VendorMaster/VendorMasterSaga.js","store/saga/IngredientMaster/IngredientMasterSaga.js","store/saga/ItemRecipe/ItemRecipeSaga.js","store/saga/RecipeGenerator/RecipeGeneratorSaga.js","store/saga/VendorIngredientMapping/VendorIngredientMappingSaga.js","store/saga/Inventory/InventorySaga.js","store/saga/CustomerOrder/CustomerOrderSaga.js","store/saga/MonthlyExpense/MonthlyExpenseSaga.js","store/saga/InvestmentBudget/InvestmentBudgetSaga.js","store/saga/OrderReport/OrderReportSaga.js","store/saga/TopSellDish/TopSellDishSaga.js","store/saga/ProfitLoss/ProfitLossSaga.js","store/saga/TableReservation/TableReservationSaga.js","store/saga/root_saga.js","index.js"],"names":["withRouter","prop","history","pathnames","location","pathname","split","filter","x","Breadcrumbs","aria-label","className","length","Link","onClick","push","Typography","map","name","index","routeTo","slice","join","Main","props","children","Header","useState","colorChange","setColorchange","window","addEventListener","scrollY","to","src","ResturantLogo","width","height","alt","type","data-toggle","data-target","aria-controls","aria-expanded","id","href","role","aria-haspopup","aria-labelledby","Footer","style","backgroundColor","fontSize","INIT","SUCCESS","SUBMIT_HANDLER_INIT","SUBMIT_HANDLER_SUCCESS","EDIT_HANDLER_INIT","EDIT_HANDLER_SUCCESS","DELETE_HANDLER_INIT","DELETE_HANDLER_SUCCESS","submitHandlerSuccess","foodItemArray","editMode","editObject","initialState","FoodItem","state","action","FormWrapper","TableContainer","tableData","headingColumns","addEditButton","addDeleteButton","breakOn","editHandler","deleteHandler","onDeleteHandler","rowDetail","tableClass","data","row","rowData","i","key","val","data-heading","color","col","Button","allProps","classNameProp","assignedClass","DropDown","options","this","opt","value","Component","Pagination","postPerPage","totalPosts","paginate","currentPage","pageSelect","pageNumbers","lastPage","Math","ceil","e","target","disabled","number","ref","React","createRef","TableWrapper","setState","indexOfLastPost","indexOfFirstPost","currentItem","targetRef","toPdf","table","filename","sheet","buttonText","pagePerPost","useForm","mode","register","handleSubmit","formState","errors","isSubmitted","isValid","reset","setEditMode","setId","dispatch","useDispatch","editFoodItem","useSelector","useEffect","foodItem","foodPrice","onSubmit","foodItemObject","htmlFor","classNames","placeholder","required","message","AutoComplete","Array","elementValue","setArray","setDisplay","setIndex","indexing","inputValue","array","JSON","parse","localStorage","getItem","emptyArray","wrongArray","forEach","element","matchValue","match","ingredientName","vendorName","object","objIndex","findIndex","obj","input","vendorQuoteArray","unitId","inputLength","every","condition","confirm","getQtyIdToValue","qtyValue","qtyValueN","el","quantity","Number","getUnitIdToValue","unitValue","unit","getIngredientValueToId","ingredientId","createVendorIdToValue","vendorValue","PriceCalculation","ingredient","qty","setPrice","setPriceIndex","reciepeRequiredPrice","ingredientQty","quantityId","ingredientPrice","ingredientUnit","reciepeRequiredQty","reciepeRequiredUnit","PriceVendorCalculation","vendorId","vendorObject","find","item","vendor","quotePrice","ORDER_INIT","ORDER_SUCCESS","SUBMIT_ORDER_HANDLER_INIT","SUBMIT_ORDER_HANDLER_SUCCESS","DELETE_ORDER_HANDLER_INIT","DELETE_ORDER_HANDLER_SUCCESS","EDIT_ORDER_HANDLER_INIT","EDIT_ORDER_HANDLER_SUCCESS","initilizerHandlerSuccess","customerOrderArray","orderId","editHandlerSuccess","deleteHandlerSuccess","CustomerOrder","defaultValues","orderArray","foodItemId","orderQtyId","amount","control","setValue","getValues","useFieldArray","append","fields","remove","foodItemDisplay","setFoodItemDisplay","foodItemIndex","setFoodItemIndex","foodItemarray","setFoodItemArray","editOrderMode","discountCalculation","sumUpTotal","customerName","orderDate","discount","totalAmount","priceInput","document","querySelectorAll","total","shouldValidate","undefined","totalPrice","customerOrder","dish","customerOrderObject","defaultValue","onChange","valuePrice","foodPriceRequired","foodObject","PriceFoodCalculation","step","INGREDIENT_INIT","INGREDIENT_SUCCESS","SUBMIT_INGREDIENT_HANDLER_INIT","SUBMIT_INGREDIENT_HANDLER_SUCCESS","EDIT_INGREDIENT_HANDLER_INIT","EDIT_INGREDIENT_HANDLER_SUCCESS","DELETE_INGREDIENT_HANDLER_INIT","DELETE_INGREDIENT_HANDLER_SUCCESS","ingredientArray","unitArray","quantityArray","IngredientMaster","editIngredient","selQuantity","selUnit","ingredientObject","INVENTORY_INIT","INVENTORY_SUCCESS","SUBMIT_INVENTORY_INIT","SUBMIT_INVENTORY_SUCCESS","EDIT_INVENTORY_INIT","EDIT_INVENTORY_SUCCESS","DELETE_INVENTORY_INIT","DELETE_INVENTORY_SUCCESS","inventoryArray","vendorMappingArray","Inventory","dateEntryArray","purchasePrice","price","priceIndex","ingredientDisplay","setIngredientDisplay","ingredientIndex","setIngredientIndex","ingredientarray","setIngredientArray","setVendorIndex","vendorarray","setVendorArray","editInventoryMode","dateFrom","dateTo","totalPurchase","selVendor","inventoryTable","inventoryObject","findVendorArray","INVESTMENT_BUDGET_INIT","INVESTMENT_BUDGET_SUCCESS","SUBMIT_INVESTMENT_BUDGET_HANDLER_INIT","SUBMIT_INVESTMENT_BUDGET_HANDLER_SUCCESS","DELETE_INVESTMENT_BUDGET_HANDLER_INIT","DELETE_INVESTMENT_BUDGET_HANDLER_SUCCESS","EDIT_INVESTMENT_BUDGET_HANDLER_INIT","EDIT_INVESTMENT_BUDGET_HANDLER_SUCCESS","investmentBudgetArray","InvestmentBudget","budgetAllocated","setBudgetAllocated","editBudgetItem","totalAmountExpense","month","monthlyExpense","monthlyExpenseAmount","investmentBudgetObject","recoveryAmount","lastModified","ITEMRECIPE_INIT","ITEMRECIPE_SUCCESS","SUBMIT_ITEMRECIPE_HANDLER_INIT","SUBMIT_ITEMRECIPE_HANDLER_SUCCESS","DELETE_ITEMRECIPE_HANDLER_INIT","DELETE_ITEMRECIPE_HANDLER_SUCCESS","EDIT_ITEMRECIPE_HANDLER_INIT","EDIT_ITEMRECIPE_HANDLER_SUCCESS","itemRecipeArray","ItemRecipe","ingredientRecipeArray","foodDisplay","setFoodDisplay","foodarray","setFoodArray","editItemRecipeMode","serving","recipeDescription","basePrice","autoHandler","recipeChart","itemRecipeObject","MONTHLY_EXPENSE_INIT","MONTHLY_EXPENSE_SUCCESS","SUBMIT_MONTHLY_EXPENSE_HANDLER_INIT","SUBMIT_MONTHLY_EXPENSE_HANDLER_SUCCESS","DELETE_MONTHLY_EXPENSE_HANDLER_INIT","DELETE_MONTHLY_EXPENSE_HANDLER_SUCCESS","EDIT_MONTHLY_EXPENSE_HANDLER_INIT","EDIT_MONTHLY_EXPENSE_HANDLER_SUCCESS","monthlyExpenseArray","MonthlyExpense","editExpenseItem","totalExpense","date","expense","monthlyAmount","mothlyExpenseObject","monthlyExpenseObject","QUANTITY_INIT","QUANTITY_SUCCESS","SUBMIT_QUANTITY_HANDLER_INIT","SUBMIT_QUANTITY_HANDLER_SUCCESS","EDIT_QUANTITY_HANDLER_INIT","EDIT_QUANTITY_HANDLER_SUCCESS","DELETE_QUANTITY_HANDLER_INIT","DELETE_QUANTITY_HANDLER_SUCCESS","Quantity","editQuantity","quantityObject","UNIT_INIT","UNIT_SUCCESS","SUBMIT_UNIT_HANDLER_INIT","SUBMIT_UNIT_HANDLER_SUCCESS","EDIT_UNIT_HANDLER_INIT","EDIT_UNIT_HANDLER_SUCCESS","DELETE_UNIT_HANDLER_INIT","DELETE_UNIT_HANDLER_SUCCESS","unitEditMode","unitEditObject","Unit","editUnit","unitObject","RECIPE_GENERATOR_SUBMIT_INIT","RECIPE_GENERATOR_SUBMIT_SUCCESS","recipeGeneratorArray","RecipeGenerator","recipeGeneratorObject","VENDOR_MAPPING_INIT","VENDOR_MAPPING_SUCCESS","VENDOR_MAPPING_SUBMIT_INIT","VENDOR_MAPPING_SUBMIT_SUCCESS","VENDOR_MAPPING_EDIT_INIT","VENDOR_MAPPING_EDIT_SUCCESS","VENDOR_MAPPING_DELETE_INIT","VENDOR_MAPPING_DELETE_SUCCESS","vendorArray","VendorMapping","VendorIngredientMapping","editVendorMappingMode","vendorMappingChart","vendorMappingObject","VENDOR_INIT","VENDOR_SUCCESS","SUBMIT_VENDOR_HANDLER_INIT","SUBMIT_VENDOR_HANDLER_SUCCESS","EDIT_VENDOR_HANDLER_INIT","EDIT_VENDOR_HANDLER_SUCCESS","DELETE_VENDOR_HANDLER_INIT","DELETE_VENDOR_HANDLER_SUCCESS","VendorMaster","editModeForm","address","mobileNumber","email","pattern","RESERVATION_TABLE_INIT","RESERVATION_SUCCESS","RESERVATION_TABLE_SUBMIT_INIT","RESERVATION_SUBMIT_SUCCESS","EDIT_TABLE_RESERVATION_INIT","EDIT_RESERVATION_SUCCESS","DELETE_RESERVATION_SUCCESS","tableReservationArray","reservationLeft","TableReservation","editTableReservationMode","console","log","time","person","tableReservationObject","validate","SUBMIT_ORDER_REPORT_INIT","SUBMIT_ORDER_REPORT_SUCCESS","orderReportArray","OrderReport","OrderDetail","orderReportObject","SUBMIT_PROFIT_LOSS_INIT","SUBMIT_PROFIT_LOSS_SUCCESS","profitLossArray","ProfitLoss","ProfitLossMaster","profitLossObject","SUBMIT_TOP_SELL_DISH_INIT","SUBMIT_TOP_SELL_DISH_SUCCESS","SUBMIT_TOP_SELL_INGREDIENT_INIT","SUBMIT_TOP_SELL_INGREDIENT_SUCCESS","topSellDish","topSellIngredient","TopSell","TopSellingDishes","topSellDishArray","topSellIngredientArray","onSubmitTop","topSellObject","onSubmitIngredient","topServed","Direction","selectedCity","setSelectedCity","WrappedMap","withScriptjs","withGoogleMap","defaultZoom","defaultCenter","lat","lng","position","googleMapURL","loadingElement","containerElement","mapElement","ErrorPage","ResturantPage","routes","path","component","exact","App","combineReducers","initHandlerSaga","submitHandlerSaga","editHandlerSaga","deleteHandlerSaga","localValue","updateValue","setItem","stringify","put","editObjIndex","studentLast","foodLastItem","actionFood","deleteObjIndex","splice","initQtyHandlerSaga","submitQtyHandlerSaga","editQtyHandlerSaga","deleteQtyHandlerSaga","qtyLocalValue","quantityLast","quantityLastItem","actionQuantity","initUnitHandlerSaga","submitUnitHandlerSaga","editUnitHandlerSaga","deleteUnitHandlerSaga","unitLocalValue","unitLast","unitLastItem","actionUnit","initilizeVendorSaga","submitVendorHandlerSaga","editVendorHandlerSaga","deleteVendorHandlerSaga","vendorLast","vendorLastItem","vendorAction","initlizeIngredientSaga","submitIngredientHandlerSaga","editIngredientHandlerSaga","deleteIngredientHandlerSaga","ingredientValue","quantityValue","toDisplayIngredientValue","ingredientValueArray","conversionForIngredientIdToValue","updatedArray","quantityObjIndex","unitObjIndex","conversionObjectForIngredientValueToId","Object","ingredientLast","ingredientLastItem","localValueIngredient","convertArray","ingredientAction","initlizeItemRecipeSaga","submitItemRecipeHandlerSaga","editItemRecipeHandlerSaga","deleteItemRecipeHandlerSaga","localItemRecipe","localItemRecipeArray","conversionForitemRecipeIdToValue","ingredientObjIndex","menuId","itemRecipeLast","itemRecipeLastItem","localValueitemRecipe","itemRecipeAction","submitRecipeGeneratorHandlerSaga","priceCalculation","newQuantity","ingridientcost","totalRecipePrice","priceValue","objIndexRecipe","recipeServed","newRecipeIngredientObject","selectedServing","newIngredientPrice","recipeGeneratorAction","initializeVendorMappingSaga","submitVendorMappingtHandlerSaga","editVendorMappingHandlerSaga","deleteVendorMappingHandlerSaga","localVendorMappingValue","toDisplayVendorMappingValue","localVendorMappingArray","conversionForVendorMappingIdToValue","vendorObjIndex","vendorMappingLast","vendorMappingLastItem","localvendorMapping","vendorMappingAction","conversionObjectForVendortValueToId","localValueVendor","initalizeInventoryHandlerSaga","submitInventoryHandlerSaga","editInventoryHandlerSaga","deleteInventoryHandlerSaga","localInventoryArray","vendorIngredientMappingValue","toDisplayInventory","inventoryValue","inventoryValueArray","conversionForInventoryIdToValue","inventoryLast","inventoryLastItem","localValueInventory","inventoryAction","conversionObjectForInventoryValueToId","initlizeOrderSaga","submitOrderHandlerSaga","editOrderHandlerSaga","deleteOrderHandlerSaga","localCustomerOrder","foodItemValue","customerLastOrder","customerLastOrderItem","orderAction","customerOrderLast","customerOrderLastItem","localValueD","updateValueD","customerLastOrders","initlizeExpenseSaga","submitExpenseHandlerSaga","editExpenseHandlerSaga","deleteExpenseHandlerSaga","sumUpMonthlyExpense","monthlyExpenseAction","expenseLast","expenseLastItem","initlizeBudgetSaga","submitBudgetHandlerSaga","editBudgetHandlerSaga","deleteBudgetHandlerSaga","sumUpInvestmentBudget","investmentBudgetAction","submitOrderReportHandlerSaga","getOrderDate","startDate","endDate","orderDetail","d","Date","getTime","sumUpOrderExpense","orderReport","orderReportAction","submitTopSellDishHandlerSaga","submitTopSellIngredientHandlerSaga","extractMenu","arrayOfOrder","customerOrderDetail","orderedfood","countEachFood","result","reduce","res","sort","a","b","parseFloat","sliceTopDishes","sortedArray","qtyTopServed","topSelection","end","addMenuId","itemRecipeDetail","extractIngridient","ingridient","getingredientIdToValue","countEachIngridient","addedMenuId","arrayIngridient","topSelectIngridient","submitProfitLossHandlerSaga","profitLossAction","initlizeReservationSaga","submitTableHandlerSaga","editTableReservationHandlerSaga","deleteTableReservationHandlerSaga","tableReserved","tableLast","tableLastItem","reservationAction","watch","takeLatest","foodItemAction","QuantityAction","UnitAction","customerOrderAction","topSellAction","sagaMiddleware","createSagaMiddleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","run","ReactDOM","render","CssBaseline","getElementById"],"mappings":"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","file":"static/js/main.3919cdcb.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Typography ,Breadcrumbs,Link }  from '@material-ui/core';\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst BreadCrumbs = (prop)=>{\r\n    const {history,location : {pathname}} = prop;\r\n    const pathnames = pathname.split(\"/\").filter(x => x);\r\n\r\n  return (\r\n    <Breadcrumbs aria-label=\"breadcrumb\" className = \"mx-1 mx-md-5\">\r\n    {pathnames.length > 0 ? (\r\n        <Link onClick={() => history.push(\"/\")} className = \"text-light\">Food Menu</Link>\r\n      ) : (\r\n        <Typography className = \"text-danger\"> Food Menu</Typography>\r\n    )}\r\n    {pathnames.map((name, index) => {\r\n        const routeTo = `/${pathnames.slice(0, index + 1).join(\"/\")}`;\r\n        const isLast = index === pathnames.length - 1;\r\n        return isLast ? (\r\n          <Typography key={name} className = \"text-danger\">{name}</Typography>\r\n        ) : (\r\n          <Link key={name} className = \"text-light\" onClick={() => history.push(routeTo)}>\r\n            {name}\r\n          </Link>\r\n        );\r\n      })}\r\n    </Breadcrumbs>\r\n  );\r\n}\r\nexport default withRouter(BreadCrumbs);","import React from 'react'\r\nimport \"./Main.css\";\r\nconst Main = (props) => {\r\n    return (\r\n        <div className = \"Main\">\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main\r\n","export default __webpack_public_path__ + \"static/media/resturantLogo1.cd260fe8.png\";","import React ,{useState} from 'react';\r\nimport ResturantLogo from \"../../assets/images/resturantLogo1.png\";\r\nimport {Link} from \"react-router-dom\";\r\nimport \"./Header.css\";\r\n\r\nconst Header =() => {\r\n\r\n  const [colorChange, setColorchange] = useState(false);\r\n  const changeNavbarColor = () =>{\r\n     if(window.scrollY >= 80){\r\n       setColorchange(true);\r\n     }\r\n     else{\r\n       setColorchange(false);\r\n     }\r\n\r\n  };\r\n  window.addEventListener('scroll', changeNavbarColor);\r\nreturn (\r\n<div className = \"head\">\r\n<header>\r\n    <nav className={colorChange ? \"navbar navbar-expand-lg navbar-dark navbar-fixed-top scrollTrue\" : \"navbar navbar-expand-lg navbar-dark navbar-fixed-top scrollFalse\"} >\r\n     <div className = \"container\">\r\n     <Link  to = \"/\" className=\"navbar-brand\">\r\n        <img className=\"navImage mx-sm-0\" src={ResturantLogo} width=\"40\" height=\"40\" alt=\"Indian Resturant Logo\"/>\r\n      </Link>\r\n      <Link className=\"navbar-brand m-0\" to = \"/\">The Indian Resturant</Link>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\"\r\n        aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item active\">\r\n              <Link  to = \"/\" className=\"nav-link\">Food Menu</Link> \r\n              {/* <a className=\"nav-link\" href=\"index.html\">Food Menu<span className=\"sr-only\">(current)</span></a> */}\r\n          </li>\r\n          <li className=\"nav-item\">\r\n          <Link  to = \"/customerorder\" className=\"nav-link\">Order Food</Link>\r\n              {/* <a className=\"nav-link\" href=\"Pages/OrderFood.html\">Order Food</a> */}\r\n          </li>\r\n          <li className=\"nav-item dropdown\">\r\n              <a className=\"nav-link dropdown-toggle\" href=\"/\" id=\"navbarDropdown\" role=\"button\"\r\n                  data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                  Admin Backend\r\n              </a>\r\n              <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                  <Link className=\"dropdown-item\" to=\"/admin/quantity\">Quantity</Link>\r\n                  <Link className=\"dropdown-item\" to=\"/admin/unit\">Unit</Link>\r\n                  <Link className=\"dropdown-item\" to=\"/admin/ingredientmaster\">Ingridient Master</Link>\r\n                  <Link className=\"dropdown-item\" to=\"/admin/vendormaster\">Vendor Master</Link>\r\n                  <Link className=\"dropdown-item\" to=\"/admin/vendoringredientmapping\">Vendor Ingridient Mapping</Link>\r\n                  <Link className=\"dropdown-item\" to=\"/admin/itemrecipe\">Item Reciepe</Link>\r\n                  <Link className=\"dropdown-item\" to=\"/admin/recipegenerator\">Reciepe Generator</Link>\r\n                  <Link className=\"dropdown-item\" to=\"/admin/inventory\">Inventory</Link>\r\n                  <Link className=\"dropdown-item\" to=\"/admin/monthlyexpense\">Monthly Expense</Link>\r\n                  <Link className=\"dropdown-item\" to=\"/admin/investmentbudget\">Investment Budget</Link>\r\n                  <Link className=\"dropdown-item\" to=\"/admin/tablereservation\">Table Reservation</Link>\r\n              </div>\r\n          </li>\r\n          <li className=\"nav-item dropdown\">\r\n              <a className=\"nav-link dropdown-toggle\" href=\"/\" id=\"navbarDropdown\" role=\"button\"\r\n                  data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                  Reports\r\n              </a>\r\n              <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                  <Link className=\"dropdown-item\" to=\"/reports/orderdetail\">Order Detail</Link>\r\n                  <Link className=\"dropdown-item\" to=\"/reports/topsellingdishes\">Top Selling Dishes</Link>\r\n                  <Link className=\"dropdown-item\" to=\"/reports/profitlossmaster\">Profilt Loss Master</Link>\r\n              </div>\r\n          </li>\r\n      </ul>\r\n      </div>\r\n\r\n     </div>\r\n    </nav>\r\n  </header>\r\n</div>\r\n    )\r\n }\r\n\r\nexport default Header\r\n","import React from 'react';\r\nimport \"./Footer.css\";\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport InstagramIcon from '@material-ui/icons/Instagram';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className = \"foot\">\r\n            <footer >\r\n                <nav className=\"navbar navbar-expand-lg  navbar-dark\" style = {{backgroundColor : \"rgba(0,0,0,0.4)\",fontSize : \"12px\"}}>\r\n                    <div className=\"container navbar-nav align-items-center\">\r\n                        <div className=\"row w-100 mx-auto\">\r\n                            <div className=\"col-3 col-md-2 nav-item \">\r\n                                <a className=\"nav-link\" href=\"/\">About us</a>\r\n                            </div>\r\n                            <div className=\"col-3 col-md-2 nav-item\">\r\n                                <a className=\"nav-link\" href=\"/\">Privacy</a>\r\n                            </div>\r\n                            <div className=\"col-3  col-md-2 nav-item\">\r\n                            <Link  to = \"/direction\" className=\"nav-link\">Direction</Link>\r\n                                {/* <a className=\"nav-link\" href=\"/\">Direction</a> */}\r\n                            </div>\r\n                            <div className=\"col-3 col-md-2 nav-item\">\r\n                                <a className=\"nav-link\" href=\"/\">Connect Us</a>\r\n                            </div>\r\n                            <div className=\"col-6 col-md-4 mx-auto d-md-flex d-none justify-content-around \">\r\n                                <a href=\"https://www.facebook.com/\" className=\"nav-link d-flex justify-content-center align-self-center\"><FacebookIcon/></a>\r\n                                <a href=\"https://twitter.com/\" className=\"nav-link d-flex justify-content-center align-self-center\"><TwitterIcon/></a>\r\n                                <a href=\"https://www.instagram.com/\" className=\"nav-link d-flex justify-content-center align-self-center\"><InstagramIcon/></a>\r\n                                <a href=\"https://in.linkedin.com/\" className=\"nav-link d-flex justify-content-center align-self-center\"><LinkedInIcon/></a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n            </footer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n\r\n","export const INIT = \"INIT\";\r\n\r\nexport const SUCCESS = \"SUCCESS\";\r\n\r\nexport const SUBMIT_HANDLER_INIT = \"SUBMIT_HANDLER_INIT\";\r\n\r\nexport const SUBMIT_HANDLER_SUCCESS = \"SUBMIT_HANDLER_SUCCESS\";\r\n\r\nexport const EDIT_HANDLER_INIT = \"EDIT_HANDLER_INIT\";\r\n\r\nexport const EDIT_HANDLER_SUCCESS = \"EDIT_HANDLER_SUCCESS\";\r\n\r\nexport const DELETE_HANDLER_INIT = \"DELETE_HANDLER_INIT\";\r\n\r\nexport const DELETE_HANDLER_SUCCESS = \"DELETE_HANDLER_SUCCESS\";\r\n\r\nexport const initilizerHandlerInit = () =>{\r\n    return{\r\n        type : INIT\r\n    }\r\n}\r\n\r\nexport const initilizerHandlerSuccess = (foodItemArray) =>{\r\n    return{\r\n        type : SUCCESS,\r\n        foodItemArray : foodItemArray\r\n    }\r\n}\r\nexport const submitHandlerInit = (editMode,foodItemObject) =>{\r\n    return{\r\n        type : SUBMIT_HANDLER_INIT,\r\n        editMode : editMode,\r\n        foodItemObject : foodItemObject\r\n    }\r\n}\r\n\r\nexport const submitHandlerSuccess = (foodItemArray,editMode,editObject) =>{\r\n    return{\r\n        type : SUBMIT_HANDLER_SUCCESS,\r\n        editMode : editMode,\r\n        foodItemArray : foodItemArray,\r\n        editObject : editObject\r\n    }\r\n}\r\n\r\nexport const editHandlerInit = (foodItemObject) =>{\r\n    return{\r\n        type : EDIT_HANDLER_INIT,\r\n        foodItemObject : foodItemObject,\r\n        editMode : true\r\n    }\r\n}\r\nexport const editHandlerSuccess = (foodItemArray,editObject,editMode) =>{\r\n    return{\r\n        type : EDIT_HANDLER_SUCCESS,\r\n        foodItemArray : foodItemArray,\r\n        editObject : editObject,\r\n        editMode : editMode\r\n    }\r\n}\r\nexport const deleteHandlerInit = (foodItemObject) =>{\r\n    return{\r\n        type : DELETE_HANDLER_INIT,\r\n        foodItemObject : foodItemObject\r\n    }\r\n}\r\n\r\nexport const deleteHandlerSuccess = (foodItemArray) =>{\r\n    return{\r\n        type : DELETE_HANDLER_SUCCESS,\r\n        foodItemArray : foodItemArray\r\n    }\r\n}\r\nconst initialState = {\r\n    editMode: false,\r\n    editObject : {},\r\n    foodItemArray : []\r\n}\r\n\r\nconst FoodItem = (state=initialState,action) =>{\r\n    switch(action.type){\r\n        case SUCCESS : \r\n        return{\r\n            ...state,\r\n            foodItemArray : action.foodItemArray\r\n        }\r\n        case SUBMIT_HANDLER_SUCCESS : \r\n        return{\r\n            ...state,\r\n            editMode : action.editMode,\r\n            foodItemArray : action.foodItemArray,\r\n            editObject : action.editObject\r\n        }\r\n        case EDIT_HANDLER_SUCCESS : \r\n        return{\r\n            ...state,          \r\n            editMode : action.editMode,\r\n            editObject : action.editObject,\r\n            foodItemArray : action.foodItemArray\r\n        }\r\n        case DELETE_HANDLER_SUCCESS : \r\n        return{\r\n            ...state,\r\n            foodItemArray : action.foodItemArray \r\n        }\r\n        default :return state;\r\n    }\r\n}\r\nexport default FoodItem;","import React from 'react';\r\nimport \"./FormWrapper.css\";\r\n\r\nconst FormWrapper = (props) => {\r\n    return (\r\n        <div className=\"col-lg-5 col-sm-12\">\r\n            <div className=\"jumbotron formWrapper p-3\">\r\n                {props.children}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default FormWrapper;","import React from 'react'\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Table.css\";\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Table, Thead, Tbody, Tr, Th, Td } from 'react-super-responsive-table';\r\nimport 'react-super-responsive-table/dist/SuperResponsiveTableStyle.css';\r\n\r\n\r\nconst TableContainer = ({tableData,headingColumns,addEditButton,addDeleteButton,breakOn,editHandler,deleteHandler,id}) => {\r\n    const onEditHandler = (rowDetail)=>() =>{\r\n        editHandler(rowDetail);\r\n    }\r\n    const onDeleteHandler = (rowDetail) => () =>{\r\n        deleteHandler(rowDetail);\r\n    }\r\n    \r\n    let tableClass = \"table table-sTriped table-dark\";\r\n    if(breakOn === \"small\"){\r\n        tableClass += \"table table-responsive-sm\";\r\n    }else if(breakOn === \"medium\"){\r\n        tableClass += \"table  table-responsive-md\";\r\n    }else if(breakOn === \"large\"){\r\n        tableClass += \"table table-responsive-lg\";\r\n    }\r\n\r\n    const data = tableData.map((row,index) =>{\r\n        let rowData = [];\r\n        let i = 0;\r\n        for(const key in row){\r\n           rowData.push({\r\n              key:headingColumns[i],\r\n              val:row[key] \r\n           }) \r\n           i++;\r\n        }\r\n        return <Tr key = {index}>\r\n            {rowData.map((data,index) =>\r\n            <Td key = {index} data-heading = {data.key}>{data.val}</Td>)}\r\n            {addEditButton && \r\n            <Td><button className = \"btn btn-outline-dark btn-sm\" onClick ={onEditHandler(row)}><EditIcon color=\"secondary\"/></button></Td>}\r\n            {addDeleteButton && \r\n            <Td><button className = \"btn btn-outline-dark btn-sm\" onClick = {onDeleteHandler(row)} ><DeleteIcon color=\"secondary\"/></button></Td>\r\n            }\r\n        </Tr>\r\n    })\r\n    return (\r\n        <div className = \"table-container mx-auto\">            \r\n            <Table className = {tableClass} id={id} style ={{backgroundColor : \"rgba(0,0,0,0.4)\",fontSize : \"12px\"}}>\r\n                <Thead>\r\n                    <Tr>{headingColumns.map((col,index)=>(<Th key = {index}>{col}</Th>))}</Tr>\r\n                </Thead>\r\n                <Tbody>\r\n                    {data}\r\n                </Tbody>\r\n            </Table>\r\n        </div>\r\n    )\r\n}\r\n\r\nTableContainer.propTypes = {\r\n    tableData : PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    headingColumns : PropTypes.arrayOf(PropTypes.string).isRequired,\r\n    breakOn : PropTypes.oneOf(['small','medium','large'])\r\n}\r\nexport default TableContainer;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Button = (props) => {\r\n  const { className, ...allProps } = { ...props };\r\n  \r\n  let classNameProp = [\"btn btn-outline-danger\"];\r\n  if (className) {\r\n    classNameProp.push(className);\r\n  }\r\n  let assignedClass = classNameProp.join(\" \");\r\n  return (  \r\n      <button className={assignedClass} {...allProps}>\r\n        {props.children}\r\n      </button>   \r\n  );\r\n};\r\nButton.propTypes = {\r\n  className : PropTypes.string,\r\n  onClick : PropTypes.func  \r\n}\r\nexport default Button;","import React, { Component } from 'react'\r\n\r\nexport default class DropDown extends Component {\r\n    render() {\r\n        let options = this.props.options.map(opt =>(\r\n            <option key = {opt} value = {opt}>{opt}</option>\r\n        ));\r\n        return (\r\n            <>\r\n              <select className =\"custom-select mr-sm-2\" {...this.props}>\r\n                  {options}\r\n              </select>  \r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport \"./Pagination.css\";\r\nimport Button from \"../Button/Button\";\r\nimport DropDown from \"../DropDown/DropDown\";\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\n\r\nconst Pagination = ({\r\n  postPerPage,\r\n  totalPosts,\r\n  paginate,\r\n  currentPage,\r\n  pageSelect,\r\n}) => {\r\n\r\n  const pageNumbers = [];\r\n  const lastPage = Math.ceil(totalPosts / postPerPage);\r\n  for (let i = 1; i <= Math.ceil(totalPosts / postPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n\r\n \r\n  return (\r\n    <div className = \"Pagination\">\r\n     <nav aria-label=\"Page navigation example \">\r\n      <ul className=\"pagination justify-content-end \">\r\n      <li className=\"page-item mx-1\"><DropDown  className = \"form-control\" onClick={(e) => pageSelect(e.target.value)} options = {[3,5,10,20] }></DropDown></li>\r\n      <li className=\"page-item\"><Button className = \"btn-sm\" onClick={() => paginate(1)} disabled={currentPage === 1 ? true : false} ><FirstPageIcon /></Button></li>\r\n      <li className=\"page-item\"><Button className = \"btn-sm\" onClick={() => paginate(currentPage + 1)} disabled={currentPage === lastPage ? true : false}><NavigateNextIcon /></Button></li>\r\n      {pageNumbers.map((number) => (\r\n            <li key={number} className = \"page-item mx-1\"><Button className = \"btn-sm\" onClick={() => paginate(number)}>{number}</Button></li>\r\n        ))}\r\n        <li className=\"page-item\"><Button className = \"btn-sm\" onClick={() => paginate(currentPage - 1)} disabled={currentPage === 1 ? true : false}><NavigateBeforeIcon /></Button></li>\r\n        <li className=\"page-item\"> <Button className = \"btn-sm\" onClick={() => paginate(Math.ceil(totalPosts / postPerPage))} disabled={currentPage === lastPage ? true : false}><LastPageIcon /></Button></li>\r\n      </ul>\r\n     </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;","import React, { useState } from 'react';\r\nimport Table from \"../../UI/Table/Table\";\r\nimport Pagination from \"../../UI/Pagination/Pagination\";\r\nimport Button from \"../../UI/Button/Button\";\r\nimport ReactToPdf from \"react-to-pdf\";\r\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel'; \r\nconst ref = React.createRef();\r\n\r\nconst TableWrapper = (props) => {\r\n    const [state, setState] = useState({\r\n        currentPage: 1,\r\n        postPerPage: 3,\r\n    })\r\n    const paginate = (pageNumbers) => {\r\n        setState({ ...state, currentPage: pageNumbers })\r\n    }\r\n    const pageSelect = (pagePerPost) => {\r\n        setState({ ...state, postPerPage: pagePerPost })\r\n    }\r\n\r\n    const indexOfLastPost = state.currentPage * state.postPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - state.postPerPage;\r\n    const currentItem = props.tableData.slice(indexOfFirstPost, indexOfLastPost);\r\n    return (\r\n        <div className=\"jumbotron formWrapper\">\r\n             <div className=\"row justify-content-end\">\r\n                <div className=\"col-6 col-md-4\">   \r\n                  <ReactToPdf targetRef = {ref}>{({toPdf})=><Button className = \"btn-sm\" onClick = {toPdf}>Export pdf</Button>}</ReactToPdf>\r\n                </div>\r\n                <div className=\"col-6 col-md-4\">      \r\n                    <ReactHTMLTableToExcel  className=\"btn btn-outline-danger btn-sm\"  table={\"emp\"}  filename=\"ReportExcel\"  sheet=\"Sheet\"  buttonText=\"Export excel\" /> \r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"mx-auto\" ref={ref} style={{width: \"60vw\"}}>\r\n                    <Table  \r\n                        id = {\"emp\"}                      \r\n                        tableData={currentItem}\r\n                        headingColumns={props.headingColumns}\r\n                        breakOn={props.breakOn}\r\n                        addEditButton={props.addEditButton}\r\n                        addDeleteButton={props.addDeleteButton}\r\n                        editHandler={props.editHandler}\r\n                        deleteHandler={props.deleteHandler}\r\n                    />\r\n                </div>\r\n            </div>            \r\n            <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                    <Pagination pageSelect={pageSelect} paginate={paginate} currentPage={state.currentPage} postPerPage={state.postPerPage} totalPosts={props.tableData.length} />\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default TableWrapper;","import React, { useState,useEffect } from 'react';\r\nimport {useDispatch,useSelector} from \"react-redux\";\r\nimport * as action from \"../../store/reducer/FoodItem/FoodItemReducer\";\r\nimport FormWrapper from \"../../component/FormWrapper/FormWrapper\";\r\nimport TableWrapper from \"../../component/TableWrapper/TableWrapper\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport classNames from \"classnames\";\r\nimport Button from \"../../UI/Button/Button\";\r\n\r\nconst FoodItem = () => {\r\n    const{register,handleSubmit,formState:{errors,isSubmitted,isValid},reset} = useForm({mode : \"onChange\"});\r\n\r\n    const[editMode,setEditMode] = useState(false);\r\n    \r\n    const[id,setId] = useState(null);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const editFoodItem = useSelector(state => state.FoodItem.editMode);\r\n\r\n    const editObject = useSelector(state =>state.FoodItem.editObject);\r\n  \r\n    const foodItemArray  = useSelector(state => state.FoodItem.foodItemArray);\r\n\r\n          \r\n    useEffect(() => {\r\n        dispatch(action.initilizerHandlerInit());\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(isSubmitted && isValid){     \r\n           reset();  \r\n        }        \r\n    },[isSubmitted,isValid]);\r\n\r\n    useEffect(()=>{\r\n        if(editFoodItem !== editMode){          \r\n            const {id,foodItem,foodPrice} = {...editObject} \r\n            setEditMode(editFoodItem );\r\n            setId(id);\r\n            reset({foodItem : foodItem , foodPrice : foodPrice});    \r\n        }\r\n    },[editObject,editFoodItem])\r\n\r\n    const onSubmit = (data) => {\r\n        const foodItemObject = {};\r\n        foodItemObject.id = id;\r\n        foodItemObject.foodItem = data.foodItem;\r\n        foodItemObject.foodPrice = +data.foodPrice;\r\n        dispatch(action.submitHandlerInit(editMode,foodItemObject));     \r\n    }\r\n\r\n    return (\r\n        <div className = \"container-fluid text-center\">\r\n            <div className=\"row \">\r\n            <h1 className=\"display-4 heading\">Food item</h1>\r\n            </div>\r\n            <div className=\"row justify-content-around\">\r\n                <FormWrapper>\r\n                <div className = \"w-75 mx-auto\">\r\n                <form onSubmit = {handleSubmit(onSubmit)}>\r\n                        <div className = \"form-group my-2\">\r\n                            <label htmlFor=\"foodItem\"> Food Item</label>\r\n                            <input className = {classNames(\"form-control\",{\"is-invalid\" : errors.foodItem})} type=\"text\" placeholder = \"Food Item\" {...register(\"foodItem\",{required : \"Field  Is Required\"})}/>\r\n                            {errors.foodItem && <p className=\"invalid-feedback\">{errors.foodItem.message}</p>}\r\n                        </div>\r\n                        <div className = \"form-group my-2\">\r\n                            <label htmlFor=\"foodPrice\"> Price</label>\r\n                            <input className = {classNames(\"form-control\",{\"is-invalid\" : errors.foodPrice})} type=\"number\" placeholder = \"Food Price\" {...register(\"foodPrice\",{required : \"Field  Is Required\"})}/>\r\n                            {errors.foodPrice && <p className=\"invalid-feedback\">{errors.foodPrice.message}</p>}\r\n                        </div>\r\n                        <Button className =\"btn-sm\" type = \"submit\">Save</Button>\r\n                    </form>\r\n                </div>\r\n                </FormWrapper>\r\n                <div className=\"col-lg-6 col-sm-12  \">\r\n                <TableWrapper \r\n                tableData = {foodItemArray}\r\n                headingColumns = {[\"Id\",\"Food Item\",\"Price\",\"Edit\",\"Delete\"]}\r\n                breakOn = \"small\"\r\n                addDeleteButton = {true}\r\n                addEditButton = {true}\r\n                editHandler = {(data)=>dispatch(action.editHandlerInit(data))}\r\n                deleteHandler = {(data)=>dispatch(action.deleteHandlerInit(data))}\r\n                 />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FoodItem;","export const AutoComplete = (e,Array,elementValue,setArray,setDisplay,setIndex,indexing)=>{\r\n    let inputValue = e.target.value;\r\n    const array = JSON.parse(localStorage.getItem(Array));\r\n    let emptyArray = [];\r\n    let wrongArray = [];\r\n    array.forEach(element => {\r\n        let matchValue = null;\r\n        if(elementValue === \"foodItem\"){\r\n            matchValue = element.foodItem.match(inputValue);    \r\n        }\r\n        else if(elementValue === \"ingredientName\"){\r\n            matchValue = element.ingredientName.match(inputValue);\r\n        }\r\n        else if(elementValue === \"vendorName\"){\r\n            matchValue = element.vendorName.match(inputValue);\r\n        }            \r\n        if (matchValue !== null) {\r\n            let object = {};\r\n            if(elementValue === \"foodItem\"){\r\n                let objIndex = array.findIndex((obj => obj.foodItem === matchValue.input));                     \r\n                object.id = array[objIndex].id;\r\n                object.foodItem = array[objIndex].foodItem; \r\n                object.foodPrice = array[objIndex].foodPrice;\r\n                setIndex !== null && setIndex(indexing) \r\n            }\r\n            if(elementValue === \"ingredientName\"){\r\n                let objIndex = array.findIndex((obj => obj.ingredientName === matchValue.input));\r\n                object.id = array[objIndex].id;\r\n                object.ingredientName = array[objIndex].ingredientName;  \r\n                if(Array === \"vendorMappingArray\"){\r\n                object.vendorQuoteArray = array[objIndex].vendorQuoteArray;\r\n                object.unitId = array[objIndex].unitId; \r\n                }    \r\n                setIndex !== null && setIndex(indexing) \r\n            }\r\n            if(elementValue === \"vendorName\"){\r\n                let objIndex = array.findIndex((obj => obj.vendorName === matchValue.input));\r\n                object.id = array[objIndex].id;\r\n                object.vendorName = array[objIndex].vendorName;    \r\n            }\r\n            emptyArray.push(object);\r\n            setArray(emptyArray);\r\n            setDisplay(true);\r\n\r\n        }\r\n        else {\r\n            let inputLength = inputValue.length\r\n            if (inputLength > 6) {\r\n                wrongArray.push(false)\r\n            }\r\n        }\r\n    });\r\n    let inputLength = inputValue.length;\r\n    if(wrongArray !== null && wrongArray.every((condition) => condition ===  false) && inputLength > 6 ){\r\n        if(elementValue === \"ingredientName\"){\r\n            if(Array === \"vendorMappingArray\"){\r\n                let adminDecision = window.confirm(\r\n                    \"This Ingridient Not Mapped with Vendor..Please Click to Add\"\r\n                   );\r\n                 if (adminDecision) {\r\n                     window.location.href = \"/admin/vendoringredientmapping\";\r\n                 } \r\n            }\r\n            else{\r\n                let adminDecision = window.confirm(\r\n                    \"This Ingridient Not In List..Please Click to Add\"\r\n                   );\r\n                 if (adminDecision) {\r\n                     window.location.href = \"/admin/ingredientmaster\";\r\n                 }\r\n            }\r\n        }\r\n\r\n        if(elementValue === \"foodItem\"){\r\n            let adminDecision = window.confirm(\r\n                \"This Food Item Not In List..Please Click to Add\"\r\n               );\r\n             if (adminDecision) {\r\n                 window.location.href = \"/\";\r\n             }\r\n        }\r\n\r\n        if(elementValue === \"vendorName\"){\r\n            let adminDecision = window.confirm(\r\n                \"This Vendor Not In List..Please Click to Add\"\r\n               );\r\n             if (adminDecision) {\r\n                 window.location.href = \"/admin/vendormaster\";\r\n             }\r\n        }\r\n    }\r\n}\r\n// export function AutoComplete(input, array, div) {\r\n    // let emptyArray = [];\r\n    // array.forEach(element => {\r\n    //     let matchValue = element.ingridientname.match(input.value);\r\n    //     if (matchValue !== null) {\r\n    //         let objIndex = array.findIndex((obj => obj.ingridientname == matchValue.input));\r\n    //         let object = {};\r\n    //         object.Id = array[objIndex].Id;\r\n    //         object.ingridientname = array[objIndex].ingridientname;\r\n    //         div.style.display = \"flex\";\r\n    //         emptyArray.push(object);\r\n    //         callFunction(emptyArray, div, input);\r\n    //     }\r\n    //     else {\r\n    //         let inputValue = input.value;\r\n    //         let inputLength = inputValue.length;\r\n    //         if (inputLength > 6) {\r\n    //             if (confirm(\"This Ingridient Not In List..Please Click to Add\")) {\r\n    //                 window.location.href = \"IngridientMaster.html\";\r\n    //             }\r\n    //         }\r\n    //     }\r\n    // });\r\n// }\r\n// Create Ul Li Using Array \r\n// export function callFunction(emptyArray, div, input) {\r\n//     div.innerHTML = \"\";\r\n//     emptyArray.forEach(el => {\r\n//         let ingridientUl = createElements(div, \"ul\", \"col-12 ingridientNameUl\", null, null, null, null);\r\n//         let ingridientli = createElements(ingridientUl, \"li\", \"col-12 ingridientNameLi\", null, el.ingridientname, null, null)\r\n//         ingridientli.addEventListener(\"click\", function () {\r\n//             clickEventForLi(ingridientli, input, div);\r\n//         });\r\n//     });\r\n// }\r\n\r\n// Click Event on Li \r\n// function clickEventForLi(li, input, div) {\r\n//     input.value = li.innerText;\r\n//     div.style.display = \"none\";\r\n// }\r\n\r\n\r\n// export const AutoComplete=(e,Array)=>{\r\n//     let inputValue = e.target.value;\r\n//     const array = JSON.parse(localStorage.getItem(Array));\r\n//     let emptyArray = [];\r\n//     array.forEach(element => {\r\n//         let matchValue = element.foodItem.match(inputValue);\r\n//         if (matchValue !== null) {\r\n//             let objIndex = array.findIndex((obj => obj.foodItem === matchValue.input));\r\n//             let object = {};\r\n//             object.id = array[objIndex].id;\r\n//             object.fooIitem = array[objIndex].fooditem;           \r\n//             emptyArray.push(object);\r\n//             return emptyArray;\r\n//         }\r\n//         else {\r\n//             let inputLength = inputValue.length;\r\n//             if (inputLength > 6) {\r\n//                 let adminDecision = window.confirm(\r\n//                     \"This Ingridient Not In List..Please Click to Add\"\r\n//                   );\r\n//                 if (adminDecision) {\r\n//                     <Link exact to = \"/\" />\r\n//                 }\r\n//             }\r\n//         }\r\n//     });\r\n// }\r\n// Create Ul Li Using Array \r\n// export function callFunctionItem(emptyArray, div, input) {\r\n//     div.innerHTML = \"\";\r\n//     emptyArray.forEach(el => {\r\n//         let foodItemUl = createElements(div, \"ul\", \"col-12 ingridientNameUl\", null, null, null, null);\r\n//         let foodItemli = createElements(foodItemUl, \"li\", \"col-12 ingridientNameLi\", null, el.fooditem, null, null)\r\n//         foodItemli.addEventListener(\"click\", function () {\r\n//             clickEventForLi(foodItemli, input, div);\r\n//         });\r\n//     });\r\n// }\r\n\r\n// Vendor AutoComplet\r\n// export function autoCompleteVendor(input, array, div){\r\n//     let emptyArray = [];\r\n//     array.forEach(element => {\r\n//         let matchValue = element.vendorname.match(input.value);\r\n//         if (matchValue !== null) {\r\n//             let objIndex = array.findIndex((obj => obj.vendorname == matchValue.input));\r\n//             let object = {};\r\n//             object.Id = array[objIndex].Id;\r\n//             object.vendorname = array[objIndex].vendorname;\r\n//             div.style.display = \"flex\";\r\n//             emptyArray.push(object);\r\n//             callFunctionVendor(emptyArray, div, input);\r\n//         }\r\n//         else {\r\n//             let inputValue = input.value;\r\n//             let inputLength = inputValue.length;\r\n//             if (inputLength > 6) {\r\n//                 if (confirm(\"This Vendor Not In List..Please Click to Add\")) {\r\n//                     window.location.href = \"VendorMaster.html\";\r\n//                 }\r\n//             }\r\n//         }\r\n//     });\r\n// }\r\n\r\n// Create Ul Li Using Array \r\n// function callFunctionVendor(emptyArray, div, input) {\r\n//     div.innerHTML = \"\";\r\n//     emptyArray.forEach(el => {\r\n//         let vendorUl = createElements(div, \"ul\", \"col-12 ingridientNameUl\", null, null, null, null);\r\n//         let vendorli = createElements(vendorUl, \"li\", \"col-12 ingridientNameLi\", null, el.vendorname, null, null)\r\n//         vendorli.addEventListener(\"click\", function () {\r\n//             clickEventForLi(vendorli, input, div);\r\n//         });\r\n//     });\r\n// }","// function to convert Id To Value\r\nexport const getQtyIdToValue = (element) =>{\r\n    let qtyDetail = JSON.parse(localStorage.getItem(\"quantityArray\"));\r\n    let qtyValue;\r\n    let qtyValueN;\r\n    qtyDetail.forEach(el =>{\r\n        if(+element === +el.id){\r\n             qtyValue = el.quantity;\r\n             qtyValueN = Number(qtyValue);\r\n        }\r\n    });\r\n    return qtyValueN;\r\n}\r\n// function to ingredient convert  Value To Id\r\nexport const getingredientIdToValue = (element) =>{\r\n    let ingredientDetail = JSON.parse(localStorage.getItem(\"ingredientArray\"));\r\n    let ingredientValue;   \r\n    ingredientDetail.forEach(el =>{\r\n        if(+element === +el.id){\r\n            ingredientValue = el.ingredientName;\r\n        }\r\n    });\r\n    return ingredientValue;\r\n}\r\n// function to Unit convert  ID To Value\r\nexport const getUnitIdToValue = (element) => {\r\n    let unitDetail = JSON.parse(localStorage.getItem(\"unitArray\"));\r\n    let unitValue;   \r\n    unitDetail.forEach(el =>{\r\n        if(+element === +el.id){\r\n            unitValue = el.unit;\r\n        }\r\n    });\r\n    return unitValue;\r\n}\r\n// function to convert Value To Id\r\nexport const getQtyValueToId = (element)=>{\r\n    let qtyDetail = JSON.parse(localStorage.getItem(\"quantityArray\"));\r\n    let qtyId;\r\n    qtyDetail.forEach(el =>{\r\n        if(+element === +el.quantity){\r\n             qtyId = el.Id;\r\n        }\r\n    });\r\n    return qtyId;\r\n}\r\n// Function For ingredient Value To Id\r\nexport const getIngredientValueToId = (element) =>{\r\n    let ingredientDetail = JSON.parse(localStorage.getItem(\"ingredientArray\"));\r\n    let ingredientId;\r\n    ingredientDetail.forEach(el =>{\r\n        if(element === el.ingredientName){\r\n            ingredientId = el.id;\r\n        }\r\n    });\r\n    return ingredientId;\r\n}\r\n// function to convert Value To Id\r\nexport const getUnitValueToId = (element)=>{\r\n    let unitDetail = JSON.parse(localStorage.getItem(\"unitArray\"));\r\n    let unitId;\r\n    unitDetail.forEach(el =>{\r\n        if(element === el.unit){\r\n             unitId = el.id;\r\n        }\r\n    });\r\n    return unitId;\r\n}    \r\n\r\n// // Menu Value To Id\r\n// export const createMenuValueToId = (element) =>{\r\n//     let menuDetail = JSON.parse(localStorage.getItem(\"menuReciepeDetail\"));\r\n//     let menuId;\r\n//     menuDetail.forEach(el =>{\r\n//         if(element == el.fooditem){\r\n//             menuId = el.Id;\r\n//         }\r\n//     })\r\n//     return menuId;\r\n// }\r\n// // Menu Id To Value\r\n// export const createMenuIdToValue = (element)=>{\r\n//     let menuDetail = JSON.parse(localStorage.getItem(\"menuReciepeDetail\"));\r\n//     let menuValue;\r\n//     menuDetail.forEach(el =>{\r\n//         if(element == el.Id){\r\n//             menuValue = el.fooditem;\r\n//         }\r\n//     });\r\n//     return menuValue;\r\n// }\r\n// Vendor Value To Id\r\nexport const createVendorValueToId = (element) =>{\r\n    let vendorArray = JSON.parse(localStorage.getItem(\"vendorArray\"));\r\n    let vendorId;\r\n    vendorArray.forEach(el =>{\r\n        if(element === el.vendorName){\r\n            vendorId = el.id;\r\n        }\r\n    })\r\n    return vendorId;\r\n}\r\n// Vendor Id To Value\r\nexport const createVendorIdToValue=(element)=>{\r\n    let vendorArray = JSON.parse(localStorage.getItem(\"vendorArray\"));\r\n    let vendorValue;\r\n    vendorArray.forEach(el =>{\r\n        if(+element === +el.id){\r\n            vendorValue = el.vendorName;\r\n        }\r\n    });\r\n    return vendorValue;\r\n}","import {getQtyIdToValue,getUnitIdToValue} from \"./stateConversion\";\r\n\r\nexport const PriceCalculation=(ingredient,qty,unit,index,setPrice,setPriceIndex)=>{\r\nif(ingredient && qty && unit){\r\n    let reciepeRequiredPrice;\r\n    let ingredientDetail = JSON.parse(localStorage.getItem(\"ingredientArray\"));\r\n    ingredientDetail.forEach(element => {\r\n        if (element.ingredientName === ingredient) {\r\n            let ingredientQty = getQtyIdToValue(element.quantityId)\r\n            let ingredientPrice = Number(element.ingredientPrice);\r\n            let ingredientUnit = getUnitIdToValue(element.unitId);\r\n            let reciepeRequiredQty = getQtyIdToValue(qty);\r\n            let reciepeRequiredUnit = getUnitIdToValue(unit);\r\n            if (ingredientUnit === reciepeRequiredUnit) {\r\n                reciepeRequiredPrice = Math.ceil(ingredientPrice / ingredientQty) * reciepeRequiredQty;\r\n            }\r\n            else {\r\n                if (reciepeRequiredUnit === \"gram\" || reciepeRequiredUnit === \"ml\") {\r\n                    reciepeRequiredPrice = Math.ceil(ingredientPrice / ingredientQty) * reciepeRequiredQty / 1000;\r\n                }\r\n                else if (reciepeRequiredUnit === \"kg\" || reciepeRequiredUnit === \"litre\") {\r\n                    reciepeRequiredPrice = Math.ceil(ingredientPrice / ingredientQty) * reciepeRequiredQty * 1000;\r\n                }\r\n            }\r\n        }\r\n    });\r\n    setPrice(reciepeRequiredPrice);\r\n    setPriceIndex(index);     \r\n    return reciepeRequiredPrice;\r\n    }\r\n}\r\n\r\nexport const PriceVendorCalculation=(ingredient,qty,unit,index,setPrice,setPriceIndex,vendorId)=>{\r\n    if(ingredient && qty && unit && vendorId){\r\n        let reciepeRequiredPrice;\r\n        let vendorDetail = JSON.parse(localStorage.getItem(\"vendorMappingArray\"));\r\n        const ingredientObject = vendorDetail.find(item => item.ingredientName === ingredient);\r\n        const vendorObject = ingredientObject.vendorQuoteArray.find(vendor =>vendor.vendorId === +vendorId);\r\n        let ingredientPrice = Number(vendorObject.quotePrice);\r\n\r\n        let ingredientDetail = JSON.parse(localStorage.getItem(\"ingredientArray\"));\r\n        ingredientDetail.forEach(element => {\r\n            if (element.ingredientName === ingredient) {\r\n                let ingredientQty = getQtyIdToValue(element.quantityId)\r\n                let ingredientUnit = getUnitIdToValue(element.unitId);\r\n                let reciepeRequiredQty = getQtyIdToValue(qty);\r\n                let reciepeRequiredUnit = getUnitIdToValue(unit);\r\n                if (ingredientUnit === reciepeRequiredUnit) {\r\n                    reciepeRequiredPrice = Math.ceil(ingredientPrice / ingredientQty) * reciepeRequiredQty;\r\n                }\r\n                else {\r\n                    if (reciepeRequiredUnit === \"gram\" || reciepeRequiredUnit === \"ml\") {\r\n                        reciepeRequiredPrice = Math.ceil(ingredientPrice / ingredientQty) * reciepeRequiredQty / 1000;\r\n                    }\r\n                    else if (reciepeRequiredUnit === \"kg\" || reciepeRequiredUnit === \"litre\") {\r\n                        reciepeRequiredPrice = Math.ceil(ingredientPrice / ingredientQty) * reciepeRequiredQty * 1000;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        setPrice(reciepeRequiredPrice);\r\n        setPriceIndex(index);     \r\n        return reciepeRequiredPrice;\r\n        }\r\n}\r\n\r\nexport const PriceFoodCalculation=(foodItem,qty,index,setPrice,setPriceIndex)=>{\r\n    if(foodItem && qty ){    \r\n        let foodPriceRequired;\r\n        let foodDetail = JSON.parse(localStorage.getItem(\"foodItemArray\"));\r\n        const foodObject = foodDetail.find(item => item.foodItem === foodItem);\r\n        let foodPrice = Number(foodObject.foodPrice);\r\n        if(qty === 1){\r\n            foodPriceRequired = foodPrice;\r\n        }   \r\n        else{\r\n            foodPriceRequired = +qty*foodPrice;\r\n        }\r\n        setPrice(foodPriceRequired);\r\n        setPriceIndex(index);     \r\n        return foodPriceRequired;\r\n    }\r\n}","export const ORDER_INIT =\"ORDER_INIT\";\r\nexport const ORDER_SUCCESS =\"ORDER_SUCCESS\";\r\n\r\nexport const SUBMIT_ORDER_HANDLER_INIT =\"SUBMIT_ORDER_HANDLER_INIT\";\r\nexport const SUBMIT_ORDER_HANDLER_SUCCESS =\"SUBMIT_ORDER_HANDLER_SUCCESS\";\r\n\r\nexport const DELETE_ORDER_HANDLER_INIT =\"DELETE_ORDER_HANDLER_INIT\";\r\nexport const DELETE_ORDER_HANDLER_SUCCESS =\"DELETE_ORDER_HANDLER_SUCCESS\";\r\n\r\nexport const EDIT_ORDER_HANDLER_INIT =\"EDIT_ORDER_HANDLER_INIT\";\r\nexport const EDIT_ORDER_HANDLER_SUCCESS =\"EDIT_ORDER_HANDLER_SUCCESS\";\r\n\r\nexport const initilizerOrderHandlerInit = () =>{\r\n    return{\r\n        type :ORDER_INIT\r\n    }\r\n}\r\n\r\nexport const initilizerHandlerSuccess = (customerOrderArray,foodItemArray,orderId) =>{\r\n    return{\r\n        type : ORDER_SUCCESS,\r\n        customerOrderArray : customerOrderArray,\r\n        foodItemArray : foodItemArray,\r\n        orderId : orderId\r\n    \r\n    }\r\n}\r\n\r\nexport const submitHandlerInit = (editMode,customerOrderObject) =>{\r\n    return{\r\n        type : SUBMIT_ORDER_HANDLER_INIT,\r\n        editMode : editMode,\r\n        customerOrderObject : customerOrderObject\r\n    }\r\n}\r\n\r\nexport const submitHandlerSuccess = (customerOrderArray,editMode,editObject,orderId) =>{\r\n    return{\r\n        type : SUBMIT_ORDER_HANDLER_SUCCESS,\r\n        editMode : editMode,\r\n        customerOrderArray : customerOrderArray,\r\n        editObject : editObject,\r\n        orderId : orderId\r\n    }\r\n}\r\n\r\nexport const editHandlerInit = (customerOrderObject) =>{\r\n    return{\r\n        type : EDIT_ORDER_HANDLER_INIT,\r\n        customerOrderObject : customerOrderObject,\r\n        editMode : true\r\n\r\n    }\r\n}\r\nexport const editHandlerSuccess = (customerOrderArray,editObject,editMode,orderId) =>{\r\n    return{\r\n        type : EDIT_ORDER_HANDLER_SUCCESS,\r\n        customerOrderArray : customerOrderArray,\r\n        editObject : editObject,\r\n        editMode : editMode,\r\n        orderId : orderId\r\n    }\r\n}\r\nexport const deleteHandlerInit = (customerOrderObject) =>{\r\n    return{\r\n        type : DELETE_ORDER_HANDLER_INIT,\r\n        customerOrderObject : customerOrderObject\r\n    }\r\n}\r\n\r\nexport const deleteHandlerSuccess = (customerOrderArray,orderId) =>{\r\n    return{\r\n        type : DELETE_ORDER_HANDLER_SUCCESS,\r\n        customerOrderArray : customerOrderArray,\r\n        orderId : orderId\r\n    }\r\n}\r\nconst initialState = {\r\n    customerOrderArray : [],\r\n    foodItemArray : [],  \r\n    editMode : false,\r\n    editObject : {},\r\n    orderId : \"\",\r\n   \r\n}\r\nconst CustomerOrder = (state = initialState,action) =>{\r\n    switch(action.type){\r\n        case ORDER_SUCCESS : \r\n        return{\r\n            ...state,\r\n            customerOrderArray : action.customerOrderArray,\r\n            foodItemArray : action.foodItemArray,\r\n            orderId : action.orderId\r\n        }\r\n        case SUBMIT_ORDER_HANDLER_SUCCESS : \r\n        return {\r\n            ...state,\r\n            editMode : action.editMode,\r\n            customerOrderArray : action.customerOrderArray,\r\n            editObject : action.editObject,\r\n            orderId : action.orderId\r\n        }\r\n        case EDIT_ORDER_HANDLER_SUCCESS : \r\n        return{\r\n            ...state,          \r\n            customerOrderArray : action.customerOrderArray,\r\n            editMode : action.editMode,\r\n            editObject : action.editObject,\r\n            orderId : action.orderId\r\n\r\n        \r\n        }\r\n        case DELETE_ORDER_HANDLER_SUCCESS : \r\n        return{\r\n            ...state,\r\n            customerOrderArray : action.customerOrderArray,\r\n            orderId : action.orderId\r\n \r\n        }\r\n\r\n        default : return state\r\n    }\r\n}\r\nexport default CustomerOrder;","import React,{useState,useEffect} from 'react';\r\nimport Button from \"../../UI/Button/Button\";\r\nimport {useDispatch,useSelector} from \"react-redux\";\r\nimport FormWrapper from \"../../component/FormWrapper/FormWrapper\";\r\nimport TableWrapper from \"../../component/TableWrapper/TableWrapper\";\r\nimport classNames from \"classnames\";\r\nimport {AutoComplete} from \"../../Utility/AutoComplete\";\r\nimport {PriceFoodCalculation} from \"../../Utility/PriceCalculation\";\r\nimport Table from \"../../UI/Table/Table\";\r\nimport { useForm,useFieldArray } from 'react-hook-form';\r\nimport * as action from \"../../store/reducer/CustomerOrder/CustomerOrderReducer\";\r\n\r\n\r\n\r\nconst CustomerOrder = () => {\r\n    const {register,handleSubmit,formState : {errors,isSubmitted,isValid},reset,control,setValue,getValues} = useForm({mode : \"onChange\",defaultValues : {orderArray : [{foodItemId : \"\",orderQtyId : \"\", amount : \"\"}]}});\r\n\r\n    const{append,fields,remove} = useFieldArray({control,name : \"orderArray\"})\r\n\r\n    const [id,setId] = useState(null);\r\n\r\n    const[editMode,setEditMode] = useState(false);\r\n    \r\n    const [foodItemDisplay, setFoodItemDisplay] = useState(false);\r\n    const [foodItemIndex, setFoodItemIndex] = useState();\r\n    const [foodItemarray, setFoodItemArray] = useState(null);\r\n\r\n    const [price, setPrice] = useState(\"\");\r\n    const [priceIndex, setPriceIndex] = useState();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const orderId = useSelector(state => state.CustomerOrder.orderId);\r\n\r\n    const customerOrderArray = useSelector(state => state.CustomerOrder.customerOrderArray)\r\n\r\n    const editOrderMode = useSelector(state => state.CustomerOrder.editMode);\r\n\r\n    const editObject = useSelector(state =>state.CustomerOrder.editObject);\r\n\r\n    useEffect(() => {\r\n        dispatch(action.initilizerOrderHandlerInit());\r\n        // setId(orderId);\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        discountCalculation();sumUpTotal()\r\n      }, [fields])\r\n\r\n      useEffect(() => {    \r\n       \r\n        if (isSubmitted) {\r\n          reset({customerName : \"\" ,orderDate : \"\", discount : \"\" , totalAmount : \"\" , orderArray :[{foodItemId : \"\",orderQtyId : \"\", amount : \"\"}] });\r\n          \r\n        }\r\n      }, [isSubmitted]);\r\n\r\n    useEffect(()=>{\r\n        if(editOrderMode !== editMode){          \r\n            const {id,customerName,orderDate,discount,totalAmount,orderArray} = {...editObject}\r\n            setEditMode(editOrderMode);\r\n            setId(id);\r\n            reset({customerName : customerName ,orderDate : orderDate, discount : discount , totalAmount : totalAmount , orderArray : orderArray}); \r\n        }   \r\n    },[editOrderMode,editObject]);\r\n\r\n    useEffect(()=>{\r\n        setId(orderId);        \r\n    },[orderId])\r\n\r\n    const onSubmit = data => {\r\n        data.id = id;\r\n        dispatch(action.submitHandlerInit(editMode, data));       \r\n        setId(orderId); \r\n    }\r\n\r\n    const sumUpTotal = () =>{  \r\n        let priceInput = document.querySelectorAll(\".priceInput\");\r\n        let total = 0;\r\n        for(let i=0; i < priceInput.length; i++){total += Number(priceInput[i].value)}\r\n        {total === 0 ? setValue(\"totalAmount\",\"\",{shouldValidate : true}) : setValue(\"totalAmount\",total,{shouldValidate : true}); }      \r\n     }\r\n    \r\n    const discountCalculation = (e) =>{\r\n        let discount;\r\n        if(e === undefined || e === null){discount = getValues(\"discount\");}\r\n        else{discount = e.target.value}\r\n        sumUpTotal();\r\n        let totalPrice = getValues(\"totalAmount\");\r\n        if(discount && totalPrice){\r\n            let netAmount = totalPrice - (totalPrice * discount / 100);\r\n            setValue(\"totalAmount\",netAmount,{shouldValidate : true});   \r\n        }\r\n    } \r\n    const customerOrder = (\r\n            <div className=\"col-lg-6 col-sm-12  \">\r\n            {customerOrderArray.map((dish,index) => {\r\n            let array = [];\r\n            let object = {}\r\n                object.id = dish.id;\r\n                object.customerName = dish.customerName;\r\n                object.orderDate = dish.orderDate;\r\n            array.push(object)\r\n            return(\r\n            <div key = {index} className = \"jumbotron formWrapper my-2\">   \r\n                    <Table \r\n                        tableData = {array}\r\n                        headingColumns = {[\"Id\",\"Customer Name\",\"Order Date\",\"Edit\",\"Delete\"]}\r\n                        breakOn = \"large\"\r\n                        addEditButton = {true}\r\n                        addDeleteButton = {true}\r\n                        editHandler = {()=>dispatch(action.editHandlerInit(dish))}\r\n                        deleteHandler = {()=>dispatch(action.deleteHandlerInit(dish))}\r\n                    />    \r\n                    <div className = \"row\">\r\n                    <div className = \"col-12\">\r\n                        <TableWrapper\r\n                        tableData={dish.orderArray}\r\n                        headingColumns={[\"Id\",\"Food Item\",\"Quantity \",\"Cost\"]}\r\n                        breakOn=\"large\"\r\n                        addDeleteButton={false}\r\n                        addEditButton={false}\r\n                        />\r\n                        <div className =\"jumbotron formWrapper\">\r\n                            <div className = \"row mx-auto\">\r\n                                <div className=\"col-6\"><p> Discount % : {dish.discount}</p></div>\r\n                                <div className=\"col-6\"><p> Purchase Price : {dish.totalAmount}</p></div>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                    </div>\r\n                </div>    \r\n            </div>\r\n            )          \r\n            })}\r\n        </div>)\r\n    return (\r\n        <div className=\"container-fluid text-center\">\r\n            <div className = \"row\">\r\n                <h1 className=\"display-4 heading\">Customer Order</h1>\r\n            </div>\r\n            <div className=\"row justify-content-around\">\r\n                <FormWrapper>\r\n                    <div className=\"w-75 mx-auto\">\r\n                       <p className = \"lead\"> Order No : {id}</p> \r\n                       <form onSubmit = {handleSubmit(onSubmit)}>\r\n                            <div className = \"form-group my-2\">\r\n                                <label htmlFor = \"customerName\"> Customer Name </label>\r\n                                <input className = {classNames(\"form-control\",{\"is-invalid\" : errors.customerName})} type=\"text\" placeholder=\"Customer Name\" {...register(\"customerName\",{required : \"Field Is Required\"})} />\r\n                                {errors.customerName && (<p className = \"invalid-feedback\">{errors.customerName.message}</p>)}\r\n                            </div>\r\n                            <div className = \"form-group my-2\">\r\n                                <label htmlFor = \"orderDate\"> Date </label>\r\n                                <input className = {classNames(\"form-control\",{\"is-invalid\" : errors.orderDate})} type=\"date\"  {...register(\"orderDate\",{required : \"Field Is Required\"})} />\r\n                                {errors.orderDate && (<p className = \"invalid-feedback\">{errors.orderDate.message}</p>)}\r\n                            </div>\r\n                            <p className=\"lead\">Add Order Detail</p>\r\n                            <div className = \"form-group my-2\">\r\n                                {fields.map((item,index)=>(\r\n                                    <div className = \"jumbotron w-75 border border-light mx-auto p-2 rounded m-2\" key={item.id} >                                  \r\n                                        <div className=\" row justify-content-around\">\r\n                                            <div className=\"col-12\">\r\n                                                <div className=\"form-group my-2\">\r\n                                                    <label htmlFor=\"foodItemId\">Food Item </label>\r\n                                                    <input className={classNames(\"form-control\",{\"is-invalid\": errors?.orderArray?.[index]?.foodItemId})} type=\"text\" placeholder=\"Ordered Food\" defaultValue={`${item.foodItemId}`} {...register(`orderArray[${index}].foodItemId`, { required: \"Field Required\" })} onChange={(e) => AutoComplete(e,\"foodItemArray\",\"foodItem\",setFoodItemArray,setFoodItemDisplay,setFoodItemIndex,index)}/>                                                 \r\n                                                    {(foodItemDisplay && foodItemIndex === index) &&(\r\n                                                        <div className=\"card w-100\"><div>                                                        \r\n                                                        {foodItemarray.map((item) => ( \r\n                                                            <div key={item.id} onClick={()=>{setValue(`orderArray[${index}].foodItemId`,item.foodItem,{shouldValidate: true});setFoodItemDisplay(false);setValue(`orderArray[${index}.amount]`,item.foodPrice,{shouldValidate:true})}} className=\"drop border border-bottom-1\">\r\n                                                            <p>{item.foodItem}</p>\r\n                                                            </div>\r\n                                                        ))}</div>\r\n                                                    </div>\r\n                                                    )}\r\n                                                    {errors?.orderArray?.[index]?.foodItemId && <p className=\"invalid-feedback\">{errors?.orderArray?.[index]?.foodItemId?.message}</p>}\r\n                                                </div>\r\n                                                \r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\" row justify-content-around\">\r\n                                            <div className=\"col-lg-6 col-mb-12\">\r\n                                            <div className=\"form-group my-2\">\r\n                                                <select className={classNames(\"form-control\", {\"is-invalid\":errors?.orderArray?.[index]?.orderQtyId})} placeholder=\"Qty\" defaultValue={`${item.orderQtyId}`} {...register(`orderArray[${index}].orderQtyId`,{ required: \"Field Required\" })} onChange={(e) => {const valuePrice = PriceFoodCalculation(getValues(`orderArray[${index}].foodItemId`),e.target.value,index,setPrice,setPriceIndex);setValue(`orderArray[${index}].amount`,valuePrice,{ shouldValidate: true });valuePrice && sumUpTotal()}}>\r\n                                                    <option value=\"\" disabled>Select Qty</option>\r\n                                                    <option value={1}>1</option>\r\n                                                    <option value={2}>2</option>\r\n                                                    <option value={3}>3</option>\r\n                                                    <option value={4}>4</option>\r\n                                                    <option value={5}>5</option>\r\n                                                    <option value={6}>6</option>    \r\n                                                </select>\r\n                                                {errors?.orderArray?.[index]?.orderQtyId && (\r\n                                                    <div className=\"invalid-feedback\">{errors?.orderArray?.[index]?.orderQtyId?.message}</div>\r\n                                                )}\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-lg-6 col-mb-12\">\r\n                                                <div className=\"form-group my-2\">\r\n                                                    <input className={classNames(\"form-control priceInput\", {\"is-invalid\":errors?.orderArray?.[index]?.amount})} type=\"number\" placeholder=\"Amount\" step = \"0.01\" defaultValue={`${item.amount}`} {...register(`orderArray[${index}].amount`,{required: \"Field Required\" })}/>\r\n                                                    {errors?.orderArray?.[index]?.amount && (<div className=\"invalid-feedback\">{errors?.orderArray?.[index]?.amount?.message}</div>)}\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\" row justify-content-around\">\r\n                                                <div className=\"col-6\">\r\n                                                    <Button type=\"button\" className=\"btn-sm\" onClick={() =>append({foodItemId : \"\" , orderQtyId : \"\", amount : \"\"})}>+</Button>\r\n                                                </div>\r\n                                                <div className=\"col-6\">\r\n                                                    <Button type=\"button\" className=\"btn-sm\" onClick={() => {remove(index)}} >-</Button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>    \r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                            <div className = \"form-group my-2\">\r\n                                <label htmlFor = \"discount\"> Discount </label>\r\n                                <input className = {classNames(\"form-control\")} type=\"number\" placeholder=\"Discount %\" {...register(\"discount\")} onChange={(e)=>discountCalculation(e)}/>\r\n                      \r\n                            </div>\r\n                            <div className = \"form-group my-2\">\r\n                                <label htmlFor = \"totalAmount\"> Total Amount </label>\r\n                                <input className = {classNames(\"form-control\")} step=\"0.01\" type=\"number\" placeholder=\"Total Amount\" {...register(\"totalAmount\",{required : \"Field Is Required\"})}  />\r\n                            \r\n                            </div>\r\n                            <Button type = \"submit\">Generate Bill</Button>\r\n                       </form>\r\n                    </div>\r\n                </FormWrapper>\r\n                {customerOrder}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default CustomerOrder;","\r\n// INGREDIENT\r\nexport const INGREDIENT_INIT = \"INGREDIENT_INIT\";\r\n\r\nexport const INGREDIENT_SUCCESS = \"INGREDIENT_SUCCESS\";\r\n\r\nexport const SUBMIT_INGREDIENT_HANDLER_INIT = \"SUBMIT_INGREDIENT_HANDLER_INIT\";\r\n\r\nexport const SUBMIT_INGREDIENT_HANDLER_SUCCESS = \"SUBMIT_INGREDIENT_HANDLER_SUCCESS\";\r\n\r\nexport const EDIT_INGREDIENT_HANDLER_INIT = \"EDIT_INGREDIENT_HANDLER_INIT\";\r\n\r\nexport const EDIT_INGREDIENT_HANDLER_SUCCESS = \"EDIT_INGREDIENT_HANDLER_SUCCESS\";\r\n\r\nexport const DELETE_INGREDIENT_HANDLER_INIT = \"DELETE_INGREDIENT_HANDLER_INIT\";\r\n\r\nexport const DELETE_INGREDIENT_HANDLER_SUCCESS = \"DELETE_INGREDIENT_HANDLER_SUCCESS\";\r\n\r\nexport const initilizerIngredientHandlerInit = () =>{\r\n    return{\r\n        type : INGREDIENT_INIT\r\n    }\r\n}\r\n\r\nexport const initilizerHandlerSuccess = (ingredientArray,unitArray,quantityArray) =>{\r\n    return{\r\n        type : INGREDIENT_SUCCESS,\r\n        ingredientArray : ingredientArray,\r\n        unitArray : unitArray,\r\n        quantityArray : quantityArray  \r\n    }\r\n}\r\n\r\nexport const submitHandlerInit = (editMode,ingredientObject) =>{\r\n    return{\r\n        type : SUBMIT_INGREDIENT_HANDLER_INIT,\r\n        editMode : editMode,\r\n        ingredientObject : ingredientObject\r\n    }\r\n}\r\n\r\nexport const submitHandlerSuccess = (ingredientArray,editMode,editObject) =>{\r\n    return{\r\n        type : SUBMIT_INGREDIENT_HANDLER_SUCCESS,\r\n        editMode : editMode,\r\n        ingredientArray : ingredientArray,\r\n        editObject : editObject\r\n    }\r\n}\r\n\r\nexport const editHandlerInit = (ingredientObject) =>{\r\n    return{\r\n        type : EDIT_INGREDIENT_HANDLER_INIT,\r\n        ingredientObject : ingredientObject,\r\n        editMode : true\r\n    }\r\n}\r\nexport const editHandlerSuccess = (ingredientArray,editObject,editMode) =>{\r\n    return{\r\n        type : EDIT_INGREDIENT_HANDLER_SUCCESS,     \r\n        ingredientArray : ingredientArray, \r\n        editObject : editObject,\r\n        editMode : editMode\r\n    }\r\n}\r\nexport const deleteHandlerInit = (ingredientObject) =>{\r\n    return{\r\n        type : DELETE_INGREDIENT_HANDLER_INIT,\r\n        ingredientObject : ingredientObject\r\n    }\r\n}\r\n\r\nexport const deleteHandlerSuccess = (ingredientArray) =>{\r\n    return{\r\n        type : DELETE_INGREDIENT_HANDLER_SUCCESS,\r\n        ingredientArray : ingredientArray\r\n    }\r\n}\r\n\r\nconst initialState = {\r\n    ingredientArray : [],\r\n    unitArray : [],\r\n    quantityArray : [],\r\n    editMode : false,\r\n    editObject : {},\r\n \r\n}\r\nconst IngredientMaster = (state = initialState,action) =>{\r\n    switch(action.type){\r\n        case INGREDIENT_SUCCESS : \r\n        return{\r\n            ...state,\r\n            ingredientArray : action.ingredientArray,\r\n            unitArray : action.unitArray,\r\n            quantityArray : action.quantityArray        \r\n        }\r\n        case SUBMIT_INGREDIENT_HANDLER_SUCCESS : \r\n        return{\r\n            ...state,\r\n            editMode : action.editMode,\r\n            ingredientArray : action.ingredientArray,\r\n            editObject : action.editObject\r\n        }\r\n        case EDIT_INGREDIENT_HANDLER_SUCCESS : \r\n        return{\r\n            ...state,          \r\n            ingredientArray : action.ingredientArray,\r\n            editMode : action.editMode,\r\n            editObject : action.editObject,\r\n        \r\n        }\r\n        case DELETE_INGREDIENT_HANDLER_SUCCESS : \r\n        return{\r\n            ...state,\r\n            ingredientArray : action.ingredientArray \r\n        }\r\n        default : return state\r\n    }\r\n}\r\nexport default IngredientMaster;","import React , {useState,useEffect} from 'react';\r\nimport {useDispatch,useSelector} from \"react-redux\";\r\nimport Button  from \"../../UI/Button/Button\";\r\nimport FormWrapper from \"../../component/FormWrapper/FormWrapper\";\r\nimport TableWrapper from \"../../component/TableWrapper/TableWrapper\";\r\nimport * as action from \"../../store/reducer/IngredientMaster/IngredientMasterReducer\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport classNames from \"classnames\";\r\n\r\nconst IngredientMaster = () => {\r\n    const{register,handleSubmit,formState : {errors,isSubmitted,isValid},reset} = useForm({mode : \"onChange\"});\r\n\r\n    const [editMode,setEditMode] = useState(false);\r\n\r\n    const[id,setId] = useState(null);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const editIngredient = useSelector(state => state.IngredientMaster.editMode);\r\n\r\n    const editObject = useSelector(state =>state.IngredientMaster.editObject);\r\n  \r\n    let unitArray  = useSelector(state => state.IngredientMaster.unitArray);\r\n\r\n    let quantityArray  = useSelector(state => state.IngredientMaster.quantityArray);\r\n\r\n    let ingredientArray   = useSelector(state => state.IngredientMaster.ingredientArray);\r\n\r\n    if(unitArray === undefined && unitArray !== null){\r\n        unitArray = []\r\n    } \r\n    if(quantityArray === undefined && quantityArray !== null){\r\n        quantityArray = [];\r\n    }\r\n    if(ingredientArray === undefined && ingredientArray !== null){\r\n        ingredientArray = [];\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(action.initilizerIngredientHandlerInit());\r\n    }, [])\r\n\r\n    useEffect(()=>{\r\n        if(editIngredient !== editMode){          \r\n            const {id,ingredientName,quantityId,unitId,ingredientPrice } = {...editObject} \r\n            setEditMode(editIngredient );\r\n            setId(id);\r\n            reset({ingredientName :ingredientName ,quantityId :quantityId ,unitId :unitId ,ingredientPrice :ingredientPrice }); \r\n        }   \r\n    },[editIngredient,editObject]);\r\n\r\n    useEffect(()=>{\r\n        if(isSubmitted && isValid){\r\n            reset();            \r\n        }\r\n    },[isSubmitted,isValid]);\r\n\r\n    const onSubmit = (data) => {\r\n        const ingredientObject = {};\r\n        ingredientObject.id = id;\r\n        ingredientObject.ingredientName = data.ingredientName;\r\n        ingredientObject.quantityId = +data.quantityId;\r\n        ingredientObject.unitId = +data.unitId;\r\n        ingredientObject.ingredientPrice = +data.ingredientPrice;        \r\n        dispatch(action.submitHandlerInit(editMode,ingredientObject));     \r\n    }\r\n    \r\n    const selQuantity = quantityArray.map(qty => <option key = {qty.id} value ={qty.id}>{qty.quantity}</option>)\r\n\r\n    const selUnit = unitArray.map(unit => <option key = {unit.id} value={unit.id}>{unit.unit}</option>)\r\n\r\n    return (\r\n        <div className = \"container-fluid text-center\">\r\n        <div className=\"row \">\r\n        <h1 className=\"display-4 heading\">Ingredient Master</h1>\r\n        </div>\r\n        <div className=\"row justify-content-around\">\r\n            <FormWrapper>\r\n            <div  className = \"w-75 mx-auto\">\r\n            <form onSubmit = {handleSubmit(onSubmit)}>\r\n                    <div className = \"form-group my-2\">\r\n                        <label htmlFor=\"ingredientName\"> Ingredient Name</label>\r\n                        <input className = {classNames(\"form-control\",{\"is-invalid\" : errors.ingredientName})} placeholder = \"Ingredient Name\" type=\"text\" {...register(\"ingredientName\",{required : \"Field  Is Required\"})}/>\r\n                        {errors.ingredientName && <p className=\"invalid-feedback\">{errors.ingredientName.message}</p>}\r\n                    </div>   \r\n                    <div className = \"form-group my-2\">\r\n                        <label htmlFor=\"quantityId\">Quantity</label>\r\n                        <select className = {classNames(\"form-control\",{\"is-invalid\" : errors.quantityId})} defaultValue = \"\" {...register(\"quantityId\",{required : \"Field  Is Required\"})}>\r\n                            <option value = \"\" disabled >Select Qty</option>\r\n                            {selQuantity}\r\n                        </select>\r\n                        {errors.quantityId && <p className=\"invalid-feedback\">{errors.quantityId.message}</p>}\r\n                    </div>\r\n                    <div className = \"form-group my-2\">\r\n                        <label htmlFor=\"unitId\">Unit</label>\r\n                        <select className = {classNames(\"form-control\",{\"is-invalid\" : errors.unitId})} defaultValue = \"\" {...register(\"unitId\",{required : \"Field  Is Required\"})}>\r\n                            <option value = \"\" disabled  >Select Unit</option>\r\n                            {selUnit}\r\n                        </select>\r\n                        {errors.unitId && <p className=\"invalid-feedback\">{errors.unitId.message}</p>}\r\n                    </div> \r\n                    <div className = \"form-group my-2\">\r\n                            <label htmlFor=\"ingredientPrice\"> Price</label>\r\n                            <input className = {classNames(\"form-control\",{\"is-invalid\" : errors.ingredientPrice})} placeholder = \"Price\" type=\"number\" {...register(\"ingredientPrice\",{required : \"Field  Is Required\"})}/>\r\n                            {errors.ingredientPrice && <p className=\"invalid-feedback\">{errors.ingredientPrice.message}</p>}\r\n                    </div>                     \r\n                    <Button className =\"btn-sm\" type = \"submit\">Save</Button>\r\n                </form>\r\n            </div>\r\n            </FormWrapper>\r\n            <div className=\"col-md-6 col-12\">\r\n            <TableWrapper \r\n            tableData = {ingredientArray}\r\n            headingColumns = {[\"Id\",\"Ingredient Name\",\"Quantity\",\"Unit\",\"Price\",\"Edit\",\"Delete\"]}\r\n            breakOn = \"large\"\r\n            addDeleteButton = {true}\r\n            addEditButton = {true}\r\n            editHandler = {(data)=>dispatch(action.editHandlerInit(data))}\r\n            deleteHandler = {(data)=>dispatch(action.deleteHandlerInit(data))}\r\n             />\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\nexport default IngredientMaster;","export const INVENTORY_INIT = \"INVENTORY_INIT\";\r\n\r\nexport const INVENTORY_SUCCESS = \"INVENTORY_SUCCESS\";\r\n\r\nexport const SUBMIT_INVENTORY_INIT = \"SUBMIT_INVENTORY_INIT\";\r\n\r\nexport const SUBMIT_INVENTORY_SUCCESS = \"SUBMIT_INVENTORY_SUCCESS\"; \r\n\r\nexport const EDIT_INVENTORY_INIT = \"EDIT_INVENTORY_INIT\"; \r\n\r\nexport const EDIT_INVENTORY_SUCCESS = \"EDIT_INVENTORY_SUCCESS\";\r\n\r\nexport const DELETE_INVENTORY_INIT = \"DELETE_INVENTORY_INIT\";\r\n\r\nexport const DELETE_INVENTORY_SUCCESS = \"DELETE_INVENTORY_SUCCESS\";\r\n\r\nexport const initilizerInventoryHandlerInit = () =>{\r\n    return{\r\n        type : INVENTORY_INIT\r\n    }\r\n}\r\n\r\nexport const initilizerHandlerSuccess = (inventoryArray,ingredientArray,quantityArray,vendorMappingArray,unitArray) =>{\r\n    return{\r\n        type : INVENTORY_SUCCESS,\r\n        inventoryArray : inventoryArray,\r\n        ingredientArray : ingredientArray,\r\n        quantityArray : quantityArray,\r\n        vendorMappingArray : vendorMappingArray,\r\n        unitArray :unitArray\r\n    }\r\n}\r\n\r\nexport const submitHandlerInit = (editMode,inventoryObject) =>{\r\n    return{\r\n        type : SUBMIT_INVENTORY_INIT,\r\n        editMode : editMode,\r\n        inventoryObject : inventoryObject\r\n    }\r\n}\r\n\r\nexport const submitHandlerSuccess = (inventoryArray,editMode,editObject) =>{\r\n    return{\r\n        type : SUBMIT_INVENTORY_SUCCESS,\r\n        editMode : editMode,\r\n        inventoryArray : inventoryArray,\r\n        editObject : editObject\r\n    }\r\n}\r\n\r\nexport const editHandlerInit = (inventoryObject) =>{\r\n    return{\r\n        type : EDIT_INVENTORY_INIT,\r\n        inventoryObject : inventoryObject,\r\n        editMode : true\r\n    }\r\n}\r\nexport const editHandlerSuccess = (inventoryArray,editObject,editMode) =>{\r\n    return{\r\n        type : EDIT_INVENTORY_SUCCESS,     \r\n        inventoryArray : inventoryArray, \r\n        editObject : editObject,\r\n        editMode : editMode\r\n    }\r\n}\r\nexport const deleteHandlerInit = (inventoryObject) =>{\r\n    return{\r\n        type : DELETE_INVENTORY_INIT,\r\n        inventoryObject : inventoryObject\r\n    }\r\n}\r\n\r\nexport const deleteHandlerSuccess = (inventoryArray) =>{\r\n    return{\r\n        type : DELETE_INVENTORY_SUCCESS,\r\n        inventoryArray : inventoryArray\r\n    }\r\n}\r\n\r\nconst initialState = {\r\n    inventoryArray : [],\r\n    editMode : false,\r\n    editObject : {},\r\n    ingredientArray : [],\r\n    quantityArray : [],\r\n    vendorMappingArray : [],\r\n    unitArray : []\r\n}\r\nconst Inventory = (state = initialState,action) =>{\r\n    switch(action.type){\r\n        case INVENTORY_SUCCESS : \r\n        return{\r\n            ...state,\r\n            inventoryArray : action.inventoryArray,\r\n            vendorMappingArray : action.vendorMappingArray,\r\n            quantityArray : action.quantityArray,\r\n            ingredientArray : action.ingredientArray,\r\n            unitArray : action.unitArray\r\n        }\r\n        case SUBMIT_INVENTORY_SUCCESS : \r\n        return{\r\n            ...state,\r\n            editMode : action.editMode,\r\n            inventoryArray : action.inventoryArray,\r\n            editObject : action.editObject\r\n        }\r\n        case EDIT_INVENTORY_SUCCESS : \r\n        return{\r\n            ...state,          \r\n            inventoryArray : action.inventoryArray,\r\n            editMode : action.editMode,\r\n            editObject : action.editObject,\r\n        \r\n        }\r\n        case DELETE_INVENTORY_SUCCESS : \r\n        return{\r\n            ...state,\r\n            inventoryArray : action.inventoryArray \r\n        }\r\n        default : return state\r\n    }\r\n} \r\nexport default Inventory;","import React,{useState,useEffect} from 'react';\r\nimport TableWrapper from \"../../component/TableWrapper/TableWrapper\";\r\nimport FormWrapper from \"../../component/FormWrapper/FormWrapper\";\r\nimport Button from \"../../UI/Button/Button\";\r\nimport classNames from \"classnames\";\r\nimport {useDispatch,useSelector} from \"react-redux\";\r\nimport * as action from \"../../store/reducer/Inventory/InventoryReducer\";\r\nimport {AutoComplete} from \"../../Utility/AutoComplete\";\r\nimport {useForm,useFieldArray} from \"react-hook-form\";\r\nimport Table from \"../../UI/Table/Table\";\r\nimport {PriceVendorCalculation} from \"../../Utility/PriceCalculation\";\r\nimport {createVendorIdToValue} from \"../../Utility/stateConversion\";\r\n\r\nconst Inventory = () => {\r\n    const{register,handleSubmit,formState : {errors,isSubmitted},control,getValues,setValue,reset} = useForm({mode : \"onChange\",defaultValues: {dateEntryArray: [{ingredientId : \"\",vendorId : \"\",quantityId : \"\",unitId : \"\",purchasePrice : \"\"}]} })\r\n    const {append,fields,remove} = useFieldArray({control , name : \"dateEntryArray\"});\r\n    \r\n    const [editMode, setEditMode] = useState(false);\r\n    const [id, setId] = useState(null);\r\n    // Price Calculation\r\n    const [price, setPrice] = useState(\"\");\r\n    const [priceIndex, setPriceIndex] = useState();\r\n    // For Ingredient Auto\r\n    const [ingredientDisplay, setIngredientDisplay] = useState();\r\n    const [ingredientIndex, setIngredientIndex] = useState();\r\n    const [ingredientarray, setIngredientArray] = useState(null);\r\n    // For Vendor Auto\r\n    const [vendorIndex, setVendorIndex] = useState();\r\n    const [vendorarray, setVendorArray] = useState(null);\r\n    // // For Price Auto\r\n    // Dispatch \r\n    const dispatch = useDispatch()\r\n    // Array Selectors\r\n    let quantityArray = useSelector((state) => state.Inventory.quantityArray);\r\n\r\n    let unitArray = useSelector((state) => state.Inventory.unitArray);   \r\n   \r\n    let inventoryArray = useSelector((state) => state.Inventory.inventoryArray);\r\n\r\n    const editInventoryMode = useSelector(state => state.Inventory.editMode);\r\n\r\n    const editObject = useSelector(state =>state.Inventory.editObject);     \r\n    // Initial Function Run\r\n    useEffect(() => {\r\n        dispatch(action.initilizerInventoryHandlerInit());\r\n    }, [])\r\n    // After Submit\r\n    useEffect(() => {\r\n        isSubmitted && reset();\r\n    }, [isSubmitted,reset]) \r\n    // // Total Price\r\n    useEffect(() => {\r\n        sumUpTotal()\r\n      }, [fields])\r\n    // // Price Update Auto Calculation for Price\r\n    useEffect(() => {\r\n        setValue(`dateEntryArray[${priceIndex}].purchasePrice`, price, {shouldValidate: true});\r\n      }, [price]);  \r\n    // // Edit Button Append\r\n    useEffect(()=>{\r\n        if(editInventoryMode !== editMode){          \r\n            const {id,dateFrom,dateTo,dateEntryArray,totalPurchase} = {...editObject} \r\n            setEditMode(editInventoryMode );\r\n            setId(id);\r\n            reset({dateFrom : dateFrom ,dateTo : dateTo,dateEntryArray: dateEntryArray, totalPurchase : totalPurchase}); \r\n        }   \r\n    },[editInventoryMode,editObject]);\r\n       \r\n    if(inventoryArray === undefined && inventoryArray === null){\r\n        inventoryArray = [];\r\n    }\r\n    // Select Quantity for Inventory\r\n    const selQuantity = quantityArray.map((qty) => (\r\n        <option key={qty.id} value={qty.id}>\r\n          {qty.quantity}\r\n        </option>\r\n    ));\r\n    // Select For Vendor\r\n    const selVendor = vendorarray !== null && (vendorarray.map((vendor) =>{\r\n            let vendorValue;\r\n            return(\r\n                <option key = {vendor.vendorId} value = {vendor.vendorId} >\r\n                    {vendorValue = createVendorIdToValue(vendor.vendorId)}\r\n                </option>\r\n            )\r\n        })\r\n    )\r\n    // Select For Unit \r\n    const selUnit = unitArray.map((unit) =><option key = {unit.id} value={unit.id}>{unit.unit}</option>) \r\n\r\n    const sumUpTotal = () =>{     \r\n        let priceInput = document.querySelectorAll(\".priceInput\");\r\n        let total = 0;\r\n        for(let i=0; i < priceInput.length; i++){\r\n                total += Number(priceInput[i].value)\r\n        }\r\n      setValue(\"totalPurchase\",total,{shouldValidate : true});   \r\n  }\r\n    const findVendorArray = (e,index) =>{\r\n        \r\n        if(ingredientarray !== null){\r\n            ingredientarray.forEach(element => {\r\n                if(element.ingredientName === e.target.value){\r\n                    setVendorArray(element.vendorQuoteArray); \r\n                    setVendorIndex(index);\r\n                }\r\n            });\r\n        }\r\n    } \r\n  const onSubmit = (data) => {\r\n        data.id = id;\r\n        dispatch(action.submitHandlerInit(editMode, data));\r\n    }\r\n\r\n    const inventoryTable = (\r\n        <div className=\"col-lg-6 col-sm-12  \">\r\n        {inventoryArray.map((dish,index) => {\r\n        let array = [];\r\n        let object = {}\r\n            object.id = dish.id;\r\n            object.dateFrom = dish.dateFrom;\r\n            object.dateTo = dish.dateTo;\r\n        array.push(object)\r\n          return(\r\n      <div key = {index} className = \"jumbotron formWrapper my-2\">   \r\n                    <Table \r\n                        tableData = {array}\r\n                        headingColumns = {[\"Id\",\"dateFrom\",\"dateTo\",\"Edit\",\"Delete\"]}\r\n                        breakOn = \"large\"\r\n                        addEditButton = {true}\r\n                        addDeleteButton = {true}\r\n                        editHandler = {()=>dispatch(action.editHandlerInit(dish))}\r\n                        deleteHandler = {()=>dispatch(action.deleteHandlerInit(dish))}\r\n                    />    \r\n                  <div className = \"row\">\r\n                  <div className = \"col-12\">\r\n                      <TableWrapper\r\n                      tableData={dish.dateEntryArray}\r\n                      headingColumns={[\"Id\",\"Ingredient\",\"Vendor\",\"Quantity \",\"Unit\",\"Cost\"]}\r\n                      breakOn=\"large\"\r\n                      addDeleteButton={false}\r\n                      addEditButton={false}\r\n                  />\r\n                    <div className =\"jumbotron formWrapper\">\r\n                         <p> Purchase Price : {dish.totalPurchase}</p>\r\n                    </div>\r\n                  </div>\r\n              </div>    \r\n          </div>\r\n          )          \r\n        })}\r\n    </div>)\r\n    return (\r\n        <div className=\"container-fluid text-center\">\r\n            <div className=\"row \">\r\n                <h1 className=\"display-4 heading\">Inventory</h1>\r\n            </div>\r\n            <div className=\"row justify-content-around\">\r\n                <FormWrapper>\r\n                    <div className=\"w-75 mx-auto\">\r\n                        <form onSubmit = {handleSubmit(onSubmit)}>\r\n                            <div className=\"form-group my-2\">\r\n                                <label htmlFor=\"dateFrom\">Date From</label>\r\n                                <input type=\"date\" className = {classNames(\"form-control\",{\"is-invalid\" : errors.dateFrom})} placeholder = \"Date From\" {...register(\"dateFrom\",{required : \"Field Is Required\"})}/>\r\n                                {errors.dateFrom && <p className=\"invalid-feedback\">{errors.dateFrom.message}</p>}\r\n                            </div>\r\n                            <div className=\"form-group my-2\">\r\n                                <label htmlFor=\"dateTo\">Date To</label>\r\n                                <input type=\"date\" className = {classNames(\"form-control\",{\"is-invalid\" : errors.dateTo})} placeholder = \"Date From\" {...register(\"dateTo\",{required : \"Field Is Required\"})}/>\r\n                                {errors.dateTo && <p className=\"invalid-feedback\">{errors.dateTo.message}</p>}\r\n                            </div>\r\n                            <p className = \"lead\">Add Purchase Inventory</p>\r\n                            <div className = \"form-group my-2\">\r\n                                {fields.map((item,index) =>(\r\n                                    <div className = \"jumbotron w-75 border border-light mx-auto p-2 rounded m-2\" key = {item.id}>\r\n                                        <div className=\" row justify-content-around\">\r\n                                            <div className = \"col-12\">\r\n                                                <div className = \"form-group my-2\">\r\n                                                    <input className = {classNames(\"form-control\",{\"is-invalid\" : errors?.dateEntryArray?.[index]?.ingredientId})} type = \"text\" defaultValue = {`${item.ingredientId}`} placeholder=\"Ingredient Name\" {...register(`dateEntryArray[${index}].ingredientId`,{required : \"Field Is Required\"})} onChange = {(e) => {AutoComplete(e,\"vendorMappingArray\",\"ingredientName\",setIngredientArray,setIngredientDisplay,setIngredientIndex,index);findVendorArray(e,index)}} />\r\n                                                    {ingredientDisplay && index === ingredientIndex && (\r\n                                                        <div className = \"card w-100\">\r\n                                                            <div>\r\n                                                                {ingredientarray.map((item) =>(                                                                    \r\n                                                                    <div key = {item.id} onClick = {() =>{setValue(`dateEntryArray[${index}].ingredientId`,item.ingredientName,{shouldValidate : true});setIngredientDisplay(false);setVendorIndex(index);setVendorArray(item.vendorQuoteArray);setValue(`dateEntryArray[${index}]unitId`,item.unitId,{shouldValidate:true})}} className = \"drop border border-bottom-1\">\r\n                                                                        <p>{item.ingredientName}</p>\r\n                                                                    </div>\r\n                                                                ))}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    )}\r\n                                                    {errors?.dateEntryArray?.[index]?.ingredientId && (<div className = \"invalid-feedback\">{errors?.dateEntryArray?.[index]?.ingredientId.message}</div>)}                                                \r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className = \"row justify-content-around\">\r\n                                            <div className = \"col-12\">\r\n                                                <div className = \"form-group my-2\">\r\n                                                    <select className={classNames(\"form-control\", {\"is-invalid\":errors?.dateEntryArray?.[index]?.vendorId})} type=\"text\" placeholder=\"Qty\" defaultValue={`${item.vendorId}`} {...register(`dateEntryArray[${index}].vendorId`,{ required: \"Field Required\" })} onChange={(e)=>{const valuePrice = PriceVendorCalculation(getValues(`dateEntryArray[${index}].ingredientId`),getValues(`dateEntryArray[${index}].quantityId`),getValues(`dateEntryArray[${index}].unitId`),index,setPrice,setPriceIndex,e.target.value);setValue(`dateEntryArray[${index}].purchasePrice`,valuePrice,{ shouldValidate: true });valuePrice && sumUpTotal()}}>\r\n                                                        <option value=\"\" disabled>\r\n                                                            Select Vendor\r\n                                                        </option>\r\n                                                         {selVendor}\r\n                                                    </select>\r\n                                                    {errors?.dateEntryArray?.[index]?.vendorId && (<div className=\"invalid-feedback\">{errors?.dateEntryArray?.[index]?.vendorId?.message}</div>)}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className = \"row justify-content-around\">\r\n                                            <div className = \"col-6\">\r\n                                                <select className={classNames(\"form-control\", {\"is-invalid\":errors?.dateEntryArray?.[index]?.quantityId})} type=\"text\" placeholder=\"Qty\" defaultValue={`${item.quantityId}`} {...register(`dateEntryArray[${index}].quantityId`,{required: \"Field Required\"})} onChange={(e) => {const valuePrice = PriceVendorCalculation(getValues(`dateEntryArray[${index}].ingredientId`),e.target.value,getValues(`dateEntryArray[${index}].unitId`),index,setPrice,setPriceIndex,getValues(`dateEntryArray[${index}].vendorId`));setValue(`dateEntryArray[${index}].purchasePrice`,valuePrice,{ shouldValidate: true });valuePrice && sumUpTotal()}}>\r\n                                                    <option value=\"\" disabled>\r\n                                                        Qty\r\n                                                    </option>\r\n                                                        {selQuantity}\r\n                                                </select>\r\n                                                {errors?.dateEntryArray?.[index]?.quantityId && (<div className=\"invalid-feedback\">{errors?.dateEntryArray?.[index]?.quantityId?.message}</div>)}\r\n                                            </div>\r\n                                            <div className = \"col-6\">\r\n                                                <select className={classNames(\"form-control\",{\"is-invalid\":errors?.dateEntryArray?.[index]?.unitId})} type=\"text\" placeholder=\"Unit\" defaultValue={`${item.unitId}`} {...register(`dateEntryArray[${index}].unitId`,{required: \"Field Required\"})} onChange={(e) => {const valuePrice = PriceVendorCalculation(getValues(`dateEntryArray[${index}].ingredientId`),getValues(`dateEntryArray[${index}].quantityId`),e.target.value,index,setPrice,setPriceIndex,getValues(`dateEntryArray[${index}].vendorId`));setValue(`dateEntryArray[${index}].purchasePrice`,valuePrice,{ shouldValidate: true });valuePrice && sumUpTotal()}}>\r\n                                                    <option value=\"\" disabled>Unit</option>\r\n                                                        {selUnit}\r\n                                                </select>\r\n                                            {errors?.dateEntryArray?.[index]?.unitId && (<div className=\"invalid-feedback\">{errors?.dateEntryArray?.[index]?.unitId?.message}</div>)}                                                \r\n                                            </div>\r\n                                        </div>\r\n                                        <div className = \"row justify-content-around\">\r\n                                            <div className = \"col-12\">\r\n                                                <div className=\"form-group my-2\">\r\n                                                    <input className={classNames(\"form-control priceInput\", {\"is-invalid\":errors?.dateEntryArray?.[index]?.purchasePrice})} type=\"number\" placeholder=\"Price\" step = \"0.01\" defaultValue={`${item.purchasePrice}`} {...register(`dateEntryArray[${index}].purchasePrice`,{ required: \"Field Required\" })} onChange={() =>{setValue(`dateEntryArray[${priceIndex}].purchasePrice`,price,{ shouldValidate: true }); ( price === getValues(`dateEntryArray[${index}].purchasePrice`)) && sumUpTotal()}} />\r\n                                                    {errors?.dateEntryArray?.[index]?.purchasePrice && (<div className=\"invalid-feedback\">{errors?.dateEntryArray?.[index]?.purchasePrice?.message}</div>)}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\" row justify-content-around\">\r\n                                            <div className=\"col-6\">\r\n                                                <Button type=\"button\" className=\"btn-sm\" onClick={() =>append({ingredientId : \"\",vendorId : \"\",quantityId : \"\",unitId : \"\",purchasePrice : \"\"})}>+</Button>\r\n                                            </div>\r\n                                            <div className=\"col-6\">\r\n                                                <Button type=\"button\" className=\"btn-sm\" onClick={() => {remove(index)}}>-</Button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                            <div className = \"form-group my-2\">\r\n                                <label htmlFor=\"totalPurchase\"> Total Amount</label>\r\n                                <input className = {classNames(\"form-control \",{\"is-invalid\" : errors.totalPurchase})} step = \"0.01\" type=\"number\" {...register(\"totalPurchase\",{required : \"Field  Is Required\"})}/>\r\n                                {errors.totalPurchase && <p className=\"invalid-feedback\">{errors.totalPurchase.message}</p>}\r\n                            </div> \r\n                            <Button type=\"submit\">Submit</Button>\r\n                        </form>\r\n                    </div>\r\n                </FormWrapper>\r\n                {inventoryTable}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Inventory\r\n","export const INVESTMENT_BUDGET_INIT =\"INVESTMENT_BUDGET_INIT\";\r\nexport const INVESTMENT_BUDGET_SUCCESS =\"INVESTMENT_BUDGET_SUCCESS\";\r\n\r\nexport const SUBMIT_INVESTMENT_BUDGET_HANDLER_INIT =\"SUBMIT_INVESTMENT_BUDGET_HANDLER_INIT\";\r\nexport const SUBMIT_INVESTMENT_BUDGET_HANDLER_SUCCESS =\"SUBMIT_INVESTMENT_BUDGET_HANDLER_SUCCESS\";\r\n\r\nexport const DELETE_INVESTMENT_BUDGET_HANDLER_INIT =\"DELETE_INVESTMENT_BUDGET_HANDLER_INIT\";\r\nexport const DELETE_INVESTMENT_BUDGET_HANDLER_SUCCESS =\"DELETE_INVESTMENT_BUDGET_HANDLER_SUCCESS\";\r\n\r\nexport const EDIT_INVESTMENT_BUDGET_HANDLER_INIT =\"EDIT_INVESTMENT_BUDGET_HANDLER_INIT\";\r\nexport const EDIT_INVESTMENT_BUDGET_HANDLER_SUCCESS =\"EDIT_INVESTMENT_BUDGET_HANDLER_SUCCESS\";\r\n\r\nexport const initilizerInvestmentBudgetHandlerInit = () =>{\r\n    return{\r\n        type :INVESTMENT_BUDGET_INIT\r\n    }\r\n}\r\n\r\nexport const initilizerHandlerSuccess = (investmentBudgetArray,totalAmount) =>{\r\n    return{\r\n        type : INVESTMENT_BUDGET_SUCCESS,\r\n        investmentBudgetArray : investmentBudgetArray,\r\n        totalAmount : totalAmount\r\n     \r\n    }\r\n}\r\n\r\nexport const submitHandlerInit = (editMode,investmentBudgetObject) =>{\r\n    return{\r\n        type : SUBMIT_INVESTMENT_BUDGET_HANDLER_INIT,\r\n        editMode : editMode,\r\n        investmentBudgetObject : investmentBudgetObject\r\n    }\r\n}\r\n\r\nexport const submitHandlerSuccess = (investmentBudgetArray,editMode,editObject,totalAmount) =>{\r\n    return{\r\n        type : SUBMIT_INVESTMENT_BUDGET_HANDLER_SUCCESS,\r\n        editMode : editMode,\r\n        investmentBudgetArray : investmentBudgetArray,\r\n        editObject : editObject,\r\n        totalAmount : totalAmount\r\n    }\r\n}\r\n\r\nexport const editHandlerInit = (investmentBudgetObject) =>{\r\n    return{\r\n        type : EDIT_INVESTMENT_BUDGET_HANDLER_INIT,\r\n        investmentBudgetObject : investmentBudgetObject,\r\n        editMode : true\r\n    }\r\n}\r\nexport const editHandlerSuccess = (investmentBudgetArray,editObject,editMode,totalAmount) =>{\r\n    return{\r\n        type : EDIT_INVESTMENT_BUDGET_HANDLER_SUCCESS,\r\n        investmentBudgetArray : investmentBudgetArray,\r\n        editObject : editObject,\r\n        editMode : editMode,\r\n        totalAmount : totalAmount\r\n    }\r\n}\r\nexport const deleteHandlerInit = (investmentBudgetObject) =>{\r\n    return{\r\n        type : DELETE_INVESTMENT_BUDGET_HANDLER_INIT,\r\n        investmentBudgetObject : investmentBudgetObject\r\n    }\r\n}\r\n\r\nexport const deleteHandlerSuccess = (investmentBudgetArray,totalAmount) =>{\r\n    return{\r\n        type : DELETE_INVESTMENT_BUDGET_HANDLER_SUCCESS,\r\n        investmentBudgetArray : investmentBudgetArray,\r\n        totalAmount : totalAmount\r\n    }\r\n}\r\nconst initialState = {\r\n    investmentBudgetArray : [],\r\n    editObject : {},\r\n    editMode : false,\r\n    totalAmount : 0,\r\n   \r\n}\r\nconst InvestmentBudget = (state = initialState,action) =>{\r\n    switch(action.type){\r\n        case INVESTMENT_BUDGET_SUCCESS : \r\n        return{\r\n            ...state,\r\n            investmentBudgetArray : action.investmentBudgetArray,\r\n            totalAmount : action.totalAmount\r\n        }\r\n        case SUBMIT_INVESTMENT_BUDGET_HANDLER_SUCCESS : \r\n        return {\r\n            ...state,\r\n            editMode : action.editMode,\r\n            investmentBudgetArray : action.investmentBudgetArray,\r\n            editObject : action.editObject,\r\n            totalAmount : action.totalAmount\r\n        }\r\n        case EDIT_INVESTMENT_BUDGET_HANDLER_SUCCESS : \r\n        return{\r\n            ...state,          \r\n            investmentBudgetArray : action.investmentBudgetArray,\r\n            editMode : action.editMode,\r\n            editObject : action.editObject,\r\n            totalAmount : action.totalAmount\r\n        }\r\n        case DELETE_INVESTMENT_BUDGET_HANDLER_SUCCESS : \r\n        return{\r\n            ...state,\r\n            investmentBudgetArray : action.investmentBudgetArray,\r\n            totalAmount : action.totalAmount \r\n        }\r\n        default : return state\r\n    }\r\n}\r\nexport default InvestmentBudget;","import React,{useEffect,useState} from 'react';\r\nimport {useDispatch,useSelector} from \"react-redux\";\r\nimport classNames from \"classnames\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport FormWrapper from \"../../component/FormWrapper/FormWrapper\";\r\nimport TableWrapper from \"../../component/TableWrapper/TableWrapper\";\r\nimport * as action from \"../../store/reducer/InvestmentBudget/InvestmentBudgetReducer\";\r\nimport Button from \"../../UI/Button/Button\";\r\n\r\nconst InvestmentBudget = () => {\r\n    const{register,handleSubmit,formState:{errors,isSubmitted,isValid},reset} = useForm({mode : \"onChange\"});\r\n\r\n    const[editMode,setEditMode] = useState(false);\r\n\r\n    const[budgetAllocated,setBudgetAllocated] = useState(200000);\r\n    \r\n    const[id,setId] = useState(null);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const editBudgetItem = useSelector(state => state.InvestmentBudget.editMode);\r\n\r\n    const editObject = useSelector(state =>state.InvestmentBudget.editObject);\r\n    \r\n    const investmentBudgetArray  = useSelector(state => state.InvestmentBudget.investmentBudgetArray);\r\n\r\n    const totalAmountExpense = useSelector(state => state.InvestmentBudget.totalAmount);  \r\n    \r\n    useEffect(() => {\r\n        dispatch(action.initilizerInvestmentBudgetHandlerInit());\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(isSubmitted && isValid){     \r\n           reset();  \r\n        }        \r\n    },[isSubmitted,isValid]);\r\n\r\n    useEffect(()=>{\r\n        if(editBudgetItem !== editMode){          \r\n            const {id,month,monthlyExpense,monthlyExpenseAmount} = {...editObject} \r\n            setEditMode(editBudgetItem );\r\n            setId(id);\r\n            reset({month : month ,monthlyExpense : monthlyExpense,monthlyExpenseAmount : monthlyExpenseAmount});    \r\n        }\r\n    },[editObject,editBudgetItem])\r\n\r\n    const onSubmit = (data) => {\r\n        const investmentBudgetObject = {};\r\n        investmentBudgetObject.id = id;\r\n        investmentBudgetObject.month = data.month;\r\n        investmentBudgetObject.monthlyExpense = data.monthlyExpense;\r\n        investmentBudgetObject.monthlyExpenseAmount = +data.monthlyExpenseAmount;\r\n        investmentBudgetObject.recoveryAmount = 0;\r\n        investmentBudgetObject.lastModified = \"-\";        \r\n        dispatch(action.submitHandlerInit(editMode,investmentBudgetObject));     \r\n    }\r\n\r\n    return (\r\n        <div className = \"container-fluid text-center\">\r\n            <div className=\"row \">\r\n            <h1 className=\"display-4 heading\">Investment Budget</h1>\r\n            </div>\r\n            <div className=\"row justify-content-around\">\r\n                <FormWrapper>\r\n                <div className = \"w-75 mx-auto\">\r\n                <div className = \"form-group my-2\">\r\n                    <label htmlFor=\"budgetAllocated\"> Budget Allocated</label>\r\n                    <input className = \"form-control\" type=\"number\" onChange={(e)=>setBudgetAllocated(e.target.value)} value = {budgetAllocated}/>\r\n                </div>\r\n                <form onSubmit = {handleSubmit(onSubmit)}>\r\n                        <div className = \"form-group my-2\">\r\n                            <label htmlFor=\"month\"> Month</label>\r\n                            <input className = {classNames(\"form-control\",{\"is-invalid\" : errors.month})} type=\"month\" {...register(\"month\",{required : \"Field  Is Required\"})}/>\r\n                            {errors.month && <p className=\"invalid-feedback\">{errors.month.message}</p>}\r\n                        </div>\r\n                        <div className = \"form-group my-2\">\r\n                            <label htmlFor=\"monthlyExpense\"> Expense Detail</label>\r\n                            <input className = {classNames(\"form-control\",{\"is-invalid\" : errors.monthlyExpense})} placeholder = \"Monthly Expense\" type=\"text\" {...register(\"monthlyExpense\",{required : \"Field  Is Required\"})}/>\r\n                            {errors.monthlyExpense && <p className=\"invalid-feedback\">{errors.monthlyExpense.message}</p>}\r\n                        </div>\r\n                        <div className = \"form-group my-2\">\r\n                            <label htmlFor=\"monthlyExpenseAmount\"> Amount</label>\r\n                            <input className = {classNames(\"form-control\",{\"is-invalid\" : errors.monthlyExpenseAmount})} placeholder = \"Expense Amount\" type=\"number\" {...register(\"monthlyExpenseAmount\",{required : \"Field  Is Required\"})}/>\r\n                            {errors.monthlyExpenseAmount && <p className=\"invalid-feedback\">{errors.monthlyExpenseAmount.message}</p>}\r\n                        </div>\r\n                        <Button className =\"btn-sm\" type = \"submit\">Save</Button>\r\n                    </form>\r\n                </div>\r\n                </FormWrapper>\r\n                <div className=\"col-lg-6 col-sm-12  \">\r\n                <TableWrapper \r\n                tableData = {investmentBudgetArray}\r\n                headingColumns = {[\"Id\",\"Month\",\"Expense Detail\",\"Amount\",\"Recovery Amount\",\"Last Modified\",\"Edit\",\"Delete\"]}\r\n                breakOn = \"large\"\r\n                addDeleteButton = {true}\r\n                addEditButton = {true}\r\n                editHandler = {(data)=>dispatch(action.editHandlerInit(data))}\r\n                deleteHandler = {(data)=>dispatch(action.deleteHandlerInit(data))}\r\n                 />\r\n                 <div className =\"jumbotron formWrapper\">\r\n                        <p> Budget Left: {budgetAllocated - totalAmountExpense}</p>\r\n                  </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InvestmentBudget\r\n","export const ITEMRECIPE_INIT =\"ITEMRECIPE_INIT\";\r\nexport const ITEMRECIPE_SUCCESS =\"ITEMRECIPE_SUCCESS\";\r\n\r\nexport const SUBMIT_ITEMRECIPE_HANDLER_INIT =\"SUBMIT_ITEMRECIPE_HANDLER_INIT\";\r\nexport const SUBMIT_ITEMRECIPE_HANDLER_SUCCESS =\"SUBMIT_ITEMRECIPE_HANDLER_SUCCESS\";\r\n\r\nexport const DELETE_ITEMRECIPE_HANDLER_INIT =\"DELETE_ITEMRECIPE_HANDLER_INIT\";\r\nexport const DELETE_ITEMRECIPE_HANDLER_SUCCESS =\"DELETE_ITEMRECIPE_HANDLER_SUCCESS\";\r\n\r\nexport const EDIT_ITEMRECIPE_HANDLER_INIT =\"EDIT_ITEMRECIPE_HANDLER_INIT\";\r\nexport const EDIT_ITEMRECIPE_HANDLER_SUCCESS =\"EDIT_ITEMRECIPE_HANDLER_SUCCESS\";\r\n\r\nexport const initilizerItemRecipeHandlerInit = () =>{\r\n    return{\r\n        type :ITEMRECIPE_INIT\r\n    }\r\n}\r\n\r\nexport const initilizerHandlerSuccess = (itemRecipeArray,unitArray,quantityArray) =>{\r\n    return{\r\n        type : ITEMRECIPE_SUCCESS,\r\n        itemRecipeArray : itemRecipeArray,\r\n        unitArray : unitArray,\r\n        quantityArray : quantityArray\r\n    }\r\n}\r\n\r\nexport const submitHandlerInit = (editMode,itemRecipeObject) =>{\r\n    return{\r\n        type : SUBMIT_ITEMRECIPE_HANDLER_INIT,\r\n        editMode : editMode,\r\n        itemRecipeObject : itemRecipeObject\r\n    }\r\n}\r\n\r\nexport const submitHandlerSuccess = (itemRecipeArray,editMode,editObject) =>{\r\n    return{\r\n        type : SUBMIT_ITEMRECIPE_HANDLER_SUCCESS,\r\n        editMode : editMode,\r\n        itemRecipeArray : itemRecipeArray,\r\n        editObject : editObject\r\n    }\r\n}\r\n\r\nexport const editHandlerInit = (itemRecipeObject) =>{\r\n    return{\r\n        type : EDIT_ITEMRECIPE_HANDLER_INIT,\r\n        itemRecipeObject : itemRecipeObject,\r\n        editMode : true\r\n    }\r\n}\r\nexport const editHandlerSuccess = (itemRecipeArray,editObject,editMode) =>{\r\n    return{\r\n        type : EDIT_ITEMRECIPE_HANDLER_SUCCESS,\r\n        itemRecipeArray : itemRecipeArray,\r\n        editObject : editObject,\r\n        editMode : editMode\r\n    }\r\n}\r\nexport const deleteHandlerInit = (itemRecipeObject) =>{\r\n    return{\r\n        type : DELETE_ITEMRECIPE_HANDLER_INIT,\r\n        itemRecipeObject : itemRecipeObject\r\n    }\r\n}\r\n\r\nexport const deleteHandlerSuccess = (itemRecipeArray) =>{\r\n    return{\r\n        type : DELETE_ITEMRECIPE_HANDLER_SUCCESS,\r\n        itemRecipeArray : itemRecipeArray\r\n    }\r\n}\r\nconst initialState = {\r\n    itemRecipeArray : [],\r\n    unitArray : [],\r\n    quantityArray : [],   \r\n    editMode : false,\r\n    editObject : {},\r\n   \r\n}\r\nconst ItemRecipe = (state = initialState,action) =>{\r\n    switch(action.type){\r\n        case ITEMRECIPE_SUCCESS : \r\n        return{\r\n            ...state,\r\n            itemRecipeArray : action.itemRecipeArray,\r\n            unitArray : action.unitArray,\r\n            quantityArray : action.quantityArray    \r\n\r\n        }\r\n        case SUBMIT_ITEMRECIPE_HANDLER_SUCCESS : \r\n        return {\r\n            ...state,\r\n            editMode : action.editMode,\r\n            itemRecipeArray : action.itemRecipeArray,\r\n            editObject : action.editObject\r\n        }\r\n        case EDIT_ITEMRECIPE_HANDLER_SUCCESS : \r\n        return{\r\n            ...state,          \r\n            itemRecipeArray : action.itemRecipeArray,\r\n            editMode : action.editMode,\r\n            editObject : action.editObject,\r\n        \r\n        }\r\n        case DELETE_ITEMRECIPE_HANDLER_SUCCESS : \r\n        return{\r\n            ...state,\r\n            itemRecipeArray : action.itemRecipeArray \r\n        }\r\n        default : return state\r\n    }\r\n}\r\nexport default ItemRecipe;","import React, { useState, useEffect } from \"react\";\r\nimport Button from \"../../UI/Button/Button\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FormWrapper from \"../../component/FormWrapper/FormWrapper\";\r\nimport TableWrapper from \"../../component/TableWrapper/TableWrapper\";\r\nimport { useForm, useFieldArray} from \"react-hook-form\";\r\nimport classNames from \"classnames\";\r\nimport * as action from \"../../store/reducer/ItemRecipe/ItemRecipeReducer\";\r\nimport { AutoComplete } from \"../../Utility/AutoComplete\";\r\nimport { PriceCalculation} from \"../../Utility/PriceCalculation\";\r\nimport Table from \"../../UI/Table/Table\";\r\nconst ItemRecipe = () => {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: {errors, isSubmitted},\r\n    control,\r\n    getValues,\r\n    setValue,\r\n    reset,\r\n  } = useForm({\r\n    mode: \"onChange\",\r\n    defaultValues: {\r\n      ingredientRecipeArray: [\r\n        { ingredientId: \"\", quantityId: \"\", unitId: \"\", ingredientPrice: \"\" },\r\n      ],\r\n    },\r\n  });\r\n  const { append, fields, remove } = useFieldArray({\r\n    control,\r\n    name: \"ingredientRecipeArray\",\r\n  });\r\n\r\n  // For Normal Page Functioning\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [id, setId] = useState(null);\r\n  const [price, setPrice] = useState(\"\");\r\n  const [priceIndex, setPriceIndex] = useState();\r\n  // For Display Card\r\n  const [foodDisplay, setFoodDisplay] = useState(false);\r\n  const [foodarray, setFoodArray] = useState(null);\r\n  const [ingredientDisplay, setIngredientDisplay] = useState();\r\n  const [ingredientIndex, setIngredientIndex] = useState();\r\n  const [ingredientarray, setIngredientArray] = useState(null);\r\n  // Reducer Function\r\n  const dispatch = useDispatch();\r\n  let unitArray = useSelector((state) => state.ItemRecipe.unitArray);\r\n  let quantityArray = useSelector((state) => state.ItemRecipe.quantityArray);\r\n  let itemRecipeArray  = useSelector(state => state.ItemRecipe.itemRecipeArray);\r\n  const editItemRecipeMode = useSelector(state => state.ItemRecipe.editMode);\r\n  const editObject = useSelector(state =>state.ItemRecipe.editObject);\r\n\r\n  if(itemRecipeArray === undefined && itemRecipeArray === null){\r\n    itemRecipeArray = [];\r\n    }\r\n    const selQuantity = quantityArray.map((qty) => (\r\n      <option key={qty.id} value={qty.id}>\r\n        {qty.quantity}\r\n      </option>\r\n    ));\r\n    const selUnit = unitArray.map((unit) => (\r\n      <option key={unit.id} value={unit.id}>\r\n        {unit.unit}\r\n      </option>\r\n    ));\r\n  useEffect(() => {\r\n    sumUpTotal()\r\n  }, [fields])\r\n\r\n  useEffect(() => {\r\n    dispatch(action.initilizerItemRecipeHandlerInit());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setValue(`ingredientRecipeArray[${priceIndex}].ingredientPrice`, price, {shouldValidate: true});\r\n  }, [price]);\r\n\r\n  useEffect(() => {    \r\n    if (isSubmitted) {\r\n      reset();\r\n    }\r\n  }, [isSubmitted,reset]);\r\n\r\n  useEffect(()=>{\r\n    if(editItemRecipeMode !== editMode){          \r\n        const {id,foodItem,serving,recipeDescription,basePrice,ingredientRecipeArray} = {...editObject} \r\n        setEditMode(editItemRecipeMode );\r\n        setId(id);\r\n        reset({foodItem : foodItem ,serving : serving,recipeDescription: recipeDescription,basePrice : basePrice,ingredientRecipeArray : ingredientRecipeArray }); \r\n    }   \r\n},[editItemRecipeMode,editObject]);\r\n\r\n  const onSubmit = (data) => {    \r\n    data.id = id;\r\n    dispatch(action.submitHandlerInit(editMode, data));\r\n  };\r\n  \r\n  const sumUpTotal = () =>{     \r\n        let priceInput = document.querySelectorAll(\".priceInput\");\r\n        let total = 0;\r\n        for(let i=0; i < priceInput.length; i++){\r\n                total += Number(priceInput[i].value)\r\n        }\r\n      setValue(\"basePrice\",total,{shouldValidate : true});   \r\n  }\r\n\r\n  const autoHandler = (\r\n    e,\r\n    Array,\r\n    elementValue,\r\n    setArray,\r\n    setDisplay,\r\n    setIndex,\r\n    indexing\r\n  ) => {\r\n    AutoComplete(\r\n      e,\r\n      Array,\r\n      elementValue,\r\n      setArray,\r\n      setDisplay,\r\n      setIndex,\r\n      indexing\r\n    );\r\n  };\r\n  let recipeChart = (\r\n    <div className=\"col-lg-6 col-sm-12  \">\r\n    {itemRecipeArray.map((dish,index) => {\r\n     let array = [];\r\n      let object = {}\r\n        object.id = dish.id;\r\n        object.foodItem = dish.foodItem;\r\n        object.recipeDescription = dish.recipeDescription;\r\n        object.serving = dish.serving;\r\n        object.basePrice=dish.basePrice\r\n  array.push(object)\r\n      return(\r\n  <div key = {index} className = \"jumbotron formWrapper my-2\">   \r\n                <Table \r\n                    tableData = {array}\r\n                    headingColumns = {[\r\n                  \"Id\",\r\n                  \"Food Item\",\r\n                  \"RecipeDescription\",\r\n                  \"Serving\",\r\n                  \"Base Price\",\r\n                  \"Edit\",\r\n                  \"Delete\"\r\n                  ]}\r\n                    breakOn = \"large\"\r\n                    addEditButton = {true}\r\n                    addDeleteButton = {true}\r\n                    editHandler = {()=>dispatch(action.editHandlerInit(dish))}\r\n                    deleteHandler = {()=>dispatch(action.deleteHandlerInit(dish))}\r\n                />    \r\n              <div className = \"row\">\r\n              <div className = \"col-12\">\r\n                      <TableWrapper\r\n                  tableData={dish.ingredientRecipeArray}\r\n                  headingColumns={[\r\n                  \"Id\",\r\n                  \"ingredient\",\r\n                  \"Quantity \",\r\n                  \"Unit\",\r\n                  \"Cost\",\r\n                  \"Menu Id\",                  \r\n                  ]}\r\n                  breakOn=\"large\"\r\n                  addDeleteButton={false}\r\n                  addEditButton={false}\r\n              />\r\n              </div>\r\n          </div>\r\n\r\n      </div>)\r\n      \r\n    })}\r\n    </div>\r\n    )\r\n  return (\r\n    <div className=\"container-fluid text-center\">\r\n      <div className=\"row \">\r\n        <h1 className=\"display-4 heading\">Food Item Recipe</h1>\r\n      </div>\r\n      <div className=\"row justify-content-around\">\r\n        <FormWrapper>\r\n          <div className=\"w-75 mx-auto\">\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n              <div className=\"form-group my-2\">\r\n                {/* Auto Scroll */}\r\n                <label htmlFor=\"foodItem\">Food Item </label>\r\n                <input\r\n                  className={classNames(\"form-control\", {\r\n                    \"is-invalid\": errors.foodItem,\r\n                  })}\r\n                  type=\"text\"\r\n                  placeholder=\"Food Item\"\r\n                  defaultValue=\"\"\r\n                  {...register(\"foodItem\", { required: \"Field Required\" })}\r\n                  onChange={(e) =>\r\n                    autoHandler(\r\n                      e,\r\n                      \"foodItemArray\",\r\n                      \"foodItem\",\r\n                      setFoodArray,\r\n                      setFoodDisplay,\r\n                      null,\r\n                      null\r\n                    )\r\n                  }\r\n                />\r\n                {foodDisplay && (\r\n                  <div className=\"card w-100\">\r\n                    <div>\r\n                      {foodarray.map((item) => (\r\n                        <div\r\n                          key={item.id}\r\n                          onClick={() => {\r\n                            setValue(\"foodItem\", item.foodItem, {\r\n                              shouldValidate: true,\r\n                            });\r\n                            setFoodDisplay(false);\r\n                          }}\r\n                          className=\"drop border border-bottom-1\"\r\n                        >\r\n                          <p>{item.foodItem}</p>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n                {errors.foodItem && (\r\n                  <p className=\"invalid-feedback\">{errors.foodItem.message}</p>\r\n                )}\r\n              </div>\r\n              <div className=\"form-group my-2\">\r\n                <label className=\"col-5\" htmlFor=\"serving\">\r\n                  Serving For\r\n                </label>\r\n                <select\r\n                  className={classNames(\"form-control\", {\r\n                    \"is-invalid\": errors.serving,\r\n                  })}\r\n                  defaultValue={4}\r\n                  {...register(\"serving\", { required: \"Field Required\" })}\r\n                >\r\n                  <option value={2}> 2</option>\r\n                  <option value={4}> 4</option>\r\n                  <option value={6}> 6</option>\r\n                  <option value={8}> 8</option>\r\n                  <option value={10}> 10</option>\r\n                  <option value={20}> 20</option>\r\n                  <option value={50}> 50</option>\r\n                  <option value={100}> 100</option>\r\n                  <option value={200}> 200</option>\r\n                </select>\r\n                {errors.serving && (\r\n                  <p className=\"invalid-feedback\">{errors.serving.message}</p>\r\n                )}\r\n              </div>\r\n              <div className=\"form-group my-2\">\r\n                <label htmlFor=\"recipeDescription\">Recipe Description</label>\r\n                <textarea\r\n                  className={classNames(\"form-control\", {\r\n                    \"in-valid\": errors.recipeDescription,\r\n                  })}\r\n                  placeholder=\"Recipe Description\"\r\n                  defaultValue = \"\"\r\n                  {...register(\"recipeDescription\", {\r\n                    required: \"Field Is Required\",\r\n                  })}\r\n                />\r\n                {errors.recipeDescription && (\r\n                  <p className=\"invalid-feedback\">\r\n                    {errors.recipeDescription.message}\r\n                  </p>\r\n                )}\r\n              </div>\r\n              <p className=\"lead\">Add ingredient Details</p>\r\n              <div className=\"form-group my-2\">\r\n                {fields.map((item, index) => (\r\n                  <div\r\n                    className=\"jumbotron w-75 border border-light mx-auto p-2 rounded m-2\"\r\n                    key={item.id}\r\n                  >\r\n                    <div className=\" row justify-content-around\">\r\n                      <div className=\"col-12\">\r\n                        <div className=\"form-group my-2\">\r\n                          <input\r\n                            className={classNames(\"form-control\", {\r\n                              \"is-invalid\":\r\n                                errors?.ingredientRecipeArray?.[index]\r\n                                  ?.ingredientId,\r\n                            })}\r\n                            type=\"text\"\r\n                            placeholder=\"Ingredient Name\"\r\n                            defaultValue={`${item.ingredientId}`}\r\n                            {...register(\r\n                              `ingredientRecipeArray[${index}].ingredientId`,\r\n                              { required: \"Field Required\" }\r\n                            )}\r\n                            onChange={(e) =>\r\n                              autoHandler(\r\n                                e,\r\n                                \"ingredientArray\",\r\n                                \"ingredientName\",\r\n                                setIngredientArray,\r\n                                setIngredientDisplay,\r\n                                setIngredientIndex,\r\n                                index\r\n                              )\r\n                            }\r\n                          />\r\n                          {ingredientDisplay && index === ingredientIndex && (\r\n                            <div className=\"card w-100\">\r\n                              <div>\r\n                                {ingredientarray.map((item) => (\r\n                                  <div\r\n                                    key={item.id}\r\n                                    onClick={() => {\r\n                                      setValue(\r\n                                        `ingredientRecipeArray[${index}].ingredientId`,\r\n                                        item.ingredientName,\r\n                                        { shouldValidate: true }\r\n                                      );\r\n                                      setIngredientDisplay(false);\r\n                                    }}\r\n                                    className=\"drop border border-bottom-1\"\r\n                                  >\r\n                                    <p>{item.ingredientName}</p>\r\n                                  </div>\r\n                                ))}\r\n                              </div>\r\n                            </div>\r\n                          )}\r\n                          {errors?.ingredientRecipeArray?.[index]\r\n                            ?.ingredientId && (\r\n                            <div className=\"invalid-feedback\">\r\n                              {\r\n                                errors?.ingredientRecipeArray?.[index]\r\n                                  ?.ingredientId?.message\r\n                              }\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\" row justify-content-around\">\r\n                      <div className=\"col-lg-6 col-mb-12\">\r\n                        <div className=\"form-group my-2\">\r\n                          <select\r\n                            className={classNames(\"form-control\", {\r\n                              \"is-invalid\":\r\n                                errors?.ingredientRecipeArray?.[index]\r\n                                  ?.quantityId,\r\n                            })}\r\n                            type=\"text\"\r\n                            placeholder=\"Qty\"\r\n                            defaultValue={`${item.quantityId}`}\r\n                            {...register(\r\n                              `ingredientRecipeArray[${index}].quantityId`,\r\n                              { required: \"Field Required\" }\r\n                            )}\r\n                            onChange={(e) => {\r\n                              const valuePrice = PriceCalculation(\r\n                                getValues(\r\n                                  `ingredientRecipeArray[${index}].ingredientId`\r\n                                ),\r\n                                e.target.value,\r\n                                getValues(\r\n                                  `ingredientRecipeArray[${index}].unitId`\r\n                                ),\r\n                                index,\r\n                                setPrice,\r\n                                setPriceIndex\r\n                              );\r\n                              setValue(\r\n                                `ingredientRecipeArray[${index}].ingredientPrice`,\r\n                                valuePrice,\r\n                                { shouldValidate: true }\r\n                              );\r\n                              valuePrice && sumUpTotal()\r\n                            }}\r\n                          >\r\n                            <option value=\"\" disabled>\r\n                              Select Qty\r\n                            </option>\r\n                            {selQuantity}\r\n                          </select>\r\n                          {errors?.ingredientRecipeArray?.[index]\r\n                            ?.quantityId && (\r\n                            <div className=\"invalid-feedback\">\r\n                              {\r\n                                errors?.ingredientRecipeArray?.[index]\r\n                                  ?.quantityId?.message\r\n                              }\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-lg-6 col-mb-12\">\r\n                        <div className=\"form-group my-2\">\r\n                          <select\r\n                            className={classNames(\"form-control\", {\r\n                              \"is-invalid\":\r\n                                errors?.ingredientRecipeArray?.[index]?.unitId,\r\n                            })}\r\n                            type=\"text\"\r\n                            placeholder=\"Unit\"\r\n                            defaultValue={`${item.unitId}`}\r\n                            {...register(\r\n                              `ingredientRecipeArray[${index}].unitId`,\r\n                              { required: \"Field Required\" }\r\n                            )}\r\n                            onChange={(e) => {\r\n                              const valuePrice = PriceCalculation(\r\n                                getValues(\r\n                                  `ingredientRecipeArray[${index}].ingredientId`\r\n                                ),\r\n                                getValues(\r\n                                  `ingredientRecipeArray[${index}].quantityId`\r\n                                ),\r\n                                e.target.value,\r\n                                index,\r\n                                setPrice,\r\n                                setPriceIndex\r\n                              );\r\n                              setValue(\r\n                                `ingredientRecipeArray[${index}].ingredientPrice`,\r\n                                valuePrice,\r\n                                { shouldValidate: true }\r\n                              );\r\n                              valuePrice && sumUpTotal()\r\n                            }}\r\n                          >\r\n                            <option value=\"\" disabled>\r\n                              Select Unit\r\n                            </option>\r\n                            {selUnit}\r\n                          </select>\r\n                          {errors?.ingredientRecipeArray?.[index]?.unitId && (\r\n                            <div className=\"invalid-feedback\">\r\n                              {\r\n                                errors?.ingredientRecipeArray?.[index]?.unitId\r\n                                  ?.message\r\n                              }\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"row justify-content-around\">\r\n                      <div className=\"col-12\">\r\n                        <div className=\"form-group my-2\">\r\n                          <input\r\n                            className={classNames(\"form-control priceInput\", {\r\n                              \"is-invalid\":\r\n                                errors?.ingredientRecipeArray?.[index]\r\n                                  ?.ingredientPrice,\r\n                            })}\r\n                            type=\"number\"\r\n                            placeholder=\"Price\"\r\n                            step = \"0.01\"\r\n                            defaultValue={`${item.ingredientPrice}`}\r\n                            {...register(\r\n                              `ingredientRecipeArray[${index}].ingredientPrice`,\r\n                              { required: \"Field Required\" }\r\n                            )}\r\n                            onChange={() =>\r\n                              {setValue(\r\n                                `ingredientRecipeArray[${priceIndex}].ingredientPrice`,\r\n                                price,\r\n                                { shouldValidate: true }\r\n                              ); ( price === getValues(`ingredientRecipeArray[${index}].ingredientPrice`)) && sumUpTotal()}}\r\n                            \r\n                          />\r\n                          {errors?.ingredientRecipeArray?.[index]\r\n                            ?.ingredientPrice && (\r\n                            <div className=\"invalid-feedback\">\r\n                              {\r\n                                errors?.ingredientRecipeArray?.[index]\r\n                                  ?.ingredientPrice?.message\r\n                              }\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\" row justify-content-around\">\r\n                      <div className=\"col-6\">\r\n                        <Button\r\n                          type=\"button\"\r\n                          className=\"btn-sm\"\r\n                          onClick={() =>\r\n                            append({\r\n                              ingredientId: \"\",\r\n                              quantityId: \"\",\r\n                              unitId: \"\",\r\n                              ingredientPrice: \"\",\r\n                            })\r\n                          }\r\n                        >\r\n                          +\r\n                        </Button>\r\n                      </div>\r\n                      <div className=\"col-6\">\r\n                        <Button\r\n                          type=\"button\"\r\n                          className=\"btn-sm\"\r\n                          onClick={() => {remove(index)}}\r\n                        >\r\n                          -\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n\r\n              <div className = \"form-group my-2\">\r\n                    <label htmlFor=\"basePrice\"> Total Amount</label>\r\n                    <input className = {classNames(\"form-control \",{\"is-invalid\" : errors.basePrice})} step = \"0.01\" type=\"number\" {...register(\"basePrice\",{required : \"Field  Is Required\"})}/>\r\n                    {errors.basePrice && <p className=\"invalid-feedback\">{errors.basePrice.message}</p>}\r\n              </div> \r\n              <Button className=\"btn-sm\" type=\"submit\">\r\n                Save\r\n              </Button>\r\n            </form>\r\n          </div>\r\n        </FormWrapper>\r\n        {recipeChart}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ItemRecipe;\r\n","export const MONTHLY_EXPENSE_INIT =\"MONTHLY_EXPENSE_INIT\";\r\nexport const MONTHLY_EXPENSE_SUCCESS =\"MONTHLY_EXPENSE_SUCCESS\";\r\n\r\nexport const SUBMIT_MONTHLY_EXPENSE_HANDLER_INIT =\"SUBMIT_MONTHLY_EXPENSE_HANDLER_INIT\";\r\nexport const SUBMIT_MONTHLY_EXPENSE_HANDLER_SUCCESS =\"SUBMIT_MONTHLY_EXPENSE_HANDLER_SUCCESS\";\r\n\r\nexport const DELETE_MONTHLY_EXPENSE_HANDLER_INIT =\"DELETE_MONTHLY_EXPENSE_HANDLER_INIT\";\r\nexport const DELETE_MONTHLY_EXPENSE_HANDLER_SUCCESS =\"DELETE_MONTHLY_EXPENSE_HANDLER_SUCCESS\";\r\n\r\nexport const EDIT_MONTHLY_EXPENSE_HANDLER_INIT =\"EDIT_MONTHLY_EXPENSE_HANDLER_INIT\";\r\nexport const EDIT_MONTHLY_EXPENSE_HANDLER_SUCCESS =\"EDIT_MONTHLY_EXPENSE_HANDLER_SUCCESS\";\r\n\r\nexport const initilizerMonthlyExpenseHandlerInit = () =>{\r\n    return{\r\n        type :MONTHLY_EXPENSE_INIT\r\n    }\r\n}\r\n\r\nexport const initilizerHandlerSuccess = (monthlyExpenseArray,totalAmount) =>{\r\n    return{\r\n        type : MONTHLY_EXPENSE_SUCCESS,\r\n        monthlyExpenseArray : monthlyExpenseArray,\r\n        totalAmount : totalAmount\r\n    }\r\n}\r\n\r\nexport const submitHandlerInit = (editMode,monthlyExpenseObject) =>{\r\n    return{\r\n        type : SUBMIT_MONTHLY_EXPENSE_HANDLER_INIT,\r\n        editMode : editMode,\r\n        monthlyExpenseObject : monthlyExpenseObject\r\n    }\r\n}\r\n\r\nexport const submitHandlerSuccess = (monthlyExpenseArray,editMode,editObject,totalAmount) =>{\r\n    return{\r\n        type : SUBMIT_MONTHLY_EXPENSE_HANDLER_SUCCESS,\r\n        editMode : editMode,\r\n        monthlyExpenseArray : monthlyExpenseArray,\r\n        editObject : editObject,\r\n        totalAmount :totalAmount\r\n    }\r\n}\r\n\r\nexport const editHandlerInit = (monthlyExpenseObject) =>{\r\n    return{\r\n        type : EDIT_MONTHLY_EXPENSE_HANDLER_INIT,\r\n        monthlyExpenseObject : monthlyExpenseObject,\r\n        editMode : true,\r\n    }\r\n}\r\nexport const editHandlerSuccess = (monthlyExpenseArray,editObject,editMode,totalAmount) =>{\r\n    return{\r\n        type : EDIT_MONTHLY_EXPENSE_HANDLER_SUCCESS,\r\n        monthlyExpenseArray : monthlyExpenseArray,\r\n        editObject : editObject,\r\n        editMode : editMode,\r\n        totalAmount :totalAmount\r\n    }\r\n}\r\nexport const deleteHandlerInit = (monthlyExpenseObject) =>{\r\n    return{\r\n        type : DELETE_MONTHLY_EXPENSE_HANDLER_INIT,\r\n        monthlyExpenseObject : monthlyExpenseObject,\r\n        \r\n\r\n    }\r\n}\r\n\r\nexport const deleteHandlerSuccess = (monthlyExpenseArray,totalAmount) =>{\r\n    return{\r\n        type : DELETE_MONTHLY_EXPENSE_HANDLER_SUCCESS,\r\n        monthlyExpenseArray : monthlyExpenseArray,\r\n        totalAmount :totalAmount\r\n    }\r\n}\r\nconst initialState = {\r\n    monthlyExpenseArray : [],\r\n    totalAmount : 0,\r\n    editMode : false,\r\n    editObject : {},\r\n}\r\nconst MonthlyExpense = (state = initialState,action) =>{\r\n    switch(action.type){\r\n        case MONTHLY_EXPENSE_SUCCESS : \r\n        return{\r\n            ...state,\r\n            monthlyExpenseArray : action.monthlyExpenseArray,\r\n            totalAmount : action.totalAmount\r\n        }\r\n        case SUBMIT_MONTHLY_EXPENSE_HANDLER_SUCCESS : \r\n        return {\r\n            ...state,\r\n            editMode : action.editMode,\r\n            monthlyExpenseArray : action.monthlyExpenseArray,\r\n            editObject : action.editObject,\r\n            totalAmount : action.totalAmount\r\n        }\r\n        case EDIT_MONTHLY_EXPENSE_HANDLER_SUCCESS : \r\n        return{\r\n            ...state,          \r\n            monthlyExpenseArray : action.monthlyExpenseArray,\r\n            editMode : action.editMode,\r\n            editObject : action.editObject,\r\n            totalAmount : action.totalAmount\r\n        \r\n        }\r\n        case DELETE_MONTHLY_EXPENSE_HANDLER_SUCCESS : \r\n        return{\r\n            ...state,\r\n            monthlyExpenseArray : action.monthlyExpenseArray,\r\n            totalAmount : action.totalAmount \r\n        }\r\n        default : return state\r\n    }\r\n}\r\nexport default MonthlyExpense;","import React ,{useState,useEffect}from 'react';\r\nimport Button from \"../../UI/Button/Button\";\r\nimport FormWrapper from \"../../component/FormWrapper/FormWrapper\";\r\nimport TableWrapper from \"../../component/TableWrapper/TableWrapper\";\r\nimport * as action from \"../../store/reducer/MonthlyExpense/MonthlyExpenseReducer\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {useDispatch,useSelector} from \"react-redux\";\r\nimport classNames from \"classnames\";\r\n\r\nconst MonthlyExpense = () => {\r\n    const{register,handleSubmit,formState:{errors,isSubmitted},reset} = useForm({mode : \"onChange\"});\r\n\r\n    const[editMode,setEditMode] = useState(false);\r\n    \r\n    const[id,setId] = useState(null);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const editExpenseItem = useSelector(state => state.MonthlyExpense.editMode);\r\n\r\n    const editObject = useSelector(state =>state.MonthlyExpense.editObject);\r\n  \r\n    const monthlyExpenseArray  = useSelector(state => state.MonthlyExpense.monthlyExpenseArray);\r\n\r\n    const totalExpense  = useSelector(state => state.MonthlyExpense.totalAmount)\r\n    useEffect(() => {\r\n        dispatch(action.initilizerMonthlyExpenseHandlerInit());\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(isSubmitted){     \r\n           reset();  \r\n        }        \r\n    },[isSubmitted]);\r\n\r\n    useEffect(()=>{\r\n        if(editExpenseItem !== editMode){          \r\n            const {id,date,expense,monthlyAmount} = {...editObject} \r\n            setEditMode(editExpenseItem );\r\n            setId(id);\r\n            reset({date : date , expense : expense,monthlyAmount : monthlyAmount});    \r\n        }\r\n    },[editObject,editExpenseItem])\r\n\r\n    const onSubmit = (data) => {\r\n        const mothlyExpenseObject = {};\r\n        mothlyExpenseObject.id = id;\r\n        mothlyExpenseObject.date = data.date;\r\n        mothlyExpenseObject.expense = data.expense;\r\n        mothlyExpenseObject.monthlyAmount = +data.monthlyAmount;\r\n        dispatch(action.submitHandlerInit(editMode,mothlyExpenseObject));     \r\n    }\r\n\r\n    return (\r\n        <div className = \"container-fluid text-center\">\r\n            <div className=\"row \">\r\n            <h1 className=\"display-4 heading\">Monthly Expense Chart</h1>\r\n            </div>\r\n            <div className=\"row justify-content-around\">\r\n                <FormWrapper>\r\n                <div className = \"w-75 mx-auto\">\r\n                <form onSubmit = {handleSubmit(onSubmit)}>\r\n                        <div className = \"form-group my-2\">\r\n                            <label htmlFor=\"date\"> Date</label>\r\n                            <input className = {classNames(\"form-control\",{\"is-invalid\" : errors.date})}  type=\"date\" {...register(\"date\",{required : \"Field  Is Required\"})}/>\r\n                            {errors.date && <p className=\"invalid-feedback\">{errors.date.message}</p>}\r\n                        </div>\r\n                        <div className = \"form-group my-2\">\r\n                            <label htmlFor=\"expense\"> Expense Detail</label>\r\n                            <input className = {classNames(\"form-control\",{\"is-invalid\" : errors.expense})} placeholder = \"Expense Detail\" type=\"expense\" {...register(\"expense\",{required : \"Field  Is Required\"})}/>\r\n                            {errors.expense && <p className=\"invalid-feedback\">{errors.expense.message}</p>}\r\n                        </div>\r\n                        <div className = \"form-group my-2\">\r\n                            <label htmlFor=\"monthlyAmount\"> Monthly Expense</label>\r\n                            <input className = {classNames(\"form-control\",{\"is-invalid\" : errors.monthlyAmount})} placeholder = \"Expense Amount\" type=\"number\" {...register(\"monthlyAmount\",{required : \"Field  Is Required\"})}/>\r\n                            {errors.monthlyAmount && <p className=\"invalid-feedback\">{errors.monthlyAmount.message}</p>}\r\n                        </div>\r\n                        <Button className =\"btn-sm\" type = \"submit\">Submit</Button>\r\n                    </form>\r\n                </div>\r\n                </FormWrapper>\r\n                <div className=\"col-lg-6 col-sm-12\">\r\n                <TableWrapper \r\n                tableData = {monthlyExpenseArray}\r\n                headingColumns = {[\"Id\",\"Date\",\"Expense Detail\",\"Amount\",\"Edit\",\"Delete\"]}\r\n                breakOn = \"small\"\r\n                addDeleteButton = {true}\r\n                addEditButton = {true}\r\n                editHandler = {(data)=>dispatch(action.editHandlerInit(data))}\r\n                deleteHandler = {(data)=>dispatch(action.deleteHandlerInit(data))}\r\n                 />\r\n                  <div className =\"jumbotron formWrapper\">\r\n                        <p> Total Expense: {totalExpense}</p>\r\n                  </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MonthlyExpense\r\n","\r\n// QUANTITY\r\nexport const QUANTITY_INIT = \"QUANTITY_INIT\";\r\n\r\nexport const QUANTITY_SUCCESS = \"QUANTITY_SUCCESS\";\r\n\r\nexport const SUBMIT_QUANTITY_HANDLER_INIT = \"SUBMIT_QUANTITY_HANDLER_INIT\";\r\n\r\nexport const SUBMIT_QUANTITY_HANDLER_SUCCESS = \"SUBMIT_QUANTITY_HANDLER_SUCCESS\";\r\n\r\nexport const EDIT_QUANTITY_HANDLER_INIT = \"EDIT_QUANTITY_HANDLER_INIT\";\r\n\r\nexport const EDIT_QUANTITY_HANDLER_SUCCESS = \"EDIT_QUANTITY_HANDLER_SUCCESS\";\r\n\r\nexport const DELETE_QUANTITY_HANDLER_INIT = \"DELETE_QUANTITY_HANDLER_INIT\";\r\n\r\nexport const DELETE_QUANTITY_HANDLER_SUCCESS = \"DELETE_QUANTITY_HANDLER_SUCCESS\";\r\n\r\nexport const initilizerQtyHandlerInit = () =>{\r\n    return{\r\n        type : QUANTITY_INIT\r\n    }\r\n}\r\n\r\nexport const initilizerHandlerSuccess = (quantityArray) =>{\r\n    return{\r\n        type : QUANTITY_SUCCESS,\r\n        quantityArray : quantityArray  \r\n    }\r\n}\r\n\r\nexport const submitHandlerInit = (editMode,quantityObject) =>{\r\n    return{\r\n        type : SUBMIT_QUANTITY_HANDLER_INIT,\r\n        editMode : editMode,\r\n        quantityObject : quantityObject\r\n    }\r\n}\r\n\r\nexport const submitHandlerSuccess = (quantityArray,editMode,editObject) =>{\r\n    return{\r\n        type : SUBMIT_QUANTITY_HANDLER_SUCCESS,\r\n        editMode : editMode,\r\n        quantityArray : quantityArray,\r\n        editObject : editObject\r\n    }\r\n}\r\n\r\nexport const editHandlerInit = (quantityObject) =>{\r\n    return{\r\n        type : EDIT_QUANTITY_HANDLER_INIT,\r\n        quantityObject : quantityObject,\r\n        editMode : true\r\n    }\r\n}\r\nexport const editHandlerSuccess = (quantityArray,editObject,editMode) =>{\r\n    return{\r\n        type : EDIT_QUANTITY_HANDLER_SUCCESS,\r\n        quantityArray : quantityArray,\r\n        editObject : editObject,\r\n        editMode : editMode\r\n    }\r\n}\r\nexport const deleteHandlerInit = (quantityObject) =>{\r\n    return{\r\n        type : DELETE_QUANTITY_HANDLER_INIT,\r\n        quantityObject : quantityObject\r\n    }\r\n}\r\n\r\nexport const deleteHandlerSuccess = (quantityArray) =>{\r\n    return{\r\n        type : DELETE_QUANTITY_HANDLER_SUCCESS,\r\n        quantityArray : quantityArray\r\n    }\r\n}\r\n\r\nconst initialState = {\r\n    quantityArray : [],\r\n    editMode : false,\r\n    editObject : {},\r\n \r\n}\r\nconst Quantity = (state = initialState,action) =>{\r\n    switch(action.type){\r\n        case QUANTITY_SUCCESS : \r\n        return{\r\n            ...state,\r\n            quantityArray : action.quantityArray      \r\n        }\r\n        case SUBMIT_QUANTITY_HANDLER_SUCCESS : \r\n        return{\r\n            ...state,\r\n            editMode : action.editMode,\r\n            quantityArray : action.quantityArray,\r\n            editObject : action.editObject\r\n        }\r\n        case EDIT_QUANTITY_HANDLER_SUCCESS : \r\n        return{\r\n            ...state,          \r\n            editMode : action.editMode,\r\n            editObject : action.editObject,\r\n            quantityArray : action.quantityArray\r\n        }\r\n        case DELETE_QUANTITY_HANDLER_SUCCESS : \r\n        return{\r\n            ...state,\r\n            quantityArray : action.quantityArray \r\n        }\r\n        default : return state\r\n    }\r\n}\r\nexport default Quantity;","import React, { useState,useEffect } from 'react';\r\nimport {useDispatch,useSelector} from \"react-redux\";\r\nimport * as action from \"../../store/reducer/Quantity/QuantityReducer\";\r\nimport FormWrapper from \"../../component/FormWrapper/FormWrapper\";\r\nimport TableWrapper from \"../../component/TableWrapper/TableWrapper\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport classNames from \"classnames\";\r\nimport Button from \"../../UI/Button/Button\";\r\n\r\nconst Quantity = () => {\r\n    const{register,handleSubmit,formState:{errors,isSubmitted,isValid},reset} = useForm({mode : \"onChange\"});\r\n\r\n\r\n    const[editMode,setEditMode] = useState(false);\r\n    \r\n    const[id,setId] = useState(null);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const editQuantity = useSelector(state => state.Quantity.editMode);\r\n\r\n    const editObject = useSelector(state =>state.Quantity.editObject);\r\n  \r\n    let quantityArray  = useSelector(state => state.Quantity.quantityArray);\r\n\r\n    if(quantityArray === undefined && quantityArray !== null){\r\n        quantityArray = []\r\n    } \r\n          \r\n    useEffect(() => {\r\n        dispatch(action.initilizerQtyHandlerInit());\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(isSubmitted && isValid){     \r\n           reset();  \r\n        }        \r\n    },[isSubmitted,isValid]);\r\n\r\n    useEffect(()=>{\r\n        if(editQuantity !== editMode){          \r\n            const {id,quantity} = {...editObject} \r\n            setEditMode(editQuantity );\r\n            setId(id);\r\n            reset({quantity : quantity});    \r\n        }\r\n    },[editObject,editQuantity])\r\n\r\n    const onSubmit = (data) => {\r\n        const quantityObject = {};\r\n        quantityObject.id = id;\r\n        quantityObject.quantity = +data.quantity;\r\n        dispatch(action.submitHandlerInit(editMode,quantityObject));     \r\n    }\r\n\r\n    return (\r\n        <div className = \"container-fluid text-center\">\r\n            <div className=\"row \">\r\n            <h1 className=\"display-4 heading\">Quantity Master</h1>\r\n            </div>\r\n            <div className=\"row justify-content-around\">\r\n                <FormWrapper>\r\n                <div className = \"w-75 mx-auto\">\r\n                <form onSubmit = {handleSubmit(onSubmit)}>\r\n                        <div className = \"form-group my-2\">\r\n                            <label htmlFor=\"quantity\"> Quantity</label>\r\n                            <input className = {classNames(\"form-control\",{\"is-invalid\" : errors.quantity})} placeholder=\"Qty.\" type=\"number\" {...register(\"quantity\",{required : \"Field  Is Required\"})}/>\r\n                            {errors.quantity && <p className=\"invalid-feedback\">{errors.quantity.message}</p>}\r\n                        </div>                        \r\n                        <Button className =\"btn-sm\" type = \"submit\">Save</Button>\r\n                    </form>\r\n                </div>\r\n                </FormWrapper>\r\n                <div className=\"col-lg-6 col-sm-12  \">\r\n                <TableWrapper \r\n                tableData = {quantityArray}\r\n                headingColumns = {[\"Id\",\"Quantity\",\"Edit\",\"Delete\"]}\r\n                breakOn = \"small\"\r\n                addDeleteButton = {true}\r\n                addEditButton = {true}\r\n                editHandler = {(data)=>dispatch(action.editHandlerInit(data))}\r\n                deleteHandler = {(data)=>dispatch(action.deleteHandlerInit(data))}\r\n                 />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Quantity\r\n","// UNIT\r\nexport const UNIT_INIT = \"UNIT_INIT\";\r\n\r\nexport const UNIT_SUCCESS = \"UNIT_SUCCESS\";\r\n\r\nexport const SUBMIT_UNIT_HANDLER_INIT = \"SUBMIT_UNIT_HANDLER_INIT\";\r\n\r\nexport const SUBMIT_UNIT_HANDLER_SUCCESS = \"SUBMIT_UNIT_HANDLER_SUCCESS\";\r\n\r\nexport const EDIT_UNIT_HANDLER_INIT = \"EDIT_UNIT_HANDLER_INIT\";\r\n\r\nexport const EDIT_UNIT_HANDLER_SUCCESS = \"EDIT_UNIT_HANDLER_SUCCESS\";\r\n\r\nexport const DELETE_UNIT_HANDLER_INIT = \"DELETE_UNIT_HANDLER_INIT\";\r\n\r\nexport const DELETE_UNIT_HANDLER_SUCCESS = \"DELETE_UNIT_HANDLER_SUCCESS\";\r\n\r\nexport const initilizerUnitHandlerInit = () =>{\r\n    return{\r\n        type : UNIT_INIT\r\n    }\r\n}\r\n\r\nexport const initilizerHandlerSuccess = (unitArray) =>{\r\n    return{\r\n        type : UNIT_SUCCESS,\r\n        unitArray : unitArray\r\n    }\r\n}\r\n\r\nexport const submitHandlerInit = (editMode,unitObject) =>{\r\n    return{\r\n        type : SUBMIT_UNIT_HANDLER_INIT,\r\n        editMode : editMode,\r\n        unitObject : unitObject\r\n    }\r\n}\r\n\r\nexport const submitHandlerSuccess = (unitArray,editMode,editObject) =>{\r\n    return{\r\n        type : SUBMIT_UNIT_HANDLER_SUCCESS,\r\n        editMode : editMode,\r\n        unitArray : unitArray,\r\n        editObject : editObject\r\n    }\r\n}\r\n\r\nexport const editHandlerInit = (unitObject) =>{\r\n    return{\r\n        type : EDIT_UNIT_HANDLER_INIT,\r\n        unitObject : unitObject,\r\n        editMode : true\r\n    }\r\n}\r\nexport const editHandlerSuccess = (unitArray,editObject,editMode) =>{\r\n    return{\r\n        type : EDIT_UNIT_HANDLER_SUCCESS,\r\n        unitArray : unitArray,\r\n        editObject : editObject,\r\n        editMode : editMode\r\n    }\r\n}\r\nexport const deleteHandlerInit = (unitObject) =>{\r\n    return{\r\n        type : DELETE_UNIT_HANDLER_INIT,\r\n        unitObject : unitObject\r\n    }\r\n}\r\n\r\nexport const deleteHandlerSuccess = (unitArray) =>{\r\n    return{\r\n        type : DELETE_UNIT_HANDLER_SUCCESS,\r\n        unitArray : unitArray\r\n    }\r\n}\r\n\r\nconst initialState = {\r\n    unitArray : [],\r\n    unitEditMode : false,\r\n    unitEditObject : {}\r\n}\r\n\r\nconst Unit = (state = initialState,action) =>{\r\n    switch(action.type){\r\n        case UNIT_SUCCESS : \r\n        return{\r\n            ...state,           \r\n            unitArray : action.unitArray\r\n        }\r\n        case SUBMIT_UNIT_HANDLER_SUCCESS : \r\n        return{\r\n            ...state,\r\n            editMode : action.editMode,\r\n            unitArray : action.unitArray,\r\n            editObject : action.editObject\r\n        }\r\n        case EDIT_UNIT_HANDLER_SUCCESS : \r\n        return{\r\n            ...state,          \r\n            editMode : action.editMode,\r\n            editObject : action.editObject,\r\n            unitArray : action.unitArray\r\n        }\r\n        case DELETE_UNIT_HANDLER_SUCCESS : \r\n        return{\r\n            ...state,\r\n            unitArray : action.unitArray \r\n        }\r\n        default : return state\r\n    }\r\n}\r\nexport default Unit;","import React, { useState,useEffect } from 'react';\r\nimport {useDispatch,useSelector} from \"react-redux\";\r\nimport * as action from \"../../store/reducer/Unit/UnitReducer\";\r\nimport FormWrapper from \"../../component/FormWrapper/FormWrapper\";\r\nimport TableWrapper from \"../../component/TableWrapper/TableWrapper\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport classNames from \"classnames\";\r\nimport Button from \"../../UI/Button/Button\";\r\n\r\nconst Unit = () => {\r\n    const{register,handleSubmit,formState:{errors,isSubmitted,isValid},reset} = useForm({mode : \"onChange\"});\r\n\r\n\r\n    const[editMode,setEditMode] = useState(false);\r\n    \r\n    const[id,setId] = useState(null);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const editUnit = useSelector(state => state.Unit.editMode);\r\n\r\n    const editObject = useSelector(state =>state.Unit.editObject);\r\n  \r\n    let unitArray  = useSelector(state => state.Unit.unitArray);\r\n\r\n    if(unitArray === undefined && unitArray !== null){\r\n        unitArray = []\r\n    } \r\n          \r\n    useEffect(() => {\r\n        dispatch(action.initilizerUnitHandlerInit());\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(isSubmitted && isValid){     \r\n           reset();  \r\n        }        \r\n    },[isSubmitted,isValid]);\r\n\r\n    useEffect(()=>{\r\n        if(editUnit !== editMode){          \r\n            const {id,unit} = {...editObject} \r\n            setEditMode(editUnit );\r\n            setId(id);\r\n            reset({unit : unit});    \r\n        }\r\n    },[editObject,editUnit])\r\n\r\n    const onSubmit = (data) => {\r\n        const unitObject = {};\r\n        unitObject.id = id;\r\n        unitObject.unit = data.unit;\r\n        dispatch(action.submitHandlerInit(editMode,unitObject));     \r\n    }\r\n\r\n    return (\r\n        <div className = \"container-fluid text-center\">\r\n            <div className=\"row \">\r\n            <h1 className=\"display-4 heading\">unit Master</h1>\r\n            </div>\r\n            <div className=\"row justify-content-around\">\r\n                <FormWrapper>\r\n                <div  className = \"w-75 mx-auto\">\r\n                <form onSubmit = {handleSubmit(onSubmit)}>\r\n                        <div className = \"form-group my-2\">\r\n                            <label htmlFor=\"unit\"> Unit</label>\r\n                            <input className = {classNames(\"form-control\",{\"is-invalid\" : errors.unit})} placeholder = \"Unit\" type=\"text\" {...register(\"unit\",{required : \"Field  Is Required\"})}/>\r\n                            {errors.unit && <p className=\"invalid-feedback\">{errors.unit.message}</p>}\r\n                        </div>                        \r\n                        <Button className =\"btn-sm\" type = \"submit\">Save</Button>\r\n                    </form>\r\n                </div>\r\n                </FormWrapper>\r\n                <div className=\"col-lg-6 col-sm-12  \">\r\n                <TableWrapper \r\n                tableData = {unitArray}\r\n                headingColumns = {[\"Id\",\"Unit\",\"Edit\",\"Delete\"]}\r\n                breakOn = \"small\"\r\n                addDeleteButton = {true}\r\n                addEditButton = {true}\r\n                editHandler = {(data)=>dispatch(action.editHandlerInit(data))}\r\n                deleteHandler = {(data)=>dispatch(action.deleteHandlerInit(data))}\r\n                 />\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Unit\r\n","export const RECIPE_GENERATOR_SUBMIT_INIT = \"RECIPE_GENERATOR_SUBMIT_INIT\";\r\n\r\nexport const RECIPE_GENERATOR_SUBMIT_SUCCESS = \"RECIPE_GENERATOR_SUBMIT_SUCCESS\";\r\n\r\nexport const submitHandlerInit = (recipeGeneratorObject) =>{\r\n    return{\r\n        type : RECIPE_GENERATOR_SUBMIT_INIT,\r\n   \r\n        recipeGeneratorObject : recipeGeneratorObject\r\n    }\r\n}\r\n\r\nexport const submitHandlerSuccess = (recipeGeneratorArray,totalPrice) =>{\r\n    return{\r\n        type : RECIPE_GENERATOR_SUBMIT_SUCCESS,\r\n        recipeGeneratorArray : recipeGeneratorArray,\r\n        totalPrice : totalPrice\r\n    }\r\n}\r\n\r\nconst initialState = {\r\n    recipeGeneratorArray : [],\r\n    totalPrice : 0 \r\n}\r\nconst RecipeGenerator = (state = initialState,action) =>{\r\n    switch(action.type){\r\n        case RECIPE_GENERATOR_SUBMIT_SUCCESS : \r\n        return{\r\n            ...state,\r\n            totalPrice : action.totalPrice,\r\n            recipeGeneratorArray : action.recipeGeneratorArray\r\n        }\r\n        default : return state;\r\n    }\r\n}\r\nexport default RecipeGenerator;\r\n","import React, { useEffect ,useState} from 'react';\r\nimport Button from \"../../UI/Button/Button\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FormWrapper from \"../../component/FormWrapper/FormWrapper\";\r\nimport TableWrapper from \"../../component/TableWrapper/TableWrapper\";\r\nimport classNames from \"classnames\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport * as action from \"../../store/reducer/RecipeGeneratorReducer/RecipeGeneratorReducer\";\r\nimport { AutoComplete } from \"../../Utility/AutoComplete\";\r\nconst RecipeGenerator = () => {\r\n    const { register, handleSubmit, formState: { errors, isValid, isSubmitted }, reset,setValue } = useForm({ mode: \"onChange\" })\r\n\r\n    const [foodDisplay, setFoodDisplay] = useState(false);\r\n    const [foodarray, setFoodArray] = useState(null);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    let recipeGeneratorArray = useSelector((state) => state.RecipeGenerator.recipeGeneratorArray);\r\n\r\n    let totalPrice  = useSelector(state => state.RecipeGenerator.totalPrice);\r\n\r\n    if (recipeGeneratorArray === null) {\r\n        recipeGeneratorArray = []\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (isSubmitted && isValid) {\r\n            reset();\r\n        }\r\n    }, [isSubmitted, isValid, reset])\r\n\r\n    const onSubmit = (data) => {\r\n        dispatch(action.submitHandlerInit(data));\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid text-center\">\r\n            <div className=\"row \">\r\n                <h1 className=\"display-4 heading\">Recipe Generator</h1>\r\n            </div>\r\n            <div className=\"row justify-content-around\">\r\n                <FormWrapper>\r\n                    <div className=\"w-75 mx-auto\">\r\n                        <form onSubmit={handleSubmit(onSubmit)}>\r\n                            <div className=\"form-group my-2\">\r\n                                {/* Auto Scroll */}\r\n                                <label htmlFor=\"foodItem\">Food Item </label>\r\n                                <input\r\n                                    className={classNames(\"form-control\", {\r\n                                        \"is-invalid\": errors.foodItem,\r\n                                    })}\r\n                                    type=\"text\"\r\n                                    placeholder=\"Food Item\"\r\n                                    defaultValue=\"\"\r\n                                    {...register(\"foodItem\", { required: \"Field Required\" })}\r\n                                    onChange={(e) =>\r\n                                        AutoComplete(\r\n                                            e,\r\n                                            \"foodItemArray\",\r\n                                            \"foodItem\",\r\n                                            setFoodArray,\r\n                                            setFoodDisplay,\r\n                                            null,\r\n                                            null\r\n                                        )\r\n                                    }\r\n                                />\r\n                                {foodDisplay && (\r\n                                    <div className=\"card w-100\">\r\n                                        <div>\r\n                                            {foodarray.map((item) => (\r\n                                                <div\r\n                                                    key={item.id}\r\n                                                    onClick={() => {\r\n                                                        setValue(\"foodItem\", item.foodItem, {\r\n                                                            shouldValidate: true,\r\n                                                        });\r\n                                                        setFoodDisplay(false);\r\n                                                    }}\r\n                                                    className=\"drop border border-bottom-1\"\r\n                                                >\r\n                                                    <p>{item.foodItem}</p>\r\n                                                </div>\r\n                                            ))}\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n                                {errors.foodItem && (\r\n                                    <p className=\"invalid-feedback\">{errors.foodItem.message}</p>\r\n                                )}\r\n                            </div>\r\n                            <div className=\"form-group my-2\">\r\n                                <label className=\"col-5\" htmlFor=\"serving\">\r\n                                    Serving For\r\n                                </label>\r\n                                <select\r\n                                    className={classNames(\"form-control\", {\r\n                                        \"is-invalid\": errors.serving,\r\n                                    })}\r\n                                    defaultValue={4}\r\n                                    {...register(\"serving\", { required: \"Field Required\" })}\r\n                                >\r\n                                    <option value={2}> 2</option>\r\n                                    <option value={4}> 4</option>\r\n                                    <option value={6}> 6</option>\r\n                                    <option value={8}> 8</option>\r\n                                    <option value={10}> 10</option>\r\n                                    <option value={20}> 20</option>\r\n                                    <option value={50}> 50</option>\r\n                                    <option value={100}> 100</option>\r\n                                    <option value={200}> 200</option>\r\n                                </select>\r\n                                {errors.serving && (\r\n                                    <p className=\"invalid-feedback\">{errors.serving.message}</p>\r\n                                )}\r\n                            </div>\r\n                            <Button type=\"submit\" disabled = {!foodDisplay}>Generate</Button>        \r\n                        </form>\r\n                    </div>\r\n                </FormWrapper>\r\n                <div className=\"col-lg-6 col-sm-12  \">                    \r\n                   <TableWrapper\r\n                        tableData = {recipeGeneratorArray}\r\n                        headingColumns = {[\"Id\",\"Ingredient\",\"Quantity\",\"Unit\",\"Price\",\"MenuId\"]}\r\n                        breakOn = \"large\"\r\n                        addDeleteButton = {false}\r\n                        addEditButton = {false}\r\n                   /> \r\n                    <div className =\"jumbotron formWrapper\">\r\n                         <p> Total Price : {totalPrice}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RecipeGenerator\r\n","export const VENDOR_MAPPING_INIT = \"VENDOR_MAPPING_INIT\";\r\n\r\nexport const VENDOR_MAPPING_SUCCESS = \"VENDOR_MAPPING_SUCCESS\";\r\n\r\nexport const VENDOR_MAPPING_SUBMIT_INIT = \"VENDOR_MAPPING_SUBMIT_INIT\";\r\n\r\nexport const VENDOR_MAPPING_SUBMIT_SUCCESS = \"VENDOR_MAPPING_SUBMIT_SUCCESS\";\r\n\r\nexport const VENDOR_MAPPING_EDIT_INIT = \"VENDOR_MAPPING_EDIT_INIT\";\r\n\r\nexport const VENDOR_MAPPING_EDIT_SUCCESS = \"VENDOR_MAPPING_EDIT_SUCCESS\";\r\n\r\nexport const VENDOR_MAPPING_DELETE_INIT = \"VENDOR_MAPPING_DELETE_INIT\";\r\n\r\nexport const VENDOR_MAPPING_DELETE_SUCCESS = \"VENDOR_MAPPING_DELETE_SUCCESS\";\r\n\r\nexport const initializeVendorMappingInit = () =>{\r\n    return{\r\n        type : VENDOR_MAPPING_INIT\r\n    }\r\n}\r\n\r\nexport const initilizerHandlerSuccess = (vendorMappingArray,ingredientArray,vendorArray,unitArray) =>{\r\n    return{\r\n        type : VENDOR_MAPPING_SUCCESS,\r\n        vendorMappingArray : vendorMappingArray,\r\n        ingredientArray: ingredientArray,\r\n        vendorArray : vendorArray,\r\n        unitArray : unitArray\r\n    }\r\n}\r\n\r\nexport const submitHandlerInit = (editMode,vendorMappingObject) =>{\r\n    return{\r\n        type : VENDOR_MAPPING_SUBMIT_INIT,\r\n        editMode : editMode,\r\n        vendorMappingObject : vendorMappingObject\r\n    }\r\n}\r\n\r\nexport const submitHandlerSuccess = (vendorMappingArray,editMode,editObject) =>{\r\n    return{\r\n        type : VENDOR_MAPPING_SUBMIT_SUCCESS,\r\n        editMode : editMode,\r\n        vendorMappingArray : vendorMappingArray,\r\n        editObject : editObject\r\n    }\r\n}\r\n\r\nexport const editHandlerInit = (vendorMappingObject) =>{\r\n    return{\r\n        type : VENDOR_MAPPING_EDIT_INIT,\r\n        vendorMappingObject : vendorMappingObject,\r\n        editMode : true\r\n    }\r\n}\r\nexport const editHandlerSuccess = (vendorMappingArray,editObject,editMode) =>{\r\n    return{\r\n        type : VENDOR_MAPPING_EDIT_SUCCESS,     \r\n        vendorMappingArray : vendorMappingArray, \r\n        editObject : editObject,\r\n        editMode : editMode\r\n    }\r\n}\r\nexport const deleteHandlerInit = (vendorMappingObject) =>{\r\n    return{\r\n        type : VENDOR_MAPPING_DELETE_INIT,\r\n        vendorMappingObject : vendorMappingObject\r\n    }\r\n}\r\n\r\n\r\nexport const deleteHandlerSuccess = (vendorMappingArray) =>{\r\n    return{\r\n        type : VENDOR_MAPPING_DELETE_SUCCESS,\r\n        vendorMappingArray : vendorMappingArray\r\n    }\r\n}\r\n\r\n\r\nconst initialState = {\r\n    vendorMappingArray : [],\r\n    editMode : false,\r\n    editObject : {},\r\n    ingredientArray : [],\r\n    vendorArray : [],\r\n    unitArray : []\r\n}\r\nconst VendorMapping = (state = initialState,action) =>{\r\n    switch(action.type){\r\n        case VENDOR_MAPPING_SUCCESS:\r\n            return{\r\n                ...state,\r\n                vendorMappingArray : action.vendorMappingArray,\r\n                ingredientArray : action.ingredientArray,\r\n                vendorArray : action.vendorArray,\r\n                unitArray : action.unitArray\r\n            }\r\n            case VENDOR_MAPPING_SUBMIT_SUCCESS : \r\n            return{\r\n                ...state,\r\n                editMode : action.editMode,\r\n                vendorMappingArray : action.vendorMappingArray,\r\n                editObject : action.editObject\r\n            }\r\n            case VENDOR_MAPPING_EDIT_SUCCESS : \r\n            return{\r\n                ...state,          \r\n                vendorMappingArray : action.vendorMappingArray,\r\n                editMode : action.editMode,\r\n                editObject : action.editObject,\r\n            \r\n            }\r\n            case VENDOR_MAPPING_DELETE_SUCCESS : \r\n            return{\r\n                ...state,\r\n                vendorMappingArray : action.vendorMappingArray \r\n            }\r\n        default : return state;    \r\n    }\r\n}\r\nexport default VendorMapping;","import React,{useEffect,useState} from 'react';\r\nimport Button from \"../../UI/Button/Button\";\r\nimport {useForm,useFieldArray} from \"react-hook-form\";\r\nimport FormWrapper from \"../../component/FormWrapper/FormWrapper\";\r\nimport TableWrapper from \"../../component/TableWrapper/TableWrapper\";\r\nimport classNames from \"classnames\";\r\nimport * as action from \"../../store/reducer/VendorIngredientMappingReducer/VendorIngredientMappingReducer\";\r\nimport {useDispatch,useSelector} from \"react-redux\";\r\nimport Table from \"../../UI/Table/Table\";\r\nimport { AutoComplete } from '../../Utility/AutoComplete';\r\n\r\nconst VendorIngredientMapping = () => {\r\n    const{register,handleSubmit,formState : {errors,isSubmitted},control,setValue,reset} = useForm({mode : \"onChange\",\r\n    defaultValues : {\r\n        vendorQuoteArray : [\r\n            {vendorId : \"\" , quotePrice : \"\"}\r\n        ]\r\n    }})\r\n    const {append,fields,remove} = useFieldArray({\r\n        control,\r\n        name : \"vendorQuoteArray\"\r\n    });\r\n\r\n    const[editMode ,setEditMode] = useState(false);\r\n    const[id,setId] = useState(null);\r\n        \r\n    // Ingredient Display\r\n    const [ingredientDisplay, setIngredientDisplay] = useState(false);\r\n    const [ingredientarray, setIngredientArray] = useState(null);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    let vendorArray = useSelector(state => state.VendorMapping.vendorArray);\r\n    let unitArray = useSelector(state =>state.VendorMapping.unitArray);\r\n    let vendorMappingArray = useSelector(state => state.VendorMapping.vendorMappingArray);\r\n    \r\n    const editObject = useSelector(state => state.VendorMapping.editObject);\r\n    const editVendorMappingMode = useSelector(state => state.VendorMapping.editMode);\r\n\r\n    if(vendorMappingArray === undefined && vendorMappingArray === null){\r\n        vendorMappingArray = [];\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(action.initializeVendorMappingInit());\r\n    }, []);\r\n\r\n    useEffect(() => {    \r\n        if (isSubmitted) {\r\n          reset();\r\n        }\r\n    }, [isSubmitted,reset]);\r\n\r\n    useEffect(()=>{\r\n        if(editVendorMappingMode !== editMode){          \r\n            const {id,ingredientName,unitId,vendorQuoteArray} = {...editObject} \r\n            setEditMode(editVendorMappingMode );\r\n            setId(id);\r\n            reset({ingredientName : ingredientName ,unitId : unitId,vendorQuoteArray: vendorQuoteArray}); \r\n        }         \r\n    },[editVendorMappingMode,editObject]);\r\n\r\n    const onSubmit = (data) => {    \r\n        data.id = id;\r\n        dispatch(action.submitHandlerInit(editMode, data));\r\n    };\r\n\r\n    const selUnit = unitArray.map((unit) => (\r\n    <option key={unit.id} value={unit.id}>\r\n        {unit.unit}\r\n    </option>\r\n    ));\r\n\r\n    const selVendor = vendorArray.map((vendor) =>(\r\n        <option key={vendor.id} value = {vendor.id}>\r\n            {vendor.vendorName}\r\n        </option>\r\n    ))\r\n\r\n    const vendorMappingChart = (\r\n        <div className=\"col-lg-6 col-sm-12  \">\r\n            {vendorMappingArray.map((item,index) => {\r\n                let array = [];\r\n                let object = {}\r\n                object.id = item.id;\r\n                object.ingredientName = item.ingredientName;\r\n                object.unitId = item.unitId;\r\n                array.push(object)\r\n                    return(\r\n            <div key = {index}>\r\n                <div  className = \"jumbotron formWrapper my-2\">   \r\n                    <Table tableData = {array} headingColumns = {[\"Id\",\"Ingredient Name\",\"Unit\",\"Edit\",\"Delete\"]} breakOn = \"large\" addEditButton = {true} addDeleteButton = {true} editHandler = {()=>dispatch(action.editHandlerInit(item))} deleteHandler = {()=>dispatch(action.deleteHandlerInit(item))}/>    \r\n                <div className = \"row\">\r\n                <div className = \"col-12\">\r\n                        <TableWrapper tableData={item.vendorQuoteArray} headingColumns={[\"Id\",\"Vendor Name\", \"Quote Price\"]} breakOn=\"large\" addDeleteButton={false} addEditButton={false} />\r\n                </div>\r\n            </div>            \r\n        </div>\r\n      </div>)      \r\n    })}\r\n    </div>\r\n    )\r\n      return (\r\n        <div className=\"container-fluid text-center\">\r\n            <div className=\"row \">\r\n                <h1 className=\"display-4 heading\">Vendor Ingredient Mapping</h1>\r\n            </div>\r\n            <div className=\"row justify-content-around\">\r\n               <FormWrapper>\r\n                   <div className=\"w-75 mx-auto\">\r\n                       <form onSubmit = {handleSubmit(onSubmit)}>\r\n                           <div className = \"form-group my-2\">\r\n                               <label htmlFor = \"ingredientName\">Ingredient Name</label>\r\n                               <input className = {classNames(\"form-control\",{\"is-invalid\" : errors.ingredientName})} placeholder = \"Ingredient Name\" type = \"text\" {...register(\"ingredientName\",{required : \"Field required\"})} onChange = {(e) => AutoComplete(e,\"ingredientArray\",\"ingredientName\",setIngredientArray,setIngredientDisplay,null,null)} />\r\n                               {ingredientDisplay && (\r\n                                <div className = \"card w-100\">\r\n                                    <div>\r\n                                        {ingredientarray.map((item) =>(\r\n                                            <div key = {item.id} onClick = {() =>{setValue(\"ingredientName\",item.ingredientName,{shouldValidate : true});setIngredientDisplay(false)}} className = \"drop border border-bottom-1\">\r\n                                                <p>{item.ingredientName}</p>\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                </div>\r\n                               )}\r\n                               {errors.ingredientName && (<p className = \"invalid-feedback\">{errors.ingredientName.message}</p>)}\r\n                           </div>\r\n                           <div className = \"form-group my-2\">\r\n                               <label htmlFor = \"unitId\">Unit</label>\r\n                               <select className = {classNames(\"form-control\",{\"is-invalid\" : errors.unitId})} defaultValue=\"\" {...register(\"unitId\",{required : \"Field Required\"})}>\r\n                               <option value=\"\" disabled>\r\n                                  Select Unit\r\n                                </option>\r\n                                {selUnit}\r\n                               </select>\r\n                           </div>\r\n                           <p className=\"lead\">Add Vendor Quote</p>\r\n                           <div className = \"form-group my-2\">\r\n                               {fields.map((item,index) =>(\r\n                                   <div key={index}>\r\n                                        <div className = \"form-group my-2\">\r\n                                        <select className = {classNames(\"form-control\",{\"is-invalid\" : errors?.vendorQuoteArray?.[index]?.vendorId})} type = \"text\" placeholder = \"Vendor\" defaultValue = {`${item.vendorId}`} {...register(`vendorQuoteArray[${index}].vendorId`,{required : \"Field Required\"})}>\r\n                                            <option value=\"\" disabled>\r\n                                            Select Vendor\r\n                                            </option>\r\n                                            {selVendor}  \r\n                                            </select>\r\n                                            {errors?.vendorQuoteArray?.[index]?.vendorId && (\r\n                                                <div className = \"invalid-feedback\">\r\n                                                    {errors?.vendorQuoteArray?.[index].vendorId?.message}\r\n                                                </div>\r\n                                            )}\r\n                                        </div>\r\n                                        <div className = \"form-group my-2\">\r\n                                            <input className = {classNames(\"form-control\",{\"is-invalid\" : errors?.vendorQuoteArray?.[index]?.quotePrice})} type =\"number\" step=\"0.01\" placeholder = \"Price\" defaultValue = {`${item.quotePrice}`} {...register(`vendorQuoteArray[${index}].quotePrice`,{required : \"Field Required\"})}/>\r\n                                            {errors?.vendorQuoteArray?.[index]?.quotePrice && <div className = \"invalid-feedback\">{errors?.vendorQuoteArray?.[index]?.quotePrice?.message}</div>}\r\n                                        </div>\r\n                                       <div className=\" row justify-content-around\">\r\n                                           <div className=\"col-6 \">\r\n                                               <Button type=\"button\" className=\"btn-sm\" onClick={() =>append({vendorId : \"\",quotePrice : \"\"})}>+</Button>\r\n                                            </div>\r\n                                           <div className=\"col-6\">\r\n                                               <Button type=\"button\" className=\"btn-sm\" onClick={() => { remove(index) }}>-</Button>\r\n                                           </div>\r\n                                       </div>\r\n                                   </div>\r\n                               ))}\r\n                           </div>\r\n                           <Button className=\"btn-sm\" type=\"submit\">\r\n                            Submit\r\n                            </Button>\r\n                       </form>\r\n                   </div>\r\n               </FormWrapper> \r\n               {vendorMappingChart}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VendorIngredientMapping\r\n","export const VENDOR_INIT = \"VENDOR_INIT\";\r\n\r\nexport const VENDOR_SUCCESS  = \"VENDOR_SUCCESS\";\r\n\r\nexport const SUBMIT_VENDOR_HANDLER_INIT = \"SUBMIT_VENDOR_HANDLER_INIT\";\r\n\r\nexport const SUBMIT_VENDOR_HANDLER_SUCCESS = \"SUBMIT_VENDOR_HANDLER_SUCCESS\";\r\n\r\nexport const EDIT_VENDOR_HANDLER_INIT = \"EDIT_VENDOR_HANDLER_INIT\" ;\r\n\r\nexport const EDIT_VENDOR_HANDLER_SUCCESS = \"EDIT_VENDOR_HANDLER_SUCCESS\" ;\r\n\r\nexport const DELETE_VENDOR_HANDLER_INIT = \"DELETE_VENDOR_HANDLER_INIT\" ;\r\n\r\nexport const DELETE_VENDOR_HANDLER_SUCCESS = \"DELETE_VENDOR_HANDLER_SUCCESS\";\r\n\r\nexport const initializeVendorInit = () =>{\r\n    return{\r\n        type : VENDOR_INIT\r\n    }\r\n}\r\nexport const initilizerHandlerSuccess = (vendorArray) =>{\r\n    return{\r\n        type : VENDOR_SUCCESS,\r\n        vendorArray : vendorArray  \r\n    }\r\n}\r\n\r\nexport const submitHandlerInit = (editMode,vendorObject) =>{\r\n    return{\r\n        type : SUBMIT_VENDOR_HANDLER_INIT,\r\n        editMode : editMode,\r\n        vendorObject : vendorObject\r\n    }\r\n}\r\n\r\nexport const submitHandlerSuccess = (vendorArray,editMode,editObject) =>{\r\n    return{\r\n        type : SUBMIT_VENDOR_HANDLER_SUCCESS,\r\n        editMode : editMode,\r\n        vendorArray : vendorArray,\r\n        editObject : editObject\r\n    }\r\n}\r\n\r\nexport const editHandlerInit = (vendorObject) =>{\r\n    return{\r\n        type : EDIT_VENDOR_HANDLER_INIT,\r\n        vendorObject : vendorObject,\r\n        editMode : true\r\n    }\r\n}\r\nexport const editHandlerSuccess = (vendorArray,editObject,editMode) =>{\r\n    return{\r\n        type : EDIT_VENDOR_HANDLER_SUCCESS,\r\n        vendorArray : vendorArray,\r\n        editObject : editObject,\r\n        editMode : editMode\r\n    }\r\n}\r\nexport const deleteHandlerInit = (vendorObject) =>{\r\n    return{\r\n        type : DELETE_VENDOR_HANDLER_INIT,\r\n        vendorObject : vendorObject\r\n    }\r\n}\r\n\r\nexport const deleteHandlerSuccess = (vendorArray) =>{\r\n    return{\r\n        type : DELETE_VENDOR_HANDLER_SUCCESS,\r\n        vendorArray : vendorArray\r\n    }\r\n}\r\n\r\nconst initialState = {\r\n    vendorArray : [],\r\n    editMode : false,\r\n    editObject : {},\r\n \r\n}\r\nconst VendorMaster = (state = initialState,action) =>{\r\n    switch(action.type){\r\n        case VENDOR_SUCCESS : \r\n        return{\r\n            ...state,\r\n            vendorArray : action.vendorArray      \r\n        }\r\n        case SUBMIT_VENDOR_HANDLER_SUCCESS : \r\n        return{\r\n            ...state,\r\n            editMode : action.editMode,\r\n            vendorArray : action.vendorArray,\r\n            editObject : action.editObject\r\n        }\r\n        case EDIT_VENDOR_HANDLER_SUCCESS : \r\n        return{\r\n            ...state,          \r\n            editMode : action.editMode,\r\n            editObject : action.editObject,\r\n            vendorArray : action.vendorArray\r\n        }\r\n        case DELETE_VENDOR_HANDLER_SUCCESS : \r\n        return{\r\n            ...state,\r\n            vendorArray : action.vendorArray \r\n        }\r\n        default : return state\r\n    }\r\n}\r\nexport default VendorMaster;","import React ,{useState,useEffect}from 'react'\r\nimport {useDispatch,useSelector} from \"react-redux\";\r\nimport Button from \"../../UI/Button/Button\";\r\nimport FormWrapper from \"../../component/FormWrapper/FormWrapper\";\r\nimport TableWrapper from \"../../component/TableWrapper/TableWrapper\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport classNames from \"classnames\";\r\nimport * as action from \"../../store/reducer/VendorMaster/VendorMasterReducer\";\r\n\r\nconst VendorMaster = () => {\r\n    const {register,handleSubmit,formState : {errors,isSubmitted,isValid},reset} = useForm({mode : \"onChange\"});\r\n\r\n    const [editMode,setEditMode]  = useState(false);\r\n\r\n    const[id,setId] = useState(null);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const editModeForm = useSelector(state => state.VendorMaster.editMode);\r\n\r\n    const editObject = useSelector(state => state.VendorMaster.editObject);\r\n\r\n    let vendorArray = useSelector(state => state.VendorMaster.vendorArray);\r\n\r\n    if(vendorArray === undefined && vendorArray !== null){\r\n        vendorArray = []\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(action.initializeVendorInit());\r\n    }, [])\r\n\r\n    useEffect(() =>{\r\n        if(isSubmitted && isValid){\r\n            reset();\r\n        }\r\n    },[isSubmitted,isValid])\r\n\r\n    useEffect(() => {\r\n        if(editModeForm !== editMode){\r\n            const {id,vendorName,address,mobileNumber,email} = {...editObject} \r\n            setEditMode(editModeForm );\r\n            setId(id);\r\n            reset({vendorName : vendorName , address : address , mobileNumber : mobileNumber , email : email});    \r\n        }\r\n    }, [editModeForm,editObject])\r\n\r\n    const onSubmit = data => {\r\n        const vendorObject = {};\r\n        vendorObject.id = id;\r\n        vendorObject.vendorName = data.vendorName;\r\n        vendorObject.address = data.address;\r\n        vendorObject.mobileNumber = data.mobileNumber;\r\n        vendorObject.email = data.email;\r\n        dispatch(action.submitHandlerInit(editMode,vendorObject));  \r\n    }\r\n\r\n    return (\r\n        <div className = \"container-fluid text-center\">\r\n            <div className=\"row \">\r\n            <h1 className=\"display-4 heading\">Vendor Master</h1>\r\n            </div>\r\n            <div className=\"row justify-content-around\">\r\n                <FormWrapper>\r\n                <div className = \"w-75 mx-auto\">\r\n                <form onSubmit = {handleSubmit(onSubmit)}>\r\n                        <div className = \"form-group my-2\">\r\n                            <label htmlFor=\"vendorName\"> Vendor Name</label>\r\n                            <input className = {classNames(\"form-control\",{\"is-invalid\" : errors.vendorName})} type=\"text\" placeholder = \"Vendor Name\" {...register(\"vendorName\",{required : \"Field  Is Required\"})}/>\r\n                            {errors.vendorName && <p className=\"invalid-feedback\">{errors.vendorName.message}</p>}\r\n                        </div>    \r\n                        <div className = \"form-group my-2\">\r\n                            <label htmlFor = \"address\">Address</label>\r\n                            <textarea className = {classNames(\"form-control\",{\"is-invalid\" : errors.address})} placeholder = \"Address\" {...register(\"address\",{required : \"Field Is Required\"})}/>\r\n                            {errors.address && <p className=\"invalid-feedback\">{errors.address.message}</p>}\r\n                        </div> \r\n                        <div className = \"form-group\">\r\n                            <label htmlFor=\"mobileNumber\"> Mobile Number</label>\r\n                            <input className = {classNames(\"form-control\",{\"is-invalid\" : errors.mobileNumber})} placeholder = \"Mobile Number\" type=\"number\" {...register(\"mobileNumber\",{required : \"Field  Is Required\",pattern:{value : /^\\d{10}$/,message: \"Type Valid Mobile Number of 10 Digit\"}})}/>\r\n                            {errors.mobileNumber && <p className=\"invalid-feedback\">{errors.mobileNumber.message}</p>}\r\n                        </div>  \r\n                        <div className = \"form-group\">\r\n                            <label htmlFor=\"email\"> Email Address</label>\r\n                            <input className = {classNames(\"form-control\",{\"is-invalid\" : errors.email})} placeholder = \"E-mail\" type = \"email\" {...register(\"email\",{required : \"Field  Is Required\",pattern:{value : /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/ ,message: \"Type Valid Email Address\"}})}/>\r\n                            {errors.email && <p className=\"invalid-feedback\">{errors.email.message}</p>}\r\n                        </div>                 \r\n                        <Button className =\"btn-sm my-2\" type = \"submit\">Save</Button>\r\n                    </form>\r\n                </div>\r\n                </FormWrapper>\r\n                <div className=\"col-lg-6 col-sm-12  \">\r\n                <TableWrapper \r\n                tableData = {vendorArray}\r\n                headingColumns = {[\"Id\",\"Vendor Name\",\"Address\",\"Mobile Number\",\"Email\",\"Edit\",\"Delete\"]}\r\n                breakOn = \"large\"\r\n                addDeleteButton = {true}\r\n                addEditButton = {true}\r\n                editHandler = {(data)=>dispatch(action.editHandlerInit(data))}\r\n                deleteHandler = {(data)=>dispatch(action.deleteHandlerInit(data))}\r\n                 />\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VendorMaster\r\n","export const RESERVATION_TABLE_INIT = \"RESERVATION_TABLE_INIT\";\r\n\r\nexport const RESERVATION_SUCCESS = \"RESERVATION_SUCCESS\";\r\n\r\nexport const RESERVATION_TABLE_SUBMIT_INIT = \"RESERVATION_TABLE_SUBMIT_INIT\";\r\n\r\nexport const RESERVATION_SUBMIT_SUCCESS = \"RESERVATION_SUBMIT_SUCCESS\";\r\n\r\nexport const EDIT_TABLE_RESERVATION_INIT = \"EDIT_TABLE_RESERVATION_INIT\";\r\n\r\nexport const EDIT_RESERVATION_SUCCESS = \"EDIT_RESERVATION_SUCCESS\";\r\n\r\nexport const DELETE_TABLE_RESERVATION_INIT = \"DELETE_TABLE_RESERVATION_INIT\";\r\n\r\nexport const DELETE_RESERVATION_SUCCESS = \"DELETE_RESERVATION_SUCCESS\";\r\n\r\nexport const initilizerReservationInit=()=>{\r\n    console.log(\"HOLLO\");\r\n    return{\r\n        type : RESERVATION_TABLE_INIT,\r\n    }\r\n}\r\n\r\nexport const initilizerReservationSuccess=(tableReservationArray)=>{\r\n    console.log(\"Print INIT SUCCESS\")\r\n    return{\r\n        type : RESERVATION_SUCCESS,\r\n        tableReservationArray : tableReservationArray     \r\n    }\r\n}\r\n\r\nexport const submitHandlerInit = (editMode,tableReservationObject) =>{    \r\n    console.log(tableReservationObject)\r\n    return{\r\n        type : RESERVATION_TABLE_SUBMIT_INIT,\r\n        editMode : editMode,\r\n        tableReservationObject : tableReservationObject\r\n    }\r\n}\r\n\r\nexport const submitHandlerSuccess = (tableReservationArray,editMode,editObject) =>{\r\n    return{\r\n        type : RESERVATION_SUBMIT_SUCCESS,\r\n        editMode : editMode,\r\n        tableReservationArray : tableReservationArray,\r\n        editObject : editObject\r\n    }\r\n}\r\n\r\nexport const editHandlerInit = (tableReservationObject) =>{\r\n    return{\r\n        type : EDIT_TABLE_RESERVATION_INIT,\r\n        tableReservationObject : tableReservationObject,\r\n        editMode : true\r\n    }\r\n}\r\nexport const editHandlerSuccess = (tableReservationArray,editObject,editMode) =>{\r\n    return{\r\n        type : EDIT_RESERVATION_SUCCESS,\r\n        tableReservationArray : tableReservationArray,\r\n        editObject : editObject,\r\n        editMode : editMode\r\n    }\r\n}\r\nexport const deleteHandlerInit = (tableReservationObject) =>{\r\n    return{\r\n        type : EDIT_TABLE_RESERVATION_INIT,\r\n        tableReservationObject : tableReservationObject\r\n    }\r\n}\r\n\r\nexport const deleteHandlerSuccess = (tableReservationArray) =>{\r\n    return{\r\n        type : DELETE_RESERVATION_SUCCESS,\r\n        tableReservationArray : tableReservationArray\r\n    }\r\n}\r\nconst initialState = {\r\n    editMode : false,\r\n    editObject : {},\r\n    tableReservationArray : [],\r\n    reservationLeft : 10\r\n}\r\n\r\nconst TableReservation = (state = initialState,action) =>{\r\n    switch(action.type){\r\n        case RESERVATION_SUCCESS : \r\n        return{\r\n            ...state,\r\n            tableReservationArray : action.tableReservationArray,\r\n      \r\n        }\r\n        case RESERVATION_SUBMIT_SUCCESS : \r\n        return{\r\n            ...state,\r\n            editMode : action.editMode,\r\n            tableReservationArray : action.tableReservationArray,\r\n            editObject : action.editObject\r\n        }\r\n        case EDIT_RESERVATION_SUCCESS : \r\n        return{\r\n            ...state,          \r\n            editMode : action.editMode,\r\n            editObject : action.editObject,\r\n            tableReservationArray : action.tableReservationArray\r\n        }\r\n        case DELETE_RESERVATION_SUCCESS : \r\n        return{\r\n            ...state,\r\n            tableReservationArray : action.tableReservationArray \r\n        }\r\n        default : return state\r\n    }\r\n}\r\nexport default TableReservation","import React,{useState,useEffect} from 'react';\r\nimport {useDispatch,useSelector} from \"react-redux\";\r\nimport FormWrapper from \"../../component/FormWrapper/FormWrapper\";\r\nimport TableWrapper from \"../../component/TableWrapper/TableWrapper\";\r\nimport Button from \"../../UI/Button/Button\";\r\nimport classNames from \"classnames\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport * as action from \"../../store/reducer/TableReservation/TableReservationReducer\";\r\nimport * as yup from \"yup\";\r\n\r\n// const schema = yup.object().shape({\r\n//     attachment : yup\r\n//         .mixed()\r\n//         .required(\"Field Required\")\r\n//         .test(\"fileSize\",\"This File is too large accept less than 2 MB\",(value)=>{\r\n//             return value && value[0].size <= 200000\r\n//         })\r\n//         .test(\"type\",\"We only support PNG\",(value)=>{\r\n//             return value && (value[0].type === \"image/png\" )\r\n//         }),\r\n// });\r\n \r\nconst TableReservation = () => {\r\n    const{register,handleSubmit,formState:{errors,isSubmitted,isValid},reset} = useForm({mode:\"onChange\"});\r\n\r\n    const[editMode,setEditMode] = useState(false);\r\n\r\n    const[id,setId] = useState(null);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const editTableReservationMode = useSelector(state => state.TableReservation.editMode);\r\n\r\n    const editObject = useSelector(state => state.TableReservation.editObject);\r\n\r\n    const tableReservationArray = useSelector(state => state.TableReservation.tableReservationArray);\r\n\r\n    useEffect(()=>{\r\n        dispatch(action.initilizerReservationInit());\r\n    },[])        \r\n\r\n    useEffect(()=>{\r\n        if(editTableReservationMode !== editMode){          \r\n            const {id,customerName,date,time,person} = {...editObject} \r\n            setEditMode(editTableReservationMode );\r\n            setId(id);\r\n            reset({customerName : customerName , date : date,time : time,person : person});    \r\n        }\r\n    },[editObject,editTableReservationMode])\r\n\r\n    useEffect(()=>{\r\n        if(isSubmitted && isValid){\r\n            reset({customerName : \"\",});\r\n        }\r\n    },[isSubmitted,reset]);\r\n\r\n    const onSubmit = (data) => {\r\n        data.id = id;\r\n        dispatch(action.submitHandlerInit(editMode,data));\r\n    };\r\n\r\n    return (\r\n        <div className = \"container-fluid text-center\">\r\n            <div className=\"row \">\r\n            <h1 className=\"display-4 heading\">Table Reservation</h1>\r\n            </div>\r\n            <div className=\"row justify-content-around\">\r\n                <FormWrapper>\r\n                <div className = \"w-75 mx-auto\">\r\n                <form onSubmit= {handleSubmit(onSubmit) }>\r\n                        <div className = \"form-group my-2\">\r\n                            <label htmlFor=\"customerName\"> Customer Name</label>\r\n                            <input className = {classNames(\"form-control\",{\"is-invalid\" : errors.customerName})} placeholder = \"Customer Name\" type=\"text\" {...register(\"customerName\",{required : \"Field  Is Required\"})}/>\r\n                            {errors.customerName && <p className=\"invalid-feedback\">{errors.customerName.message}</p>}\r\n                        </div>\r\n                        <div className = \"form-group my-2\">\r\n                            <label htmlFor=\"date\"> Date Of Reservation</label>\r\n                            <input className = {classNames(\"form-control\",{\"is-invalid\" : errors.date})} type=\"date\" {...register(\"date\",{required : \"Field  Is Required\"})}/>\r\n                            {errors.date && <p className=\"invalid-feedback\">{errors.date.message}</p>}\r\n                        </div>\r\n                        <div className = \"form-group my-2\">\r\n                            <label htmlFor=\"time\"> Time Of Reservation</label>\r\n                            <input className = {classNames(\"form-control\",{\"is-invalid\" : errors.time})} type=\"time\" {...register(\"time\",{required : \"Field  Is Required\"})}/>\r\n                            {errors.time && <p className=\"invalid-feedback\">{errors.time.message}</p>}\r\n                        </div>\r\n                        <div className = \"form-group my-2\">\r\n                            <label htmlFor=\"person\"> Total Person's</label>\r\n                            <input className = {classNames(\"form-control\",{\"is-invalid\" : errors.person})} placeholder=\"Person Joining\" type=\"number\" {...register(\"person\",{required : \"Field  Is Required\", validate : value => (value < 40 || \"Cant Accept More than 40 Person at a Time\")})}/>\r\n                            {errors.person && <p className=\"invalid-feedback\">{errors.person.message}</p>}\r\n                        </div>\r\n                        {/* Validation For Import File With Complete Set Up */}\r\n                        {/* <div className = \"form-group my-2\">\r\n                            <label htmlFor=\"attachment\"> Attachment</label>\r\n                            <input className = {classNames(\"form-control\",{\"is-invalid\" : errors.attachment})} type=\"file\" {...register(\"attachment\",{required : \"Field  Is Required\", validate : (value)=>{return value && value[0].size <= 200000 || \"This File is too large accept less than 2 MB\"} , validate : (value)=>{return value && value[0].type === \"image/png\" || \"We Support Only PNG format\"}})}/>\r\n                            {errors.attachment && <p className=\"invalid-feedback\">{errors.attachment.message}</p>}\r\n                        </div>                      */}\r\n                        <Button className =\"btn-sm\" type = \"submit\">Save</Button>\r\n                    </form>\r\n                </div>\r\n                </FormWrapper>\r\n                <div className=\"col-lg-6 col-sm-12  \">\r\n                <TableWrapper \r\n                tableData = {tableReservationArray}\r\n                headingColumns = {[\"Id\",\"Customer Name\",\"Date\",\"Time\",\"Visitors\",\"Table\",\"Edit\",\"Delete\"]}\r\n                breakOn = \"small\"\r\n                addDeleteButton = {true}\r\n                addEditButton = {true}\r\n                editHandler = {(data)=>dispatch(action.editHandlerInit(data))}\r\n                deleteHandler = {(data)=>dispatch(action.deleteHandlerInit(data))}\r\n                 />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TableReservation\r\n","export const SUBMIT_ORDER_REPORT_INIT = \"SUBMIT_ORDER_REPORT_INIT\";\r\n\r\nexport const SUBMIT_ORDER_REPORT_SUCCESS = \"SUBMIT_ORDER_REPORT_SUCCESS\";\r\n\r\nexport const submitHandlerInit = (orderReportObject) =>{\r\n    return{\r\n        type : SUBMIT_ORDER_REPORT_INIT,\r\n        orderReportObject : orderReportObject\r\n    }\r\n}\r\n\r\nexport const submitHandlerSuccess = (orderReportArray,totalAmount) =>{\r\n    return{\r\n        type : SUBMIT_ORDER_REPORT_SUCCESS,\r\n        orderReportArray : orderReportArray,\r\n        totalAmount : totalAmount\r\n    }\r\n}\r\nconst initialState = {\r\n    orderReportArray : [],\r\n    totalAmount : 0\r\n}\r\n\r\nconst OrderReport = (state =initialState,action) =>{\r\n    switch(action.type){\r\n        case SUBMIT_ORDER_REPORT_SUCCESS : \r\n        return{\r\n            ...state,\r\n            orderReportArray : action.orderReportArray,\r\n            totalAmount : action.totalAmount\r\n        }\r\n        default : return state\r\n    }\r\n}\r\nexport default OrderReport;","import React,{useEffect} from 'react';\r\nimport Button from \"../../UI/Button/Button\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {useDispatch,useSelector} from \"react-redux\";\r\nimport FormWrapper from \"../../component/FormWrapper/FormWrapper\";\r\nimport TableWrapper from \"../../component/TableWrapper/TableWrapper\";\r\nimport classNames from \"classnames\";\r\nimport * as action from \"../../store/reducer/OrderReport/OrderReportReducer\";\r\n\r\nconst OrderDetail = () => {\r\n    const{register,handleSubmit,formState:{errors,isSubmitted,isValid},reset} = useForm({mode : \"onChange\"});\r\n\r\n    const dispatch = useDispatch();\r\n  \r\n    const orderReportArray  = useSelector(state => state.OrderReport.orderReportArray);\r\n\r\n    const totalAmount = useSelector(state => state.OrderReport.totalAmount);\r\n          \r\n    useEffect(() => {\r\n        if(isSubmitted && isValid){     \r\n           reset();  \r\n        }        \r\n    },[isSubmitted,isValid]);\r\n\r\n    const onSubmit = (data) => {\r\n        dispatch(action.submitHandlerInit(data));     \r\n    }\r\n\r\n    return (\r\n        <div className = \"container-fluid text-center\">\r\n            <div className=\"row \">\r\n            <h1 className=\"display-4 heading\">Order Report</h1>\r\n            </div>\r\n            <div className=\"row justify-content-around\">\r\n                <FormWrapper>\r\n                <div className = \"w-75 mx-auto\">\r\n                <form onSubmit = {handleSubmit(onSubmit)}>\r\n                        <div className = \"form-group my-2\">\r\n                            <label htmlFor=\"dateFrom\"> Date From</label>\r\n                            <input className = {classNames(\"form-control\",{\"is-invalid\" : errors.dateFrom})} type=\"date\" {...register(\"dateFrom\",{required : \"Field  Is Required\"})}/>\r\n                            {errors.dateFrom && <p className=\"invalid-feedback\">{errors.dateFrom.message}</p>}\r\n                        </div>\r\n                        <div className = \"form-group my-2\">\r\n                            <label htmlFor=\"dateTo\"> Date To</label>\r\n                            <input className = {classNames(\"form-control\",{\"is-invalid\" : errors.dateTo})} type=\"date\" {...register(\"dateTo\",{required : \"Field  Is Required\"})}/>\r\n                            {errors.dateTo && <p className=\"invalid-feedback\">{errors.dateTo.message}</p>}\r\n                        </div>\r\n                        <Button className =\"btn-sm\" type = \"submit\">Submit</Button>\r\n                    </form>\r\n                </div>\r\n                </FormWrapper>                \r\n                {orderReportArray.length !== 0 && \r\n                <div className=\"col-lg-6 col-sm-12  \">\r\n                <TableWrapper \r\n                tableData = {orderReportArray}\r\n                headingColumns = {[\"Order Id\",\"Order Date\",\"Customer Name\",\"Total Price\"]}\r\n                breakOn = \"large\"\r\n                addDeleteButton = {false}\r\n                addEditButton = {false}\r\n                 />\r\n                  <div className =\"jumbotron formWrapper\">\r\n                    <p> Total Expense: {totalAmount}</p>\r\n                  </div>\r\n                </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderDetail\r\n","export const SUBMIT_PROFIT_LOSS_INIT = \"SUBMIT_PROFIT_LOSS_INIT\";\r\n\r\nexport const SUBMIT_PROFIT_LOSS_SUCCESS = \"SUBMIT_PROFIT_LOSS_SUCCESS\";\r\n\r\nexport const submitHandlerInit = (profitLossObject) =>{\r\n    return{\r\n        type : SUBMIT_PROFIT_LOSS_INIT,\r\n        profitLossObject : profitLossObject\r\n    }\r\n}\r\n\r\nexport const submitHandlerSuccess = (profitLossArray,totalAmount) =>{\r\n    return{\r\n        type : SUBMIT_PROFIT_LOSS_SUCCESS,\r\n        profitLossArray : profitLossArray,\r\n        totalAmount : totalAmount\r\n    }\r\n}\r\nconst initialState = {\r\n    profitLossArray : [],\r\n    totalAmount : 0\r\n}\r\nconst ProfitLoss = (state = initialState,action) =>{\r\n    switch(action.type){\r\n        case SUBMIT_PROFIT_LOSS_SUCCESS :\r\n            return{\r\n                ...state,\r\n                profitLossArray : action.profitLossArray,\r\n                totalAmount : action.totalAmount\r\n            }\r\n        default : return state     \r\n    }\r\n}\r\nexport default ProfitLoss;","import React,{useEffect} from 'react';\r\nimport Button from \"../../UI/Button/Button\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {useDispatch,useSelector} from \"react-redux\";\r\nimport * as action from \"../../store/reducer/ProfitLoss/ProfitLossReducer\";\r\nimport TableWrapper from \"../../component/TableWrapper/TableWrapper\";\r\nimport FormWrapper from \"../../component/FormWrapper/FormWrapper\";\r\nimport classNames from \"classnames\";\r\n\r\nconst ProfitLossMaster = () => {\r\n    const{register,handleSubmit,formState:{errors,isSubmitted,isValid},reset} = useForm({mode : \"onChange\"});\r\n\r\n    const dispatch = useDispatch();\r\n  \r\n    const profitLossArray  = useSelector(state => state.ProfitLoss.profitLossArray);\r\n\r\n    const totalAmount = useSelector(state => state.ProfitLoss.totalAmount);\r\n          \r\n    useEffect(() => {\r\n        if(isSubmitted && isValid){     \r\n           reset();  \r\n        }        \r\n    },[isSubmitted,isValid]);\r\n\r\n    const onSubmit = (data) => {\r\n        dispatch(action.submitHandlerInit(data));     \r\n    }\r\n\r\n    return (\r\n        <div className = \"container-fluid text-center\">\r\n            <div className=\"row \">\r\n            <h1 className=\"display-4 heading\">Profit Loss Report</h1>\r\n            </div>\r\n            <div className=\"row justify-content-around\">\r\n                <FormWrapper>\r\n                <div className = \"w-75 mx-auto\">\r\n                <form onSubmit = {handleSubmit(onSubmit)}>\r\n                        <div className = \"form-group my-2\">\r\n                            <label htmlFor=\"dateFrom\"> Date From</label>\r\n                            <input className = {classNames(\"form-control\",{\"is-invalid\" : errors.dateFrom})} type=\"date\" {...register(\"dateFrom\",{required : \"Field  Is Required\"})}/>\r\n                            {errors.dateFrom && <p className=\"invalid-feedback\">{errors.dateFrom.message}</p>}\r\n                        </div>\r\n                        <div className = \"form-group my-2\">\r\n                            <label htmlFor=\"dateTo\"> Date To</label>\r\n                            <input className = {classNames(\"form-control\",{\"is-invalid\" : errors.dateTo})} type=\"date\" {...register(\"dateTo\",{required : \"Field  Is Required\"})}/>\r\n                            {errors.dateTo && <p className=\"invalid-feedback\">{errors.dateTo.message}</p>}\r\n                        </div>\r\n                        <Button className =\"btn-sm\" type = \"submit\">Submit</Button>\r\n                    </form>\r\n                </div>\r\n                </FormWrapper>                \r\n                {profitLossArray.length !== 0 && \r\n                <div className=\"col-lg-6 col-sm-12  \">\r\n                <TableWrapper \r\n                tableData = {profitLossArray}\r\n                headingColumns = {[\"Id\",\"Month\",\"Expense Detail\",\"Amount\"]}\r\n                breakOn = \"large\"\r\n                addDeleteButton = {false}\r\n                addEditButton = {false}\r\n                 />\r\n                  <div className =\"jumbotron formWrapper\">\r\n                    <p> Total Expense: {totalAmount}</p>\r\n                  </div>\r\n                </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfitLossMaster\r\n","export const SUBMIT_TOP_SELL_DISH_INIT = \"SUBMIT_TOP_SELL_DISH_INIT\";\r\n\r\nexport const SUBMIT_TOP_SELL_DISH_SUCCESS = \"SUBMIT_TOP_SELL_DISH_SUCCESS\";\r\n\r\nexport const SUBMIT_TOP_SELL_INGREDIENT_INIT = \"SUBMIT_TOP_SELL_INGREDIENT_INIT\";\r\n\r\nexport const SUBMIT_TOP_SELL_INGREDIENT_SUCCESS = \"SUBMIT_TOP_SELL_INGREDIENT_SUCCESS\";\r\n\r\nexport const submitTopDishHandlerInit = (topSellObject) =>{\r\n   return{\r\n       type : SUBMIT_TOP_SELL_DISH_INIT,\r\n       topSellObject : topSellObject\r\n   }\r\n}\r\n\r\nexport const submitTopIngredienthHandlerInit = (topSellObject) =>{\r\n    return{\r\n        type : SUBMIT_TOP_SELL_INGREDIENT_INIT,\r\n        topSellObject : topSellObject\r\n    }\r\n }\r\n\r\n export const submitTopDishHandlerSuccess = (topSellDish) =>{\r\n    return{\r\n        type : SUBMIT_TOP_SELL_DISH_SUCCESS,\r\n        topSellDish : topSellDish,\r\n        topSellIngredient : []\r\n    }\r\n }\r\n \r\n export const submitTopIngredienthHandlerSuccess = (topSellIngredient) =>{\r\n     return{\r\n         type : SUBMIT_TOP_SELL_INGREDIENT_SUCCESS,\r\n         topSellIngredient : topSellIngredient,\r\n         topSellDish : []\r\n     }\r\n  }\r\n\r\n  const initialState = {\r\n      topSellDish : [],\r\n      topSellIngredient : []\r\n  }\r\n\r\n  const TopSell = (state = initialState , action) =>{\r\n    switch(action.type){\r\n        case SUBMIT_TOP_SELL_DISH_SUCCESS :\r\n            return{\r\n                ...state,\r\n                topSellDish : action.topSellDish,\r\n                topSellIngredient : action.topSellIngredient\r\n            } \r\n        case SUBMIT_TOP_SELL_INGREDIENT_SUCCESS : \r\n            return{\r\n                ...state,\r\n                topSellIngredient : action.topSellIngredient,\r\n                topSellDish : action.topSellDish \r\n            }\r\n        default : return state    \r\n    }\r\n  }\r\n  export default TopSell;","import React,{useEffect} from 'react';\r\nimport {useForm} from \"react-hook-form\";\r\nimport classNames from \"classnames\";\r\nimport {useDispatch,useSelector} from \"react-redux\";\r\nimport Button from \"../../UI/Button/Button\";\r\nimport * as action from \"../../store/reducer/TopSellDish/TopSellDishReducer\";\r\nimport TableWrapper from \"../../component/TableWrapper/TableWrapper\";\r\nimport FormWrapper from \"../../component/FormWrapper/FormWrapper\";\r\n\r\n\r\nconst TopSellingDishes = () => {\r\n    const{register,handleSubmit,formState:{errors,isSubmitted,isValid},reset} = useForm({mode : \"onChange\"});\r\n\r\n    const dispatch = useDispatch();\r\n  \r\n    const topSellDishArray  = useSelector(state => state.TopSell.topSellDish);\r\n\r\n    const topSellIngredientArray  = useSelector(state => state.TopSell.topSellIngredient);\r\n          \r\n    useEffect(() => {\r\n        if(isSubmitted){     \r\n           reset();  \r\n        }        \r\n    },[isSubmitted]);\r\n \r\n    const onSubmitTop = handleSubmit(data =>{\r\n        dispatch(action.submitTopDishHandlerInit(data)); \r\n    })\r\n\r\n    const onSubmitIngredient = handleSubmit(data =>{\r\n        dispatch(action.submitTopIngredienthHandlerInit(data)); \r\n    })\r\n\r\n    return (\r\n        <div className = \"container-fluid text-center\">\r\n            <div className=\"row \">\r\n            <h1 className=\"display-4 heading\">Top Order Chart</h1>\r\n            </div>\r\n            <div className=\"row justify-content-around\">\r\n                <FormWrapper>\r\n                <div className = \"w-75 mx-auto\">\r\n                <form>\r\n                        <div className = \"form-group my-2\">\r\n                            <label htmlFor=\"dateFrom\"> Date From</label>\r\n                            <input className = {classNames(\"form-control\",{\"is-invalid\" : errors.dateFrom})} type=\"date\" {...register(\"dateFrom\",{required : \"Field  Is Required\"})}/>\r\n                            {errors.dateFrom && <p className=\"invalid-feedback\">{errors.dateFrom.message}</p>}\r\n                        </div>\r\n                        <div className = \"form-group my-2\">\r\n                            <label htmlFor=\"dateTo\"> Date To</label>\r\n                            <input className = {classNames(\"form-control\",{\"is-invalid\" : errors.dateTo})} type=\"date\" {...register(\"dateTo\",{required : \"Field  Is Required\"})}/>\r\n                            {errors.dateTo && <p className=\"invalid-feedback\">{errors.dateTo.message}</p>}\r\n                        </div>\r\n                        <div className=\"form-group my-2\">\r\n                            <label htmlFor=\"topServed\">Select Top</label>\r\n                            <select className={classNames(\"form-control\", {\"is-invalid\": errors.topServed,})} defaultValue={5} {...register(\"topServed\", { required: \"Field Required\" })}>\r\n                                <option value={1}> 1</option>\r\n                                <option value={2}> 2</option>\r\n                                <option value={3}> 3</option>\r\n                                <option value={4}> 4</option>\r\n                                <option value={5}> 5</option>\r\n                                <option value={6}> 6</option>\r\n                                <option value={7}> 7</option>\r\n                                <option value={10}> 10</option>\r\n                                <option value={15}> 15</option>\r\n                            </select>\r\n                            {errors.topServed && (<p className=\"invalid-feedback\">{errors.topServed.message}</p>)}\r\n                        </div>    \r\n                        <div className = \"row\">\r\n                            <div className = \"col-6\">\r\n                            <Button className =\"btn-sm\" type = \"submit\" onClick = {onSubmitTop} >Top 5 Dish</Button>\r\n                            </div>\r\n                            <div className = \"col-6\">\r\n                            <Button className =\"btn-sm\" type = \"submit\" onClick = {onSubmitIngredient}>Top 5 Ingredient</Button>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </form>\r\n                </div>\r\n                </FormWrapper>                \r\n                {topSellDishArray.length !== 0 && \r\n                <div className=\"col-lg-6 col-sm-12  \">\r\n                <TableWrapper \r\n                tableData = {topSellDishArray}\r\n                headingColumns = {[\"order Food\",\"Qty Ordered\"]}\r\n                breakOn = \"large\"\r\n                addDeleteButton = {false}\r\n                addEditButton = {false}\r\n                 />\r\n                 \r\n                </div>\r\n                }\r\n                {topSellIngredientArray.length !== 0 && \r\n                <div className=\"col-lg-6 col-sm-12  \">\r\n                <TableWrapper \r\n                tableData = {topSellIngredientArray}\r\n                headingColumns = {[\"order Food\",\"Qty Ordered\",\"Unit\"]}\r\n                breakOn = \"large\"\r\n                addDeleteButton = {false}\r\n                addEditButton = {false}\r\n                 />\r\n                 \r\n                </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TopSellingDishes\r\n","import React,{useState} from 'react';\r\nimport FormWrapper from \"../../component/FormWrapper/FormWrapper\";\r\nimport {GoogleMap,withScriptjs,withGoogleMap,Marker} from \"react-google-maps\";\r\n\r\n\r\n\r\n\r\n\r\nconst Direction = () => {\r\n    const[selectedCity,setSelectedCity] = useState([20.593683,78.962883]);\r\n    \r\n    const Map = () =>{\r\n   \r\n        return (\r\n        <GoogleMap \r\n        defaultZoom = {5} \r\n        defaultCenter = {{lat : 20.593683,lng : 78.962883}}     >\r\n            <Marker \r\n            position = {{lat : +selectedCity[0],lng : +selectedCity[1]}}\r\n             />\r\n        </GoogleMap>    \r\n        );\r\n    }\r\n\r\n    const WrappedMap = withScriptjs(withGoogleMap(Map));\r\n    \r\n    return (\r\n        <div className = \"container-fluid text-center\">\r\n            <div className=\"row \">\r\n                <h1 className=\"display-4 heading\">Locate Store</h1>\r\n            </div>\r\n            <div className=\"row justify-content-around\">\r\n                <FormWrapper>\r\n                    <select className = \"form-control\" defaultValue = \"\" onChange = {(e)=>setSelectedCity([e.target.value])}>\r\n                        <option disabled value=\"\">Find Resturant</option>\r\n                        <option value ={[28.6517178, 77.2219388]}>Delhi</option>\r\n                        <option value ={[ 22.718670, 75.855713]} >Indore</option>\r\n                        <option value ={[ 19.0759899, 72.8773928]} >Mumbai</option>\r\n                        <option value ={[ 13.0836939, 80.270186]} >Chennai</option>\r\n                    </select>\r\n                </FormWrapper>\r\n                <div className=\"col-lg-6 col-sm-12 \" >\r\n                    {/* MAP This Way */}\r\n                    <div style = {{width : \"100%\",height : \"100%\"}}>\r\n                    <WrappedMap\r\n                        googleMapURL={'https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=AIzaSyBzuhUdIs4qel4nQC903A0o5ME02zEm3kk'}\r\n                        loadingElement = { <div style={{ height: `100%` }} />}\r\n                        containerElement= {<div style={{ height: `400px` }} />} \r\n                        mapElement= {<div style={{ height: `100%` }}\r\n                         />}\r\n                    />\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Direction\r\n","import React from 'react'\r\nimport {Link} from \"react-router-dom\";\r\nimport \"./ErrorPage.css\";\r\nconst ErrorPage = () => {\r\n    return (\r\n        <div className = \"row text-center py-5\">\r\n            <h1 className = \"display-4\">404 Error Page</h1>\r\n            <p className=\"lead\">Sorry page Not Found..!!</p>\r\n            <Link className =\"ErrorLink\" to = \"/\"> Go Back </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ErrorPage\r\n","import React from 'react';\r\nimport BreadCrumbs from \"../../component/BreadCrumbs/BreadCrumbs\";\r\nimport {  Route, Switch } from \"react-router-dom\";\r\nimport Main from \"../../component/Main/Main\";\r\nimport Header from \"../../component/Header/Header\";\r\nimport Footer from \"../../component/Footer/Footer\";\r\nimport FoodItem from \"../FoodItem/FoodItem\";\r\nimport CustomerOrder from \"../CustomerOrder/CustomerOrder\";\r\nimport IngredientMaster from \"../AdminBackendTabs/IngredientMaster\";\r\nimport Inventory from \"../AdminBackendTabs/Inventory\";\r\nimport InvestmentBudget from \"../AdminBackendTabs/InvestmentBudget\";\r\nimport ItemRecipe from \"../AdminBackendTabs/ItemRecipe\";\r\nimport MonthlyExpense from \"../AdminBackendTabs/MonthlyExpense\";\r\nimport Quantity from \"../AdminBackendTabs/Quantity\";\r\nimport Unit from \"../AdminBackendTabs/Unit\";\r\nimport RecipeGenerator from \"../AdminBackendTabs/RecipeGenerator\";\r\nimport VendorIngredientMapping from \"../AdminBackendTabs/VendorIngredientMapping\";\r\nimport VendorMaster from \"../AdminBackendTabs/VendorMaster\";\r\nimport TableReservation from \"../AdminBackendTabs/TableReservation\";\r\n\r\nimport OrderDetail from \"../Reports/OrderDetail\";\r\nimport ProfitLossMaster from \"../Reports/ProfitLossMaster\";\r\nimport TopSellingDishes from \"../Reports/TopSellingDishes\";\r\n\r\nimport Direction from \"../Direction/Direction\";\r\n\r\nimport ErrorPage from \"../ErrorPage/ErrorPage\";\r\n\r\nconst ResturantPage = () => {\r\n    let routes = (\r\n        <>\r\n            <BreadCrumbs/>\r\n            <Switch>\r\n                <Route path = \"/reports/topsellingdishes\" component = {TopSellingDishes}/>\r\n                <Route path = \"/reports/profitlossmaster\" component = {ProfitLossMaster}/>\r\n                <Route path = \"/reports/orderdetail\" component = {OrderDetail}/>\r\n                <Route path = \"/admin/tablereservation\" component = {TableReservation}/>\r\n                <Route path = \"/admin/vendormaster\" component = {VendorMaster}/>\r\n                <Route path = \"/admin/vendoringredientmapping\" component = {VendorIngredientMapping}/>\r\n                <Route path = \"/admin/recipegenerator\" component = {RecipeGenerator}/>\r\n                <Route path = \"/admin/quantity\" component = {Quantity}/>\r\n                <Route path = \"/admin/unit\" component = {Unit}/>\r\n                <Route path = \"/admin/monthlyexpense\" component = {MonthlyExpense}/>\r\n                <Route path = \"/admin/itemrecipe\" component = {ItemRecipe}/>\r\n                <Route path = \"/admin/investmentbudget\" component = {InvestmentBudget}/>\r\n                <Route path = \"/admin/inventory\" component = {Inventory}/>\r\n                <Route path = \"/admin/ingredientmaster\" component = {IngredientMaster}/>\r\n                <Route path = \"/customerorder\" component = {CustomerOrder}/>\r\n                <Route path = \"/direction\" component = {Direction}/>\r\n                <Route exact path = \"/\" component = {FoodItem}/>\r\n                <Route component = {ErrorPage}/>\r\n            </Switch>\r\n        </>\r\n\r\n    )\r\n    return (\r\n        <div className = \"text-light\">\r\n            <Header/>\r\n            <Main>\r\n                {routes}\r\n            </Main>\r\n            <Footer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ResturantPage\r\n","import './App.css';\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport ResturantPage from \"./container/ResturantPage/ResturantPage\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ResturantPage/>\n    </div>\n  );\n}\nexport default App;","import {combineReducers} from \"redux\";\r\nimport FoodItem from \"../reducer/FoodItem/FoodItemReducer\";\r\nimport Quantity from \"../reducer/Quantity/QuantityReducer\";\r\nimport Unit from \"../reducer/Unit/UnitReducer\";\r\nimport VendorMaster from \"../reducer/VendorMaster/VendorMasterReducer\";\r\nimport IngredientMaster from \"./IngredientMaster/IngredientMasterReducer\";\r\nimport ItemRecipe from \"./ItemRecipe/ItemRecipeReducer\";\r\nimport RecipeGenerator from \"./RecipeGeneratorReducer/RecipeGeneratorReducer\";\r\nimport VendorMapping from \"./VendorIngredientMappingReducer/VendorIngredientMappingReducer\";\r\nimport Inventory from \"./Inventory/InventoryReducer\";\r\nimport CustomerOrder from \"./CustomerOrder/CustomerOrderReducer\";\r\nimport InvestmentBudget from \"./InvestmentBudget/InvestmentBudgetReducer\";\r\nimport MonthlyExpense from \"./MonthlyExpense/MonthlyExpenseReducer\";\r\nimport OrderReport from \"./OrderReport/OrderReportReducer\";\r\nimport TopSell from \"./TopSellDish/TopSellDishReducer\";\r\nimport ProfitLoss from \"./ProfitLoss/ProfitLossReducer\";\r\nimport TableReservation from \"./TableReservation/TableReservationReducer\";\r\n\r\nexport default combineReducers({\r\nFoodItem,Quantity,Unit,VendorMaster,IngredientMaster,\r\nItemRecipe,RecipeGenerator,VendorMapping,Inventory,CustomerOrder,\r\nInvestmentBudget,MonthlyExpense,OrderReport,TopSell,ProfitLoss,TableReservation\r\n})","import { put } from \"redux-saga/effects\";\r\nimport * as actionFood from \"../../reducer/FoodItem/FoodItemReducer\";\r\n\r\nexport function* initHandlerSaga(){\r\n    let localValue = JSON.parse(localStorage.getItem(\"foodItemArray\"));\r\n    if(localValue === null){\r\n        localValue = [];\r\n    }    \r\n    const updateValue = [...localValue];\r\n    yield localStorage.setItem(\"foodItemArray\", JSON.stringify(updateValue));\r\n    yield put(actionFood.initilizerHandlerSuccess(updateValue));\r\n}\r\nexport function* submitHandlerSaga(action){\r\n    const localValue = JSON.parse(localStorage.getItem(\"foodItemArray\"));\r\n    let updateValue = [...localValue]\r\n    let foodItemObject = {};\r\n    if (action.foodItemObject.id !== null && action.editMode === true){\r\n        const editObjIndex = updateValue.findIndex(item => item.id === action.foodItemObject.id)\r\n        updateValue[editObjIndex] = action.foodItemObject;\r\n    }\r\n    else {\r\n        let studentLast = null;\r\n        if (updateValue.length !== 0) {\r\n            const foodLastItem = updateValue[updateValue.length - 1];\r\n            studentLast = +foodLastItem.id;\r\n        }\r\n        else {\r\n            studentLast = 0;\r\n        }\r\n        foodItemObject = action.foodItemObject;\r\n        foodItemObject.id = studentLast + 1;\r\n        updateValue.push(foodItemObject);\r\n        foodItemObject = {};\r\n    }\r\n    let editMode = false;\r\n  \r\n    yield localStorage.setItem(\"foodItemArray\", JSON.stringify(updateValue));\r\n    yield put(actionFood.submitHandlerSuccess(updateValue,editMode,foodItemObject));\r\n}\r\n export function* editHandlerSaga(action){\r\n    const localValue = JSON.parse(localStorage.getItem(\"foodItemArray\"));\r\n    yield put(actionFood.editHandlerSuccess(localValue,action.foodItemObject,action.editMode));\r\n }  \r\nexport function* deleteHandlerSaga(action){\r\n    const localValue = JSON.parse(localStorage.getItem(\"foodItemArray\"));\r\n    let updateValue = [...localValue];\r\n    const deleteObjIndex = updateValue.findIndex(item => item.id === action.foodItemObject.id)\r\n    updateValue.splice(deleteObjIndex, 1);\r\n    yield localStorage.setItem(\"foodItemArray\", JSON.stringify(updateValue));\r\n    yield put(actionFood.deleteHandlerSuccess(updateValue));\r\n}","import {put} from \"redux-saga/effects\";\r\nimport * as actionQuantity from \"../../reducer/Quantity/QuantityReducer\";\r\n\r\nexport function* initQtyHandlerSaga(){\r\n    let qtyLocalValue = JSON.parse(localStorage.getItem(\"quantityArray\"));\r\n    if(qtyLocalValue === null){\r\n        qtyLocalValue = [];\r\n    } \r\n    yield localStorage.setItem(\"quantityArray\", JSON.stringify(qtyLocalValue));\r\n    yield put(actionQuantity.initilizerHandlerSuccess(qtyLocalValue));\r\n}\r\n\r\nexport function* submitQtyHandlerSaga(action){\r\n    const localValue = JSON.parse(localStorage.getItem(\"quantityArray\"));\r\n    let updateValue = [...localValue]\r\n    let quantityObject = {};\r\n    if (action.quantityObject.id !== null && action.editMode === true){\r\n        const editObjIndex = updateValue.findIndex(item => item.id === action.quantityObject.id)\r\n        updateValue[editObjIndex] = action.quantityObject;\r\n    }\r\n    else {\r\n        let quantityLast = null;\r\n        if (updateValue.length !== 0) {\r\n            const quantityLastItem = updateValue[updateValue.length - 1];\r\n            quantityLast = +quantityLastItem.id;\r\n        }\r\n        else {\r\n            quantityLast = 0;\r\n        }\r\n        quantityObject = action.quantityObject;\r\n        quantityObject.id = quantityLast + 1;\r\n        updateValue.push(quantityObject);\r\n        quantityObject = {};\r\n    }\r\n    let editMode = false;\r\n  \r\n    yield localStorage.setItem(\"quantityArray\", JSON.stringify(updateValue));\r\n    yield put(actionQuantity.submitHandlerSuccess(updateValue,editMode,quantityObject));\r\n}\r\n export function* editQtyHandlerSaga(action){\r\n    const localValue = JSON.parse(localStorage.getItem(\"quantityArray\"));\r\n    yield put(actionQuantity.editHandlerSuccess(localValue,action.quantityObject,action.editMode));\r\n }  \r\nexport function* deleteQtyHandlerSaga(action){\r\n    const localValue = JSON.parse(localStorage.getItem(\"quantityArray\"));\r\n    let updateValue = [...localValue];\r\n    const deleteObjIndex = updateValue.findIndex(item => item.id === action.quantityObject.id)\r\n    updateValue.splice(deleteObjIndex, 1);\r\n    yield localStorage.setItem(\"quantityArray\", JSON.stringify(updateValue));\r\n    yield put(actionQuantity.deleteHandlerSuccess(updateValue));\r\n}","import {put} from \"redux-saga/effects\";\r\nimport * as actionUnit from \"../../reducer/Unit/UnitReducer\";\r\n\r\nexport function* initUnitHandlerSaga(){\r\n    let unitLocalValue = JSON.parse(localStorage.getItem(\"unitArray\"));\r\n    if(unitLocalValue === null){\r\n        unitLocalValue = [];\r\n    }    \r\n    yield localStorage.setItem(\"unitArray\", JSON.stringify(unitLocalValue));\r\n    yield put(actionUnit.initilizerHandlerSuccess(unitLocalValue));\r\n}\r\nexport function* submitUnitHandlerSaga(action){\r\n    const localValue = JSON.parse(localStorage.getItem(\"unitArray\"));\r\n    let updateValue = [...localValue]\r\n    let unitObject = {};\r\n    if (action.unitObject.id !== null && action.editMode === true){\r\n        const editObjIndex = updateValue.findIndex(item => item.id === action.unitObject.id)\r\n        updateValue[editObjIndex] = action.unitObject;\r\n    }\r\n    else {\r\n        let unitLast = null;\r\n        if (updateValue.length !== 0) {\r\n            const unitLastItem = updateValue[updateValue.length - 1];\r\n            unitLast = +unitLastItem.id;\r\n        }\r\n        else {\r\n            unitLast = 0;\r\n        }\r\n        unitObject = action.unitObject;\r\n        unitObject.id = unitLast + 1;\r\n        updateValue.push(unitObject);\r\n        unitObject = {};\r\n    }\r\n    let editMode = false;\r\n  \r\n    yield localStorage.setItem(\"unitArray\", JSON.stringify(updateValue));\r\n    yield put(actionUnit.submitHandlerSuccess(updateValue,editMode,unitObject));\r\n}\r\n export function* editUnitHandlerSaga(action){\r\n    const localValue = JSON.parse(localStorage.getItem(\"unitArray\"));\r\n    yield put(actionUnit.editHandlerSuccess(localValue,action.unitObject,action.editMode));\r\n }  \r\nexport function* deleteUnitHandlerSaga(action){\r\n    const localValue = JSON.parse(localStorage.getItem(\"unitArray\"));\r\n    let updateValue = [...localValue];\r\n    const deleteObjIndex = updateValue.findIndex(item => item.id === action.unitObject.id)\r\n    updateValue.splice(deleteObjIndex, 1);\r\n    yield localStorage.setItem(\"unitArray\", JSON.stringify(updateValue));\r\n    yield put(actionUnit.deleteHandlerSuccess(updateValue));\r\n}","import {put} from \"redux-saga/effects\";\r\nimport * as vendorAction from \"../../reducer/VendorMaster/VendorMasterReducer\";\r\n\r\nexport function* initilizeVendorSaga(){\r\n    let localValue = JSON.parse(localStorage.getItem(\"vendorArray\"));\r\n    if(localValue === null){\r\n        localValue = []\r\n    }\r\n    yield localStorage.setItem(\"vendorArray\",JSON.stringify(localValue));\r\n    yield put(vendorAction.initilizerHandlerSuccess(localValue));\r\n}\r\n\r\nexport function* submitVendorHandlerSaga(action){\r\n    const localValue = JSON.parse(localStorage.getItem(\"vendorArray\"));\r\n    let updateValue = [...localValue]\r\n    let vendorObject = {};\r\n    if (action.vendorObject.id !== null && action.editMode === true){\r\n        const editObjIndex = updateValue.findIndex(item => item.id === action.vendorObject.id)\r\n        updateValue[editObjIndex] = action.vendorObject;\r\n    }\r\n    else {\r\n        let vendorLast = null;\r\n        if (updateValue.length !== 0) {\r\n            const vendorLastItem = updateValue[updateValue.length - 1];\r\n            vendorLast = +vendorLastItem.id;\r\n        }\r\n        else {\r\n            vendorLast = 0;\r\n        }\r\n        vendorObject = action.vendorObject;\r\n        vendorObject.id = vendorLast + 1;\r\n        updateValue.push(vendorObject);\r\n        vendorObject = {};\r\n    }\r\n    let editMode = false;\r\n  \r\n    yield localStorage.setItem(\"vendorArray\", JSON.stringify(updateValue));\r\n    yield put(vendorAction.submitHandlerSuccess(updateValue,editMode,vendorObject));\r\n}\r\n export function* editVendorHandlerSaga(action){\r\n    const localValue = JSON.parse(localStorage.getItem(\"vendorArray\"));\r\n    yield put(vendorAction.editHandlerSuccess(localValue,action.vendorObject,action.editMode));\r\n }  \r\nexport function* deleteVendorHandlerSaga(action){\r\n    const localValue = JSON.parse(localStorage.getItem(\"vendorArray\"));\r\n    let updateValue = [...localValue];\r\n    const deleteObjIndex = updateValue.findIndex(item => item.id === action.vendorObject.id)\r\n    updateValue.splice(deleteObjIndex, 1);\r\n    yield localStorage.setItem(\"vendorArray\", JSON.stringify(updateValue));\r\n    yield put(vendorAction.deleteHandlerSuccess(updateValue));\r\n}\r\n\r\n","import {put} from \"redux-saga/effects\";\r\nimport * as ingredientAction from \"../../reducer/IngredientMaster/IngredientMasterReducer\";\r\n\r\nexport function* initlizeIngredientSaga(){\r\n    let ingredientValue = JSON.parse(localStorage.getItem(\"ingredientArray\"));\r\n    let quantityValue = JSON.parse(localStorage.getItem(\"quantityArray\"));\r\n    let unitValue = JSON.parse(localStorage.getItem(\"unitArray\"));\r\n    let toDisplayIngredientValue ; \r\n    if(quantityValue === null){\r\n        quantityValue = []\r\n    }\r\n    if(unitValue === null){\r\n        unitValue = []\r\n    }\r\n    if(ingredientValue === null){\r\n        ingredientValue = [];\r\n        toDisplayIngredientValue = []\r\n        yield localStorage.setItem(\"ingredientArray\",JSON.stringify(ingredientValue));\r\n    }\r\n    else{\r\n        let ingredientValue = JSON.parse(localStorage.getItem(\"ingredientArray\"));\r\n        let ingredientValueArray = [...ingredientValue]\r\n        toDisplayIngredientValue = conversionForIngredientIdToValue(ingredientValueArray);\r\n    }\r\n    \r\n    yield localStorage.setItem(\"quantityArray\",JSON.stringify(quantityValue));\r\n    yield localStorage.setItem(\"unitArray\",JSON.stringify(unitValue));\r\n    yield put(ingredientAction.initilizerHandlerSuccess(toDisplayIngredientValue,unitValue,quantityValue));\r\n}\r\n\r\nconst conversionForIngredientIdToValue = (array) =>{\r\n    let quantityValue = JSON.parse(localStorage.getItem(\"quantityArray\"));\r\n    let unitValue = JSON.parse(localStorage.getItem(\"unitArray\"));\r\n    let updatedArray = [...array]\r\n    updatedArray.forEach(element => {\r\n        const quantityObjIndex = quantityValue.findIndex(item => item.id === element.quantityId)\r\n        const unitObjIndex = unitValue.findIndex(item => item.id === element.unitId)\r\n        element.quantityId = quantityValue[quantityObjIndex].quantity;\r\n        element.unitId = unitValue[unitObjIndex].unit;\r\n    });\r\n    return updatedArray\r\n}\r\n\r\nconst conversionObjectForIngredientValueToId = (Object) =>{\r\n    let quantityValue = JSON.parse(localStorage.getItem(\"quantityArray\"));\r\n    let unitValue = JSON.parse(localStorage.getItem(\"unitArray\"));     \r\n        const quantityObjIndex = quantityValue.findIndex(item => item.quantity === Object.quantityId)\r\n        const unitObjIndex = unitValue.findIndex(item => item.unit === Object.unitId)\r\n        Object.quantityId = quantityValue[quantityObjIndex].id;\r\n        Object.unitId = unitValue[unitObjIndex].id;  \r\n    return Object\r\n}\r\n\r\nexport function* submitIngredientHandlerSaga(action){\r\n    const localValue = JSON.parse(localStorage.getItem(\"ingredientArray\"));\r\n    let updateValue = [...localValue]\r\n    let ingredientObject = {};\r\n    if (action.ingredientObject.id !== null && action.editMode === true){\r\n        const editObjIndex = updateValue.findIndex(item => item.id === action.ingredientObject.id)\r\n        updateValue[editObjIndex] = action.ingredientObject;\r\n    }\r\n    else {\r\n        let ingredientLast = null;\r\n        if (updateValue.length !== 0) {\r\n            const ingredientLastItem = updateValue[updateValue.length - 1];\r\n            ingredientLast = +ingredientLastItem.id;\r\n        }\r\n        else {\r\n            ingredientLast = 0;\r\n        }\r\n        ingredientObject = action.ingredientObject;\r\n        ingredientObject.id = ingredientLast + 1;\r\n        updateValue.push(ingredientObject);\r\n        ingredientObject = {};\r\n    }\r\n    let editMode = false; \r\n    yield localStorage.setItem(\"ingredientArray\", JSON.stringify(updateValue));\r\n    const localValueIngredient = JSON.parse(localStorage.getItem(\"ingredientArray\"));\r\n    let convertArray = conversionForIngredientIdToValue(localValueIngredient);\r\n    yield put(ingredientAction.submitHandlerSuccess(convertArray,editMode,ingredientObject));\r\n}\r\n export function* editIngredientHandlerSaga(action){\r\n    const localValue = JSON.parse(localStorage.getItem(\"ingredientArray\"));\r\n    let updateValue = [...localValue];\r\n    let convertArray = conversionForIngredientIdToValue(updateValue)\r\n    let editObject = conversionObjectForIngredientValueToId(action.ingredientObject);\r\n    yield put(ingredientAction.editHandlerSuccess(convertArray,editObject,action.editMode));\r\n }  \r\nexport function* deleteIngredientHandlerSaga(action){\r\n    const localValue = JSON.parse(localStorage.getItem(\"ingredientArray\"));\r\n    let updateValue = [...localValue];\r\n    const deleteObjIndex = updateValue.findIndex(item => item.id === action.ingredientObject.id)\r\n    updateValue.splice(deleteObjIndex, 1);\r\n    yield localStorage.setItem(\"ingredientArray\", JSON.stringify(updateValue));\r\n    const localValueIngredient = JSON.parse(localStorage.getItem(\"ingredientArray\"));\r\n    let convertArray = conversionForIngredientIdToValue(localValueIngredient);\r\n    yield put(ingredientAction.deleteHandlerSuccess(convertArray));\r\n}","import {put} from \"redux-saga/effects\";\r\nimport * as itemRecipeAction from \"../../reducer/ItemRecipe/ItemRecipeReducer\";\r\nimport {getIngredientValueToId } from \"../../../Utility/stateConversion\";\r\n\r\n\r\nexport function* initlizeItemRecipeSaga(){\r\n    let localItemRecipe = JSON.parse(localStorage.getItem(\"itemRecipeArray\"));\r\n    let quantityValue = JSON.parse(localStorage.getItem(\"quantityArray\"));\r\n    let unitValue = JSON.parse(localStorage.getItem(\"unitArray\"));\r\n    let toDisplayIngredientValue ;\r\n    if(quantityValue === null){\r\n        quantityValue = []\r\n    }\r\n    if(unitValue === null){\r\n        unitValue = []\r\n    }\r\n    if(localItemRecipe === null){\r\n        localItemRecipe = [];\r\n        toDisplayIngredientValue = []\r\n        yield localStorage.setItem(\"itemRecipeArray\",JSON.stringify(localItemRecipe));\r\n    }\r\n    else if(localItemRecipe !== null){\r\n        let localItemRecipe = JSON.parse(localStorage.getItem(\"itemRecipeArray\"));\r\n        let localItemRecipeArray = [...localItemRecipe];\r\n        toDisplayIngredientValue = conversionForitemRecipeIdToValue(localItemRecipeArray);\r\n    }\r\n    yield localStorage.setItem(\"quantityArray\",JSON.stringify(quantityValue));\r\n    yield localStorage.setItem(\"unitArray\",JSON.stringify(unitValue));\r\n    yield put(itemRecipeAction.initilizerHandlerSuccess(toDisplayIngredientValue,unitValue,quantityValue));\r\n}\r\n\r\nconst conversionForitemRecipeIdToValue=(array)=>{\r\n    let ingredientValue = JSON.parse(localStorage.getItem(\"ingredientArray\"));\r\n    let quantityValue = JSON.parse(localStorage.getItem(\"quantityArray\"));\r\n    let unitValue = JSON.parse(localStorage.getItem(\"unitArray\"));\r\n    for(let key in array){\r\n        let updatedArray = [...array[key].ingredientRecipeArray]\r\n        updatedArray.forEach(element => {\r\n            const quantityObjIndex = quantityValue.findIndex(item => item.id === element.quantityId)\r\n            const unitObjIndex = unitValue.findIndex(item => item.id === element.unitId)\r\n            const ingredientObjIndex = ingredientValue.findIndex(item => item.id === element.ingredientId)\r\n           \r\n            element.ingredientId = ingredientValue[ingredientObjIndex].ingredientName;\r\n            element.quantityId = quantityValue[quantityObjIndex].quantity;\r\n            element.unitId = unitValue[unitObjIndex].unit;\r\n        });    \r\n    }\r\n    \r\n    return array;\r\n}\r\n\r\nexport function* submitItemRecipeHandlerSaga(action){\r\n    const localValue = JSON.parse(localStorage.getItem(\"itemRecipeArray\"));\r\n    let updateValue = [...localValue]\r\n    let itemRecipeObject = {};\r\n    if (action.itemRecipeObject.id !== null && action.editMode === true){\r\n        const editObjIndex = updateValue.findIndex(item => item.id === action.itemRecipeObject.id)\r\n        updateValue[editObjIndex].id = action.itemRecipeObject.id;\r\n        updateValue[editObjIndex].foodItem = action.itemRecipeObject.foodItem;\r\n        updateValue[editObjIndex].serving = action.itemRecipeObject.serving;\r\n        updateValue[editObjIndex].recipeDescription = action.itemRecipeObject.recipeDescription;\r\n        updateValue[editObjIndex].basePrice = action.itemRecipeObject.basePrice;\r\n        updateValue[editObjIndex].ingredientRecipeArray = action.itemRecipeObject.ingredientRecipeArray;\r\n        updateValue[editObjIndex].ingredientRecipeArray = [];\r\n        action.itemRecipeObject.ingredientRecipeArray.map((item,index)=>{        \r\n             let object = {}\r\n             object.id = index + 1;\r\n             object.ingredientId = +(getIngredientValueToId(item.ingredientId));\r\n             object.quantityId = +item.quantityId;\r\n             object.unitId = +item.unitId;\r\n             object.ingredientPrice = item.ingredientPrice;\r\n             object.menuId = action.itemRecipeObject.id;\r\n             updateValue[editObjIndex].ingredientRecipeArray.push(object);\r\n        });\r\n    }\r\n    else {\r\n        let itemRecipeLast = null;\r\n        if (updateValue.length !== 0) {\r\n            const itemRecipeLastItem = updateValue[updateValue.length - 1];\r\n            itemRecipeLast = +itemRecipeLastItem.id;\r\n        }\r\n        else {\r\n            itemRecipeLast = 0;\r\n        }\r\n    itemRecipeObject.id = itemRecipeLast + 1;\r\n    itemRecipeObject.foodItem = action.itemRecipeObject.foodItem;\r\n    itemRecipeObject.serving = action.itemRecipeObject.serving;\r\n    itemRecipeObject.recipeDescription = action.itemRecipeObject.recipeDescription;\r\n    itemRecipeObject.basePrice = action.itemRecipeObject.basePrice;\r\n    itemRecipeObject.ingredientRecipeArray = action.itemRecipeObject.ingredientRecipeArray;\r\n    itemRecipeObject.ingredientRecipeArray = [];\r\n    action.itemRecipeObject.ingredientRecipeArray.map((item,index)=>{        \r\n         let object = {}\r\n         object.id = index + 1;\r\n         object.ingredientId = +(getIngredientValueToId(item.ingredientId));\r\n         object.quantityId = +item.quantityId;\r\n         object.unitId = +item.unitId;\r\n         object.ingredientPrice = item.ingredientPrice;\r\n         object.menuId = itemRecipeLast + 1;\r\n         itemRecipeObject.ingredientRecipeArray.push(object);\r\n        });\r\n        updateValue.push(itemRecipeObject);\r\n        itemRecipeObject = {};\r\n    }\r\n    let editMode = false; \r\n    yield localStorage.setItem(\"itemRecipeArray\", JSON.stringify(updateValue));\r\n    const localValueitemRecipe = JSON.parse(localStorage.getItem(\"itemRecipeArray\"));\r\n    let convertArray = conversionForitemRecipeIdToValue(localValueitemRecipe);\r\n    yield put(itemRecipeAction.submitHandlerSuccess(convertArray,editMode,itemRecipeObject));\r\n\r\n}\r\n\r\nconst conversionObjectForIngredientValueToId = (object) =>{\r\n    // let ingredientValue = JSON.parse(localStorage.getItem(\"ingredientArray\"));\r\n    let quantityValue = JSON.parse(localStorage.getItem(\"quantityArray\"));\r\n    let unitValue = JSON.parse(localStorage.getItem(\"unitArray\"));\r\n    \r\n        let updatedArray = [...object.ingredientRecipeArray]\r\n        updatedArray.forEach(element => {\r\n            const quantityObjIndex = quantityValue.findIndex(item => item.quantity === element.quantityId)\r\n            const unitObjIndex = unitValue.findIndex(item => item.unit === element.unitId)\r\n           \r\n            element.quantityId = quantityValue[quantityObjIndex].id;\r\n            element.unitId = unitValue[unitObjIndex].id;\r\n        });    \r\n    return object;\r\n}\r\n\r\nexport function* editItemRecipeHandlerSaga(action){\r\n    const localValue = JSON.parse(localStorage.getItem(\"itemRecipeArray\"));\r\n    let updateValue = [...localValue];\r\n    let convertArray = conversionForitemRecipeIdToValue(updateValue)\r\n    let editObject = conversionObjectForIngredientValueToId(action.itemRecipeObject);\r\n    yield put(itemRecipeAction.editHandlerSuccess(convertArray,editObject,action.editMode));\r\n}\r\n\r\nexport function* deleteItemRecipeHandlerSaga(action){\r\n    const localValue = JSON.parse(localStorage.getItem(\"itemRecipeArray\"));\r\n    let updateValue = [...localValue];\r\n    const deleteObjIndex = updateValue.findIndex(item => item.id === action.itemRecipeObject.id)\r\n    updateValue.splice(deleteObjIndex, 1);\r\n    yield localStorage.setItem(\"itemRecipeArray\", JSON.stringify(updateValue));\r\n    const localValueIngredient = JSON.parse(localStorage.getItem(\"itemRecipeArray\"));\r\n    let convertArray = conversionForitemRecipeIdToValue(localValueIngredient);\r\n    yield put(itemRecipeAction.deleteHandlerSuccess(convertArray));\r\n}","import {put} from \"redux-saga/effects\";\r\nimport * as recipeGeneratorAction from \"../../reducer/RecipeGeneratorReducer/RecipeGeneratorReducer\";\r\n\r\n\r\nconst conversionObjectForIngredientValueToId = (object) =>{\r\n    // let ingredientValue = JSON.parse(localStorage.getItem(\"ingredientArray\"));\r\n    let quantityValue = JSON.parse(localStorage.getItem(\"quantityArray\"));\r\n    let unitValue = JSON.parse(localStorage.getItem(\"unitArray\"));\r\n    let ingredientValue = JSON.parse(localStorage.getItem(\"ingredientArray\"));\r\n        let updatedArray = [...object]\r\n        updatedArray.forEach(element => {\r\n            const quantityObjIndex = quantityValue.findIndex(item => item.id === element.quantityId)\r\n            const unitObjIndex = unitValue.findIndex(item => item.id === element.unitId)\r\n            const ingredientObjIndex = ingredientValue.findIndex(item => item.id === element.ingredientId)\r\n           \r\n            element.ingredientId = ingredientValue[ingredientObjIndex].ingredientName;\r\n            element.quantityId = quantityValue[quantityObjIndex].quantity;\r\n            element.unitId = unitValue[unitObjIndex].unit;\r\n        });    \r\n    return object;\r\n}\r\n\r\nconst qtyCalculation= (quantity, selectedServing, serving)=> {\r\n \r\n    let newQuantity = (Number(quantity) / Number(serving)) * Number(selectedServing);\r\n    return newQuantity;\r\n}\r\n\r\nconst priceCalculation = (newQuantity, ingridientcost, quantity) => {\r\n\r\n    let newPrice = Math.ceil((Number(ingridientcost) / Number(quantity)) * Number(newQuantity));\r\n    return newPrice;\r\n}\r\n\r\nconst totalRecipePrice = (array)=> {\r\n    let priceValue = 0 ;\r\n    for (let i = 0; i < array.length; i++) {\r\n         priceValue += array[i].ingredientPrice;\r\n    }\r\n    return priceValue;\r\n}\r\n\r\nexport function* submitRecipeGeneratorHandlerSaga(action){\r\nconst localValue = JSON.parse(localStorage.getItem(\"itemRecipeArray\"));\r\nlet updateValue = [...localValue];\r\n// Find Index\r\nconst objIndexRecipe = updateValue.findIndex(item => item.foodItem === action.recipeGeneratorObject.foodItem);\r\nlet recipeServed = updateValue[objIndexRecipe].serving;\r\nlet newRecipeIngredientObject = conversionObjectForIngredientValueToId(updateValue[objIndexRecipe].ingredientRecipeArray)\r\nnewRecipeIngredientObject.forEach(el =>{\r\n    let newQuantity = qtyCalculation(el.quantityId,action.recipeGeneratorObject.serving,recipeServed);\r\n    let newIngredientPrice = priceCalculation(newQuantity,el.ingredientPrice,el.quantityId)\r\n    el.quantityId = newQuantity;\r\n    el.ingredientPrice = newIngredientPrice;\r\n}) \r\nlet totalPrice = totalRecipePrice(newRecipeIngredientObject);\r\nyield put(recipeGeneratorAction.submitHandlerSuccess(newRecipeIngredientObject,totalPrice))\r\n}","import {put} from \"redux-saga/effects\";\r\nimport * as vendorMappingAction from \"../../reducer/VendorIngredientMappingReducer/VendorIngredientMappingReducer\";\r\n\r\nexport function* initializeVendorMappingSaga(action){\r\n    let  localVendorMappingValue= JSON.parse(localStorage.getItem(\"vendorMappingArray\"));\r\n    let vendorValue = JSON.parse(localStorage.getItem(\"vendorArray\"));\r\n    let unitValue = JSON.parse(localStorage.getItem(\"unitArray\"));\r\n    let ingredientValue = JSON.parse(localStorage.getItem(\"ingredientArray\"));\r\n    let toDisplayVendorMappingValue ;\r\n    if(vendorValue === null){\r\n        vendorValue = []\r\n    }\r\n    if(unitValue === null){\r\n        unitValue = []\r\n    }\r\n    if(ingredientValue === null){\r\n        ingredientValue = []\r\n    }\r\n    if(localVendorMappingValue === null){\r\n        localVendorMappingValue = [];\r\n        toDisplayVendorMappingValue = []\r\n        yield localStorage.setItem(\"vendorMappingArray\",JSON.stringify(localVendorMappingValue));\r\n    }\r\n    else if(localVendorMappingValue !== null){\r\n        let  localVendorMappingValue= JSON.parse(localStorage.getItem(\"vendorMappingArray\"));\r\n        let localVendorMappingArray = [...localVendorMappingValue];\r\n        toDisplayVendorMappingValue = conversionForVendorMappingIdToValue(localVendorMappingArray);\r\n    }\r\n    yield localStorage.setItem(\"vendorArray\",JSON.stringify(vendorValue));\r\n    yield localStorage.setItem(\"ingredientArray\",JSON.stringify(ingredientValue));\r\n    yield localStorage.setItem(\"unitArray\",JSON.stringify(unitValue));\r\n    yield put(vendorMappingAction.initilizerHandlerSuccess(toDisplayVendorMappingValue,ingredientValue,vendorValue,unitValue));\r\n}\r\n\r\nconst conversionForVendorMappingIdToValue=(array)=>{\r\n    let vendorValue = JSON.parse(localStorage.getItem(\"vendorArray\"));\r\n    for(let key in array){\r\n        let updatedArray = [...array[key].vendorQuoteArray]\r\n        updatedArray.forEach(element => {\r\n            const vendorObjIndex = vendorValue.findIndex(item => item.id === element.vendorId);\r\n            element.vendorId = vendorValue[vendorObjIndex].vendorName;\r\n        });    \r\n    }\r\n    return array;\r\n}\r\n\r\nexport function* submitVendorMappingtHandlerSaga(action){\r\n    const localValue = JSON.parse(localStorage.getItem(\"vendorMappingArray\"));\r\n    let updateValue = [...localValue]\r\n    let vendorMappingObject = {};\r\n    if (action.vendorMappingObject.id !== null && action.editMode === true){\r\n        const editObjIndex = updateValue.findIndex(item => item.id === action.vendorMappingObject.id)\r\n        updateValue[editObjIndex].id = action.vendorMappingObject.id;\r\n        updateValue[editObjIndex].ingredientName = action.vendorMappingObject.ingredientName;\r\n        updateValue[editObjIndex].unitId = action.vendorMappingObject.unitId;\r\n        updateValue[editObjIndex].vendorQuoteArray = action.vendorMappingObject.vendorQuoteArray;\r\n        updateValue[editObjIndex].vendorQuoteArray = [];\r\n        action.vendorMappingObject.vendorQuoteArray.map((item,index)=>{        \r\n             let object = {}\r\n             object.id = index + 1;\r\n             object.vendorId = +item.vendorId;\r\n             object.quotePrice = +item.quotePrice;\r\n             updateValue[editObjIndex].vendorQuoteArray.push(object);\r\n            });\r\n    }\r\n    else {\r\n        let vendorMappingLast = null;\r\n        if (updateValue.length !== 0) {\r\n            const vendorMappingLastItem = updateValue[updateValue.length - 1];\r\n            vendorMappingLast = +vendorMappingLastItem.id;\r\n        }\r\n        else {\r\n            vendorMappingLast = 0;\r\n        }\r\n    vendorMappingObject.id = vendorMappingLast + 1;\r\n    vendorMappingObject.ingredientName = action.vendorMappingObject.ingredientName;\r\n    vendorMappingObject.unitId = action.vendorMappingObject.unitId;\r\n    vendorMappingObject.recipeDescription = action.vendorMappingObject.recipeDescription;\r\n    vendorMappingObject.basePrice = action.vendorMappingObject.basePrice;\r\n    vendorMappingObject.vendorQuoteArray = action.vendorMappingObject.vendorQuoteArray;\r\n    vendorMappingObject.vendorQuoteArray = [];\r\n    action.vendorMappingObject.vendorQuoteArray.map((item,index)=>{        \r\n         let object = {}\r\n         object.id = index + 1;\r\n         object.vendorId = +item.vendorId;\r\n         object.quotePrice = +item.quotePrice;\r\n         vendorMappingObject.vendorQuoteArray.push(object);\r\n        });\r\n        updateValue.push(vendorMappingObject);\r\n        vendorMappingObject = {};\r\n    }\r\n    let editMode = false; \r\n    yield localStorage.setItem(\"vendorMappingArray\", JSON.stringify(updateValue));\r\n    const localvendorMapping = JSON.parse(localStorage.getItem(\"vendorMappingArray\"));\r\n    let convertArray = conversionForVendorMappingIdToValue(localvendorMapping);\r\n    yield put(vendorMappingAction.submitHandlerSuccess(convertArray,editMode,vendorMappingObject));\r\n}\r\n\r\nconst conversionObjectForVendortValueToId = (object) =>{\r\n        let vendorValue = JSON.parse(localStorage.getItem(\"vendorArray\"));      \r\n            let updatedArray = [...object.vendorQuoteArray]\r\n            updatedArray.forEach(element => {\r\n                const vendorObjIndex = vendorValue.findIndex(item => item.vendorName === element.vendorId);\r\n                element.vendorId = vendorValue[vendorObjIndex].id;\r\n            }); \r\n    return object;\r\n}\r\n\r\nexport function* editVendorMappingHandlerSaga(action){\r\n    const localValue = JSON.parse(localStorage.getItem(\"vendorMappingArray\"));\r\n    let updateValue = [...localValue];\r\n    let convertArray = conversionForVendorMappingIdToValue(updateValue);\r\n    let editObject = conversionObjectForVendortValueToId(action.vendorMappingObject);\r\n    yield put(vendorMappingAction.editHandlerSuccess(convertArray,editObject,action.editMode));\r\n}\r\nexport function*deleteVendorMappingHandlerSaga(action){    \r\n    const localValue = JSON.parse(localStorage.getItem(\"vendorMappingArray\"));\r\n    let updateValue = [...localValue];\r\n    const deleteObjIndex = updateValue.findIndex(item => item.id === action.vendorMappingObject.id)\r\n    updateValue.splice(deleteObjIndex, 1);\r\n    yield localStorage.setItem(\"vendorMappingArray\", JSON.stringify(updateValue));\r\n    const localValueVendor = JSON.parse(localStorage.getItem(\"vendorMappingArray\"));\r\n    let convertArray = conversionForVendorMappingIdToValue(localValueVendor);\r\n    yield put(vendorMappingAction.deleteHandlerSuccess(convertArray));\r\n} ","import {put} from \"redux-saga/effects\";\r\nimport * as inventoryAction from \"../../reducer/Inventory/InventoryReducer\";\r\nimport {getIngredientValueToId} from \"../../../Utility/stateConversion\";\r\n\r\nexport function* initalizeInventoryHandlerSaga(){\r\n\r\n    let localInventoryArray = JSON.parse(localStorage.getItem(\"inventoryArray\"));\r\n    let vendorIngredientMappingValue = JSON.parse(localStorage.getItem(\"vendorMappingArray\"));\r\n    let ingredientValue = JSON.parse(localStorage.getItem(\"ingredientArray\"));\r\n    let quantityValue = JSON.parse(localStorage.getItem(\"quantityArray\"));\r\n    let unitValue = JSON.parse(localStorage.getItem(\"unitArray\"));\r\n\r\n    let toDisplayInventory ; \r\n    if(quantityValue === null){\r\n        quantityValue = []\r\n    }\r\n    if(unitValue === null){\r\n        unitValue = []\r\n    }\r\n    if(ingredientValue === null){\r\n        ingredientValue = []\r\n    }\r\n    if(vendorIngredientMappingValue === null){\r\n        vendorIngredientMappingValue = []\r\n    }\r\n    if(localInventoryArray === null){\r\n        localInventoryArray = [];\r\n        toDisplayInventory = []\r\n        yield localStorage.setItem(\"inventoryArray\",JSON.stringify(localInventoryArray));\r\n    }\r\n    else{\r\n        let inventoryValue = JSON.parse(localStorage.getItem(\"inventoryArray\"));\r\n        let inventoryValueArray = [...inventoryValue]\r\n        toDisplayInventory = conversionForInventoryIdToValue(inventoryValueArray);\r\n    }\r\n    yield localStorage.setItem(\"quantityArray\",JSON.stringify(quantityValue));\r\n    yield localStorage.setItem(\"unitArray\",JSON.stringify(unitValue));\r\n    yield localStorage.setItem(\"ingredientArray\" , JSON.stringify(ingredientValue));\r\n    yield localStorage.setItem(\"vendorMappingArray\" , JSON.stringify(vendorIngredientMappingValue));    \r\n    yield put(inventoryAction.initilizerHandlerSuccess(toDisplayInventory,ingredientValue,quantityValue,vendorIngredientMappingValue,unitValue));\r\n}\r\n\r\nconst conversionForInventoryIdToValue=(array)=>{\r\n    let ingredientValue = JSON.parse(localStorage.getItem(\"ingredientArray\"));\r\n    let vendorValue = JSON.parse(localStorage.getItem(\"vendorArray\"));\r\n    let quantityValue = JSON.parse(localStorage.getItem(\"quantityArray\"));\r\n    let unitValue = JSON.parse(localStorage.getItem(\"unitArray\"));\r\n    for(let key in array){\r\n        let updatedArray = [...array[key].dateEntryArray]\r\n        updatedArray.forEach(element => {\r\n            const vendorObjIndex = vendorValue.findIndex(item => item.id === +element.vendorId)\r\n            const quantityObjIndex = quantityValue.findIndex(item => item.id === +element.quantityId)\r\n            const unitObjIndex = unitValue.findIndex(item => item.id ===+ element.unitId)\r\n            const ingredientObjIndex = ingredientValue.findIndex(item => item.id === +element.ingredientId)\r\n           \r\n            element.ingredientId = ingredientValue[ingredientObjIndex].ingredientName;\r\n            element.vendorId = vendorValue[vendorObjIndex].vendorName;\r\n            element.quantityId = quantityValue[quantityObjIndex].quantity;\r\n            element.unitId = unitValue[unitObjIndex].unit;\r\n        });    \r\n    }    \r\n    return array;\r\n}\r\n\r\nexport function* submitInventoryHandlerSaga(action){\r\n    const localValue = JSON.parse(localStorage.getItem(\"inventoryArray\"));\r\n    let updateValue = [...localValue]\r\n    let inventoryObject = {};\r\n    if (action.inventoryObject.id !== null && action.editMode === true){\r\n        const editObjIndex = updateValue.findIndex(item => item.id === action.inventoryObject.id)\r\n        updateValue[editObjIndex].id = action.inventoryObject.id;\r\n        updateValue[editObjIndex].dateFrom = action.inventoryObject.dateFrom;\r\n        updateValue[editObjIndex].dateTo = action.inventoryObject.dateTo;\r\n        updateValue[editObjIndex].totalPurchase = action.inventoryObject.totalPurchase;      \r\n        updateValue[editObjIndex].dateEntryArray = action.inventoryObject.dateEntryArray;\r\n        updateValue[editObjIndex].dateEntryArray = [];\r\n        action.inventoryObject.dateEntryArray.map((item,index)=>{        \r\n             let object = {}\r\n             object.id = index + 1;\r\n             object.ingredientId = +(getIngredientValueToId(item.ingredientId));\r\n             object.vendorId = +item.vendorId;\r\n             object.quantityId = +item.quantityId;\r\n             object.unitId = +item.unitId;\r\n             object.purchasePrice = +item.purchasePrice;\r\n             updateValue[editObjIndex].dateEntryArray.push(object);\r\n            });\r\n    }\r\n    else {\r\n        let inventoryLast = null;\r\n        if (updateValue.length !== 0) {\r\n            const inventoryLastItem = updateValue[updateValue.length - 1];\r\n            inventoryLast = +inventoryLastItem.id;\r\n        }\r\n        else {\r\n            inventoryLast = 0;\r\n        }\r\n    inventoryObject.id = inventoryLast + 1;\r\n    inventoryObject.dateFrom = action.inventoryObject.dateFrom;\r\n    inventoryObject.dateTo = action.inventoryObject.dateTo;\r\n    inventoryObject.totalPurchase = action.inventoryObject.totalPurchase;\r\n  \r\n    inventoryObject.dateEntryArray = action.inventoryObject.dateEntryArray;\r\n    inventoryObject.dateEntryArray = [];\r\n    action.inventoryObject.dateEntryArray.map((item,index)=>{        \r\n         let object = {}\r\n         object.id = index + 1;\r\n         object.ingredientId = +(getIngredientValueToId(item.ingredientId));\r\n         object.vendorId = +item.vendorId;\r\n         object.quantityId = +item.quantityId;\r\n         object.unitId = +item.unitId;\r\n         object.purchasePrice = +item.purchasePrice;\r\n         inventoryObject.dateEntryArray.push(object);\r\n        });\r\n        updateValue.push(inventoryObject);\r\n        inventoryObject = {};\r\n    }\r\n    let editMode = false; \r\n    yield localStorage.setItem(\"inventoryArray\", JSON.stringify(updateValue));\r\n    const localValueInventory = JSON.parse(localStorage.getItem(\"inventoryArray\"));\r\n    let convertArray = conversionForInventoryIdToValue(localValueInventory);\r\n    yield put(inventoryAction.submitHandlerSuccess(convertArray,editMode,inventoryObject));\r\n}\r\n\r\nconst conversionObjectForInventoryValueToId = (object) =>{\r\n    // let ingredientValue = JSON.parse(localStorage.getItem(\"ingredientArray\"));\r\n    let vendorValue = JSON.parse(localStorage.getItem(\"vendorArray\"));\r\n    let quantityValue = JSON.parse(localStorage.getItem(\"quantityArray\"));\r\n    let unitValue = JSON.parse(localStorage.getItem(\"unitArray\"));\r\n    let updatedArray = [...object.dateEntryArray]\r\n    updatedArray.forEach(element => {\r\n        const vendorObjIndex = vendorValue.findIndex(item => item.vendorName === element.vendorId);\r\n        const quantityObjIndex = quantityValue.findIndex(item => item.quantity === element.quantityId);\r\n        const unitObjIndex = unitValue.findIndex(item => item.unit === element.unitId);\r\n        element.vendorId = vendorValue[vendorObjIndex].id;\r\n        element.quantityId = quantityValue[quantityObjIndex].id;\r\n        element.unitId = unitValue[unitObjIndex].id;\r\n    });        \r\n    return object;\r\n}\r\n\r\nexport function* editInventoryHandlerSaga(action){\r\n    const localValue = JSON.parse(localStorage.getItem(\"inventoryArray\"));\r\n    let updateValue = [...localValue];\r\n    let convertArray = conversionForInventoryIdToValue(updateValue)\r\n    let editObject = conversionObjectForInventoryValueToId(action.inventoryObject);\r\n    yield put(inventoryAction.editHandlerSuccess(convertArray,editObject,action.editMode));\r\n}  \r\nexport function* deleteInventoryHandlerSaga(action){\r\n    const localValue = JSON.parse(localStorage.getItem(\"inventoryArray\"));\r\n    let updateValue = [...localValue];\r\n    const deleteObjIndex = updateValue.findIndex(item => item.id === action.inventoryObject.id)\r\n    updateValue.splice(deleteObjIndex, 1);\r\n    yield localStorage.setItem(\"inventoryArray\", JSON.stringify(updateValue));\r\n    const localValueInventory = JSON.parse(localStorage.getItem(\"inventoryArray\"));\r\n    let convertArray = conversionForInventoryIdToValue(localValueInventory);\r\n    yield put(inventoryAction.deleteHandlerSuccess(convertArray));\r\n}\r\n","import {put} from \"redux-saga/effects\";\r\nimport * as orderAction from \"../../reducer/CustomerOrder/CustomerOrderReducer\";\r\n\r\nexport function* initlizeOrderSaga(){\r\n    let localCustomerOrder = JSON.parse(localStorage.getItem(\"customerOrderArray\"));\r\n    let foodItemValue = JSON.parse(localStorage.getItem(\"foodItemArray\"));\r\n    let customerLastOrder = null;\r\n    if(foodItemValue === null){\r\n        foodItemValue = []\r\n    }  \r\n    if(localCustomerOrder === null ){\r\n        localCustomerOrder = [];\r\n        customerLastOrder = 0;\r\n    }\r\n    else {\r\n            const customerLastOrderItem = localCustomerOrder[localCustomerOrder.length - 1];\r\n            customerLastOrder = +customerLastOrderItem.id;     \r\n        }\r\n    let orderId = customerLastOrder + 1\r\n    yield localStorage.setItem(\"foodItemArray\",JSON.stringify(foodItemValue));\r\n    yield localStorage.setItem(\"customerOrderArray\",JSON.stringify(localCustomerOrder));\r\n    yield put(orderAction.initilizerHandlerSuccess(localCustomerOrder,foodItemValue,orderId));\r\n}\r\n\r\nexport function* submitOrderHandlerSaga(action){\r\n    const localValue = JSON.parse(localStorage.getItem(\"customerOrderArray\"));\r\n    let updateValue = [...localValue]\r\n    let customerOrderObject = {};\r\n    // let nextOrderId;\r\n    if (action.editMode === true){\r\n        const editObjIndex = updateValue.findIndex(item => item.id === action.customerOrderObject.id)\r\n        updateValue[editObjIndex].id = +action.customerOrderObject.id;\r\n        updateValue[editObjIndex].customerName = action.customerOrderObject.customerName;\r\n        updateValue[editObjIndex].orderDate = action.customerOrderObject.orderDate;\r\n        updateValue[editObjIndex].discount = +action.customerOrderObject.discount;\r\n        updateValue[editObjIndex].totalAmount = +action.customerOrderObject.totalAmount;\r\n        updateValue[editObjIndex].orderArray = action.customerOrderObject.orderArray;\r\n        updateValue[editObjIndex].orderArray = [];\r\n        action.customerOrderObject.orderArray.map((item,index)=>{        \r\n             let object = {}\r\n             object.id = index + 1;\r\n             object.foodItemId = item.foodItemId;\r\n             object.orderQtyId = +item.orderQtyId;\r\n             object.amount = +item.amount;\r\n             updateValue[editObjIndex].orderArray.push(object);\r\n            });\r\n    }\r\n    else {\r\n        let customerOrderLast = null;\r\n        if (updateValue.length !== 0) {\r\n            const customerOrderLastItem = updateValue[updateValue.length - 1];\r\n            customerOrderLast = +customerOrderLastItem.id;\r\n        }\r\n        else {\r\n            customerOrderLast = 0;\r\n        }\r\n    customerOrderObject.id = customerOrderLast + 1;\r\n    customerOrderObject.customerName = action.customerOrderObject.customerName;\r\n    customerOrderObject.orderDate = action.customerOrderObject.orderDate;\r\n    customerOrderObject.discount = +action.customerOrderObject.discount;\r\n    customerOrderObject.totalAmount = +action.customerOrderObject.totalAmount;\r\n    customerOrderObject.orderArray = action.customerOrderObject.orderArray;\r\n    customerOrderObject.orderArray = [];\r\n    action.customerOrderObject.orderArray.map((item,index)=>{        \r\n        let object = {}\r\n        object.id = index + 1;\r\n        object.foodItemId = item.foodItemId;\r\n        object.orderQtyId = +item.orderQtyId;\r\n        object.amount = +item.amount;\r\n         customerOrderObject.orderArray.push(object);\r\n        });\r\n        updateValue.push(customerOrderObject);\r\n        // nextOrderId =customerOrderObject.id +1;\r\n        customerOrderObject = {};\r\n    }\r\n    \r\n    let editMode = false; \r\n    yield localStorage.setItem(\"customerOrderArray\", JSON.stringify(updateValue));  \r\n\r\n    // For Order No.\r\n    const localValueD = JSON.parse(localStorage.getItem(\"customerOrderArray\"));\r\n    let updateValueD = [...localValueD];\r\n    let customerLastOrders;\r\n    if(updateValue === null ){\r\n        customerLastOrders = 0;\r\n    }\r\n    else {\r\n        const customerLastOrderItem = updateValueD[updateValue.length - 1];\r\n        customerLastOrders = +customerLastOrderItem.id;     \r\n    }\r\n    let orderId = customerLastOrders + 1\r\n\r\n    yield put(orderAction.submitHandlerSuccess(updateValue,editMode,action.customerOrderObject,orderId));    \r\n}\r\n    \r\nexport function* editOrderHandlerSaga(action){\r\n    const localValue = JSON.parse(localStorage.getItem(\"customerOrderArray\"));\r\n    let updateValue = [...localValue];\r\n    let editObject = action.customerOrderObject;\r\n    yield put(orderAction.editHandlerSuccess(updateValue,editObject,action.editMode,editObject.id));\r\n}\r\n\r\nexport function* deleteOrderHandlerSaga(action){\r\n    const localValue = JSON.parse(localStorage.getItem(\"customerOrderArray\"));\r\n    let updateValue = [...localValue];\r\n    const deleteObjIndex = updateValue.findIndex(item => item.id === action.customerOrderObject.id)\r\n    updateValue.splice(deleteObjIndex, 1);\r\n    let customerLastOrder;\r\n    if(updateValue === null ){\r\n        customerLastOrder = 0;\r\n    }\r\n    else {\r\n        const customerLastOrderItem = updateValue[updateValue.length - 1];\r\n        customerLastOrder = +customerLastOrderItem.id;     \r\n    }\r\n    let orderId = customerLastOrder + 1\r\n    yield localStorage.setItem(\"customerOrderArray\", JSON.stringify(updateValue));\r\n    yield put(orderAction.deleteHandlerSuccess(updateValue,orderId));\r\n}","import {put} from \"redux-saga/effects\";\r\nimport * as monthlyExpenseAction from \"../../reducer/MonthlyExpense/MonthlyExpenseReducer\";\r\n\r\nexport function* initlizeExpenseSaga(){\r\n    let localValue = JSON.parse(localStorage.getItem(\"monthlyExpenseArray\"));\r\n    let totalAmount ;\r\n    if(localValue === null){\r\n        localValue = [];\r\n        totalAmount = 0;\r\n    }    \r\n    else{\r\n        totalAmount = sumUpMonthlyExpense(localValue);\r\n    }\r\n    const updateValue = [...localValue];\r\n    yield localStorage.setItem(\"monthlyExpenseArray\", JSON.stringify(updateValue));\r\n    yield put(monthlyExpenseAction.initilizerHandlerSuccess(updateValue,totalAmount));\r\n}\r\n\r\nconst sumUpMonthlyExpense = (updateValue) => {\r\n    let total = 0;\r\n    for(let key in updateValue){\r\n       total += updateValue[key].monthlyAmount\r\n    }\r\n    return total\r\n}\r\nexport function* submitExpenseHandlerSaga(action){\r\n    const localValue = JSON.parse(localStorage.getItem(\"monthlyExpenseArray\"));\r\n    let updateValue = [...localValue]\r\n    let monthlyExpenseObject = {};\r\n    if (action.monthlyExpenseObject.id !== null && action.editMode === true){\r\n        const editObjIndex = updateValue.findIndex(item => item.id === action.monthlyExpenseObject.id)\r\n        updateValue[editObjIndex] = action.monthlyExpenseObject;\r\n    }\r\n    else {\r\n        let expenseLast = null;\r\n        if (updateValue.length !== 0) {\r\n            const expenseLastItem = updateValue[updateValue.length - 1];\r\n            expenseLast = +expenseLastItem.id;\r\n        }\r\n        else {\r\n            expenseLast = 0;\r\n        }\r\n        monthlyExpenseObject = action.monthlyExpenseObject;\r\n        monthlyExpenseObject.id = expenseLast + 1;\r\n        updateValue.push(monthlyExpenseObject);\r\n        monthlyExpenseObject = {};\r\n    }\r\n    let editMode = false;\r\n    let totalAmount = sumUpMonthlyExpense(updateValue);\r\n    yield localStorage.setItem(\"monthlyExpenseArray\", JSON.stringify(updateValue));\r\n    yield put(monthlyExpenseAction.submitHandlerSuccess(updateValue,editMode,monthlyExpenseObject,totalAmount));\r\n\r\n}\r\nexport function* editExpenseHandlerSaga(action){\r\n    const localValue = JSON.parse(localStorage.getItem(\"monthlyExpenseArray\"));\r\n    let totalAmount = sumUpMonthlyExpense(localValue);\r\n    yield put(monthlyExpenseAction.editHandlerSuccess(localValue,action.monthlyExpenseObject,action.editMode,totalAmount));\r\n\r\n}\r\nexport function* deleteExpenseHandlerSaga(action){\r\n    const localValue = JSON.parse(localStorage.getItem(\"monthlyExpenseArray\"));\r\n    let updateValue = [...localValue];\r\n    const deleteObjIndex = updateValue.findIndex(item => item.id === action.monthlyExpenseObject.id)\r\n    updateValue.splice(deleteObjIndex, 1);\r\n    yield localStorage.setItem(\"monthlyExpenseArray\", JSON.stringify(updateValue));\r\n    let totalAmount = sumUpMonthlyExpense(updateValue);\r\n    yield put(monthlyExpenseAction.deleteHandlerSuccess(updateValue,totalAmount));\r\n}","import {put} from \"redux-saga/effects\";\r\nimport * as investmentBudgetAction from \"../../reducer/InvestmentBudget/InvestmentBudgetReducer\";\r\n\r\nexport function* initlizeBudgetSaga(){\r\n    let localValue = JSON.parse(localStorage.getItem(\"investmentBudgetArray\"));\r\n    let totalAmount ;\r\n    if(localValue === null){\r\n        localValue = [];\r\n        totalAmount = 0;\r\n    }    \r\n    else{\r\n        totalAmount = sumUpInvestmentBudget(localValue);\r\n    }    \r\n    const updateValue = [...localValue];\r\n    yield localStorage.setItem(\"investmentBudgetArray\", JSON.stringify(updateValue));\r\n    yield put(investmentBudgetAction.initilizerHandlerSuccess(updateValue,totalAmount));\r\n}\r\n\r\nconst sumUpInvestmentBudget = (updateValue) => {\r\n    let total = 0;\r\n    for(let key in updateValue){\r\n       total += updateValue[key].monthlyExpenseAmount;\r\n    }\r\n    return total\r\n}\r\n\r\nexport function* submitBudgetHandlerSaga(action){\r\n    const localValue = JSON.parse(localStorage.getItem(\"investmentBudgetArray\"));\r\n    let updateValue = [...localValue]\r\n    let investmentBudgetObject = {};\r\n    if (action.investmentBudgetObject.id !== null && action.editMode === true){\r\n        const editObjIndex = updateValue.findIndex(item => item.id === action.investmentBudgetObject.id)\r\n        updateValue[editObjIndex] = action.investmentBudgetObject;\r\n    }\r\n    else {\r\n        let expenseLast = null;\r\n        if (updateValue.length !== 0) {\r\n            const expenseLastItem = updateValue[updateValue.length - 1];\r\n            expenseLast = +expenseLastItem.id;\r\n        }\r\n        else {\r\n            expenseLast = 0;\r\n        }\r\n        investmentBudgetObject = action.investmentBudgetObject;\r\n        investmentBudgetObject.id = expenseLast + 1;\r\n        updateValue.push(investmentBudgetObject);\r\n        investmentBudgetObject = {};\r\n    }\r\n    let editMode = false;\r\n    let totalAmount = sumUpInvestmentBudget(updateValue);\r\n    yield localStorage.setItem(\"investmentBudgetArray\", JSON.stringify(updateValue));\r\n    yield put(investmentBudgetAction.submitHandlerSuccess(updateValue,editMode,investmentBudgetObject,totalAmount));\r\n}\r\nexport function* editBudgetHandlerSaga(action){\r\n    const localValue = JSON.parse(localStorage.getItem(\"investmentBudgetArray\"));\r\n    let totalAmount = sumUpInvestmentBudget(localValue);\r\n    yield put(investmentBudgetAction.editHandlerSuccess(localValue,action.investmentBudgetObject,action.editMode,totalAmount));\r\n}\r\n\r\nexport function* deleteBudgetHandlerSaga(action){\r\n    const localValue = JSON.parse(localStorage.getItem(\"investmentBudgetArray\"));\r\n    let updateValue = [...localValue];\r\n    const deleteObjIndex = updateValue.findIndex(item => item.id === action.investmentBudgetObject.id)\r\n    updateValue.splice(deleteObjIndex, 1);\r\n    yield localStorage.setItem(\"investmentBudgetArray\", JSON.stringify(updateValue));\r\n    let totalAmount = sumUpInvestmentBudget(updateValue);\r\n    yield put(investmentBudgetAction.deleteHandlerSuccess(updateValue,totalAmount));\r\n\r\n}","import {put} from \"redux-saga/effects\";\r\nimport * as orderReportAction from \"../../reducer/OrderReport/OrderReportReducer\";\r\n\r\n// Function to get Selected Array\r\nconst getOrderDate = (startDate,endDate,orderDetail) =>{\r\n    let result = orderDetail.filter(d => {var time = new Date(d.orderDate).getTime();\r\n        return (startDate <= time && time <= endDate);\r\n    });\r\n    return result;\r\n}\r\n\r\nconst sumUpOrderExpense = (updateValue) => {\r\n    let total = 0;\r\n    for(let key in updateValue){\r\n       total += updateValue[key].totalAmount\r\n    }\r\n    return total\r\n}\r\n\r\nexport function* submitOrderReportHandlerSaga(action){\r\n    const localValue = JSON.parse(localStorage.getItem(\"customerOrderArray\"));\r\n    const updateValue = [...localValue];\r\n    let orderReport = [];\r\n    let startDate = new Date(action.orderReportObject.dateFrom);\r\n    let endDate = new Date(action.orderReportObject.dateTo);\r\n    let array =  getOrderDate(startDate,endDate,updateValue);\r\n\r\n    if(array.length !== 0){\r\n        array.map((item) =>{\r\n            let object = {};\r\n            object.orderId = item.id;\r\n            object.orderDate = item.orderDate;\r\n            object.customerName = item.customerName;\r\n            object.totalAmount = item.totalAmount;\r\n            orderReport.push(object);\r\n        })    \r\n    }   \r\n    let totalAmount = sumUpOrderExpense(orderReport);\r\n    yield put(orderReportAction.submitHandlerSuccess(orderReport,totalAmount));\r\n\r\n}","import {put} from \"redux-saga/effects\";\r\nimport * as topSellAction from \"../../reducer/TopSellDish/TopSellDishReducer\";\r\nimport {getingredientIdToValue,getUnitIdToValue,getQtyIdToValue} from \"../../../Utility/stateConversion\";\r\n\r\n// Function to get Selected Array\r\nconst getOrderDate = (startDate,endDate,orderDetail) =>{\r\n    let result = orderDetail.filter(d => {var time = new Date(d.orderDate).getTime();\r\n        return (startDate <= time && time <= endDate);\r\n    });\r\n    return result;\r\n}\r\n\r\nconst extractMenu = (arrayOfOrder,array) =>{\r\n    let customerOrderDetail = JSON.parse(localStorage.getItem(\"customerOrderArray\"));\r\n    let orderArray=[]\r\n    customerOrderDetail.forEach(element =>{\r\n        element.orderArray.forEach((item) =>{\r\n            item.orderId = element.id;  \r\n            orderArray.push(item);          \r\n        })\r\n    })\r\n    arrayOfOrder.forEach(el =>{\r\n        orderArray.forEach(element =>{\r\n            if(element.orderId === el.id){\r\n                let object = {};\r\n                object.orderedfood = element.foodItemId;\r\n                object.quantity = +element.orderQtyId;\r\n                array.push(object);\r\n            }\r\n        });\r\n    });   \r\n    let countedArray = countEachFood(array);\r\n    return countedArray;\r\n}\r\n\r\nconst countEachFood = (array) =>{\r\n    var result = [];\r\n    array.reduce(function(res, value) {\r\n     if (!res[value.orderedfood]) {\r\n      res[value.orderedfood] = {orderedfood: value.orderedfood, quantity: 0 };\r\n     result.push(res[value.orderedfood])\r\n     }\r\n     res[value.orderedfood].quantity += value.quantity;\r\n    return res;\r\n    }, {});\r\n    result.sort((a, b) => parseFloat(b.quantity) - parseFloat(a.quantity));\r\n    return result;\r\n}\r\n\r\nconst sliceTopDishes=(sortedArray,qtyTopServed)=>{   \r\n\r\n    let start = 0;\r\n    let topSelection;\r\n    let end = qtyTopServed;\r\n    if (sortedArray !== null) {\r\n        topSelection = sortedArray.slice(start,end);       \r\n    }\r\n    return topSelection;\r\n}\r\n\r\nexport function* submitTopSellDishHandlerSaga(action){\r\n    const localValue = JSON.parse(localStorage.getItem(\"customerOrderArray\"));\r\n    const updateValue = [...localValue];\r\n    let startDate = new Date(action.topSellObject.dateFrom);\r\n    let endDate = new Date(action.topSellObject.dateTo);\r\n    let qtyTopServed = action.topSellObject.topServed\r\n    let arrayOfOrder =  getOrderDate(startDate,endDate,updateValue);\r\n    let array = [];\r\n    let sortedArray = extractMenu(arrayOfOrder,array);\r\n    let topSelection = sliceTopDishes(sortedArray,qtyTopServed);\r\n    yield put(topSellAction.submitTopDishHandlerSuccess(topSelection));\r\n}\r\n\r\n\r\n\r\nconst addMenuId = (array)=>{\r\n    let itemRecipeDetail = JSON.parse(localStorage.getItem(\"itemRecipeArray\"));\r\n    array.forEach(element => {\r\n        itemRecipeDetail.forEach(el =>{\r\n            if(element.orderedfood === el.foodItem){\r\n                element.menuId = el.id;\r\n            }\r\n        });\r\n    });\r\n    return array;\r\n}\r\n\r\nconst extractIngridient = (array,emptyArray)=>{\r\n    let itemRecipeDetail = JSON.parse(localStorage.getItem(\"itemRecipeArray\"));\r\n    let ingredientArray=[]\r\n    itemRecipeDetail.forEach(element =>{\r\n        element.ingredientRecipeArray.forEach((item) =>{            \r\n            ingredientArray.push(item);          \r\n        })\r\n    })\r\n    array.forEach(el =>{\r\n        ingredientArray.forEach(element =>{\r\n            if(element.menuId === el.menuId){\r\n                let object = {};\r\n                object.ingridient = getingredientIdToValue(element.ingredientId);\r\n                object.unit = getUnitIdToValue(element.unitId);\r\n                object.quantity = Math.ceil(Number(getQtyIdToValue(element.quantityId) * el.quantity));                \r\n                emptyArray.push(object);\r\n            }\r\n        });\r\n    });   \r\n    let countedArray = countEachIngridient(emptyArray);\r\n    return countedArray;\r\n}\r\n\r\n// Count Each Food Function\r\nconst countEachIngridient=(array)=>{\r\n    var result = [];\r\n    array.reduce(function(res, value) {\r\n     if (!res[value.ingridient]) {\r\n      res[value.ingridient] = {ingridient: value.ingridient, quantity: 0,unit: value.unit};\r\n     result.push(res[value.ingridient])\r\n     }\r\n     res[value.ingridient].quantity += value.quantity;\r\n    return res;\r\n    }, {});\r\n    result.sort((a, b) => parseFloat(b.quantity) - parseFloat(a.quantity));\r\n    return result;\r\n}\r\n\r\nexport function* submitTopSellIngredientHandlerSaga(action){\r\n    const localValue = JSON.parse(localStorage.getItem(\"customerOrderArray\"));\r\n    const updateValue = [...localValue];\r\n    let startDate = new Date(action.topSellObject.dateFrom);\r\n    let endDate = new Date(action.topSellObject.dateTo);\r\n    let qtyTopServed = action.topSellObject.topServed\r\n    let arrayOfOrder =  getOrderDate(startDate,endDate,updateValue);\r\n    let array = [];\r\n    let sortedArray = extractMenu(arrayOfOrder,array);\r\n    let topSelection = sliceTopDishes(sortedArray,qtyTopServed);\r\n    let addedMenuId = addMenuId(topSelection);\r\n    let emptyArray = [];\r\n    let arrayIngridient = extractIngridient(addedMenuId,emptyArray);\r\n    let topSelectIngridient = sliceTopDishes(arrayIngridient,qtyTopServed);\r\n    yield put(topSellAction.submitTopIngredienthHandlerSuccess(topSelectIngridient));   \r\n}","import {put} from \"redux-saga/effects\";\r\nimport * as profitLossAction from \"../../reducer/ProfitLoss/ProfitLossReducer\";\r\n\r\nconst sumUpOrderExpense = (updateValue) => {\r\n    let total = 0;\r\n    for(let key in updateValue){\r\n       total += updateValue[key].monthlyAmount\r\n    }\r\n    return total\r\n}\r\n\r\n// Function to get Selected Array\r\nconst getOrderDate = (startDate,endDate,orderDetail) =>{\r\n    let result = orderDetail.filter(d => {var time = new Date(d.date).getTime();\r\n        return (startDate <= time && time <= endDate);\r\n    });\r\n    return result;\r\n}\r\n\r\nexport function* submitProfitLossHandlerSaga(action){\r\n    const localValue = JSON.parse(localStorage.getItem(\"monthlyExpenseArray\"));\r\n    const updateValue = [...localValue];  \r\n    let startDate = new Date(action.profitLossObject.dateFrom);\r\n    let endDate = new Date(action.profitLossObject.dateTo);\r\n    let array =  getOrderDate(startDate,endDate,updateValue);\r\n    let totalAmount = sumUpOrderExpense(array);   \r\n    yield put(profitLossAction.submitHandlerSuccess(array,totalAmount));\r\n}","import {put} from \"redux-saga/effects\";\r\nimport * as reservationAction from \"../../reducer/TableReservation/TableReservationReducer\";\r\n\r\nexport function* initlizeReservationSaga(action){\r\n   \r\n    let localValue = JSON.parse(localStorage.getItem(\"tableReservationArray\"));\r\n    if(localValue === null){\r\n        localValue = [];\r\n    }    \r\n    const updateValue = [...localValue];\r\n    yield localStorage.setItem(\"tableReservationArray\", JSON.stringify(updateValue));\r\n    yield put(reservationAction.initilizerReservationSuccess(updateValue));\r\n}\r\n\r\nexport function* submitTableHandlerSaga(action){\r\n    const localValue = JSON.parse(localStorage.getItem(\"tableReservationArray\"));\r\n    let updateValue = [...localValue]\r\n    let tableReservationObject = {};\r\n        if (action.tableReservationObject.id !== null && action.editMode === true){\r\n        const editObjIndex = updateValue.findIndex(item => item.id === action.tableReservationObject.id)\r\n        updateValue[editObjIndex] = action.tableReservationObject;\r\n        updateValue[editObjIndex].tableReserved = Math.ceil(+action.tableReservationObject.person/4);\r\n    }\r\n    else {\r\n        let tableLast = null;\r\n        if (updateValue.length !== 0) {\r\n            const tableLastItem = updateValue[updateValue.length - 1];\r\n            tableLast = +tableLastItem.id;\r\n        }\r\n        else {\r\n            tableLast = 0;\r\n        }\r\n        tableReservationObject = action.tableReservationObject;\r\n        tableReservationObject.id = tableLast + 1;\r\n        tableReservationObject.tableReserved = Math.ceil(+action.tableReservationObject.person/4);\r\n        updateValue.push(tableReservationObject);\r\n        tableReservationObject = {};\r\n    }\r\n    let editMode = false;  \r\n    yield localStorage.setItem(\"tableReservationArray\", JSON.stringify(updateValue));\r\n    yield put(reservationAction.submitHandlerSuccess(updateValue,editMode,tableReservationObject));\r\n}\r\n\r\nexport function* editTableReservationHandlerSaga(action){\r\n    const localValue = JSON.parse(localStorage.getItem(\"tableReservationArray\"));\r\n    yield put(reservationAction.editHandlerSuccess(localValue,action.tableReservationObject,action.editMode));\r\n }  \r\nexport function* deleteTableReservationHandlerSaga(action){\r\n    const localValue = JSON.parse(localStorage.getItem(\"tableReservationArray\"));\r\n    let updateValue = [...localValue];\r\n    const deleteObjIndex = updateValue.findIndex(item => item.id === action.tableReservationObject.id)\r\n    updateValue.splice(deleteObjIndex, 1);\r\n    yield localStorage.setItem(\"tableReservationArray\", JSON.stringify(updateValue));\r\n    yield put(reservationAction.deleteHandlerSuccess(updateValue));\r\n}","import { takeLatest } from \"@redux-saga/core/effects\";\r\n\r\n// Food Item\r\nimport * as foodItemAction from \"../reducer/FoodItem/FoodItemReducer\";\r\nimport {initHandlerSaga,submitHandlerSaga,editHandlerSaga,deleteHandlerSaga} from \"./FootItemSsaga/FoodItemSaga\";\r\n\r\n// Qunatity \r\nimport * as QuantityAction from \"../reducer/Quantity/QuantityReducer\";\r\nimport {initQtyHandlerSaga,submitQtyHandlerSaga,deleteQtyHandlerSaga,editQtyHandlerSaga} from \"./Quantity/QuantitySaga\"\r\n\r\n// Unit \r\nimport * as UnitAction from \"../reducer/Unit/UnitReducer\";\r\nimport {initUnitHandlerSaga,submitUnitHandlerSaga,deleteUnitHandlerSaga,editUnitHandlerSaga} from \"./Unit/UnitSaga\"\r\n\r\n// Vendor Master\r\nimport * as vendorAction from \"../reducer/VendorMaster/VendorMasterReducer\";\r\nimport {initilizeVendorSaga,submitVendorHandlerSaga,deleteVendorHandlerSaga,editVendorHandlerSaga} from \"./VendorMaster/VendorMasterSaga\";\r\n\r\n// ingredientMaster\r\nimport * as ingredientAction from \"../reducer/IngredientMaster/IngredientMasterReducer\";\r\nimport {initlizeIngredientSaga,submitIngredientHandlerSaga,deleteIngredientHandlerSaga,editIngredientHandlerSaga} from \"./IngredientMaster/IngredientMasterSaga\";\r\n\r\n// Item Recipe\r\nimport * as itemRecipeAction from \"../reducer/ItemRecipe/ItemRecipeReducer\";\r\nimport {initlizeItemRecipeSaga,submitItemRecipeHandlerSaga,deleteItemRecipeHandlerSaga,editItemRecipeHandlerSaga} from \"./ItemRecipe/ItemRecipeSaga\";\r\n\r\n// Recipe Generator\r\nimport * as recipeGeneratorAction from \"../reducer/RecipeGeneratorReducer/RecipeGeneratorReducer\";\r\nimport {submitRecipeGeneratorHandlerSaga} from \"./RecipeGenerator/RecipeGeneratorSaga\";\r\n// Vendor Mapping\r\nimport * as vendorMappingAction from \"../reducer/VendorIngredientMappingReducer/VendorIngredientMappingReducer\";\r\nimport {initializeVendorMappingSaga,submitVendorMappingtHandlerSaga,editVendorMappingHandlerSaga,deleteVendorMappingHandlerSaga} from \"./VendorIngredientMapping/VendorIngredientMappingSaga\";\r\n// Inventory\r\nimport * as inventoryAction from \"../reducer/Inventory/InventoryReducer\";\r\nimport {initalizeInventoryHandlerSaga,submitInventoryHandlerSaga,editInventoryHandlerSaga,deleteInventoryHandlerSaga} from \"./Inventory/InventorySaga\";\r\n// Customer Order\r\nimport * as customerOrderAction from \"../reducer/CustomerOrder/CustomerOrderReducer\";\r\nimport {initlizeOrderSaga,submitOrderHandlerSaga,deleteOrderHandlerSaga,editOrderHandlerSaga} from \"./CustomerOrder/CustomerOrderSaga\";\r\n// Monthly Expense\r\nimport * as monthlyExpenseAction from \"../reducer/MonthlyExpense/MonthlyExpenseReducer\";\r\nimport {initlizeExpenseSaga,submitExpenseHandlerSaga,deleteExpenseHandlerSaga,editExpenseHandlerSaga} from \"./MonthlyExpense/MonthlyExpenseSaga\";\r\n// Investment Budget\r\nimport * as investmentBudgetAction from \"../reducer/InvestmentBudget/InvestmentBudgetReducer\";\r\nimport {initlizeBudgetSaga,submitBudgetHandlerSaga,deleteBudgetHandlerSaga,editBudgetHandlerSaga} from \"./InvestmentBudget/InvestmentBudgetSaga\";\r\n// Order Report\r\nimport * as orderReportAction from \"../reducer/OrderReport/OrderReportReducer\";\r\nimport {submitOrderReportHandlerSaga} from \"./OrderReport/OrderReportSaga\";\r\n// Top Sell \r\nimport * as topSellAction from \"../reducer/TopSellDish/TopSellDishReducer\";\r\nimport {submitTopSellDishHandlerSaga,submitTopSellIngredientHandlerSaga} from \"./TopSellDish/TopSellDishSaga\";\r\n// Profit Loss\r\nimport * as profitLossAction from \"../reducer/ProfitLoss/ProfitLossReducer\";\r\nimport {submitProfitLossHandlerSaga} from \"./ProfitLoss/ProfitLossSaga\";\r\n// Table Reservation\r\nimport * as reservationAction from \"../reducer/TableReservation/TableReservationReducer\";\r\nimport {initlizeReservationSaga,submitTableHandlerSaga,editTableReservationHandlerSaga,deleteTableReservationHandlerSaga} from \"./TableReservation/TableReservationSaga\";\r\n\r\nexport function* watch(){\r\n// Food Item\r\nyield takeLatest(foodItemAction.INIT,initHandlerSaga);\r\nyield takeLatest(foodItemAction.SUBMIT_HANDLER_INIT,submitHandlerSaga);\r\nyield takeLatest(foodItemAction.DELETE_HANDLER_INIT,deleteHandlerSaga);\r\nyield takeLatest(foodItemAction.EDIT_HANDLER_INIT,editHandlerSaga);\r\n// Quantity \r\nyield takeLatest(QuantityAction.QUANTITY_INIT,initQtyHandlerSaga);\r\nyield takeLatest(QuantityAction.SUBMIT_QUANTITY_HANDLER_INIT,submitQtyHandlerSaga);\r\nyield takeLatest(QuantityAction.DELETE_QUANTITY_HANDLER_INIT,deleteQtyHandlerSaga);\r\nyield takeLatest(QuantityAction.EDIT_QUANTITY_HANDLER_INIT,editQtyHandlerSaga);\r\n//Unit\r\nyield takeLatest(UnitAction.UNIT_INIT,initUnitHandlerSaga);\r\nyield takeLatest(UnitAction.SUBMIT_UNIT_HANDLER_INIT,submitUnitHandlerSaga);\r\nyield takeLatest(UnitAction.DELETE_UNIT_HANDLER_INIT,deleteUnitHandlerSaga);\r\nyield takeLatest(UnitAction.EDIT_UNIT_HANDLER_INIT,editUnitHandlerSaga);\r\n// Vendor Master\r\nyield takeLatest(vendorAction.VENDOR_INIT,initilizeVendorSaga);\r\nyield takeLatest(vendorAction.SUBMIT_VENDOR_HANDLER_INIT,submitVendorHandlerSaga);\r\nyield takeLatest(vendorAction.DELETE_VENDOR_HANDLER_INIT,deleteVendorHandlerSaga);\r\nyield takeLatest(vendorAction.EDIT_VENDOR_HANDLER_INIT,editVendorHandlerSaga);\r\n// ingredientMaster\r\nyield takeLatest(ingredientAction.INGREDIENT_INIT,initlizeIngredientSaga);\r\nyield takeLatest(ingredientAction.SUBMIT_INGREDIENT_HANDLER_INIT,submitIngredientHandlerSaga);\r\nyield takeLatest(ingredientAction.DELETE_INGREDIENT_HANDLER_INIT,deleteIngredientHandlerSaga);\r\nyield takeLatest(ingredientAction.EDIT_INGREDIENT_HANDLER_INIT,editIngredientHandlerSaga);\r\n// Item Recipe\r\nyield takeLatest(itemRecipeAction.ITEMRECIPE_INIT,initlizeItemRecipeSaga);\r\nyield takeLatest(itemRecipeAction.SUBMIT_ITEMRECIPE_HANDLER_INIT,submitItemRecipeHandlerSaga);\r\nyield takeLatest(itemRecipeAction.DELETE_ITEMRECIPE_HANDLER_INIT,deleteItemRecipeHandlerSaga);\r\nyield takeLatest(itemRecipeAction.EDIT_ITEMRECIPE_HANDLER_INIT,editItemRecipeHandlerSaga);\r\n// Recipe Generator\r\nyield takeLatest(recipeGeneratorAction.RECIPE_GENERATOR_SUBMIT_INIT,submitRecipeGeneratorHandlerSaga);\r\n// Vendor Mapping\r\nyield takeLatest(vendorMappingAction.VENDOR_MAPPING_INIT,initializeVendorMappingSaga);\r\nyield takeLatest(vendorMappingAction.VENDOR_MAPPING_SUBMIT_INIT,submitVendorMappingtHandlerSaga);\r\nyield takeLatest(vendorMappingAction.VENDOR_MAPPING_DELETE_INIT,deleteVendorMappingHandlerSaga);\r\nyield takeLatest(vendorMappingAction.VENDOR_MAPPING_EDIT_INIT,editVendorMappingHandlerSaga);\r\n// Inventory\r\nyield takeLatest(inventoryAction.INVENTORY_INIT,initalizeInventoryHandlerSaga);\r\nyield takeLatest(inventoryAction.SUBMIT_INVENTORY_INIT,submitInventoryHandlerSaga);\r\nyield takeLatest(inventoryAction.EDIT_INVENTORY_INIT,editInventoryHandlerSaga);\r\nyield takeLatest(inventoryAction.DELETE_INVENTORY_INIT,deleteInventoryHandlerSaga);\r\n// Customer Order\r\nyield takeLatest(customerOrderAction.ORDER_INIT,initlizeOrderSaga);\r\nyield takeLatest(customerOrderAction.SUBMIT_ORDER_HANDLER_INIT,submitOrderHandlerSaga);\r\nyield takeLatest(customerOrderAction.DELETE_ORDER_HANDLER_INIT,deleteOrderHandlerSaga);\r\nyield takeLatest(customerOrderAction.EDIT_ORDER_HANDLER_INIT,editOrderHandlerSaga);\r\n// MonthlyExpense\r\nyield takeLatest(monthlyExpenseAction.MONTHLY_EXPENSE_INIT ,initlizeExpenseSaga);\r\nyield takeLatest(monthlyExpenseAction.SUBMIT_MONTHLY_EXPENSE_HANDLER_INIT,submitExpenseHandlerSaga);\r\nyield takeLatest(monthlyExpenseAction.DELETE_MONTHLY_EXPENSE_HANDLER_INIT,deleteExpenseHandlerSaga);\r\nyield takeLatest(monthlyExpenseAction.EDIT_MONTHLY_EXPENSE_HANDLER_INIT,editExpenseHandlerSaga);\r\n// Investment Budget\r\nyield takeLatest(investmentBudgetAction.INVESTMENT_BUDGET_INIT,initlizeBudgetSaga);\r\nyield takeLatest(investmentBudgetAction.SUBMIT_INVESTMENT_BUDGET_HANDLER_INIT,submitBudgetHandlerSaga);\r\nyield takeLatest(investmentBudgetAction.DELETE_INVESTMENT_BUDGET_HANDLER_INIT,deleteBudgetHandlerSaga);\r\nyield takeLatest(investmentBudgetAction.EDIT_INVESTMENT_BUDGET_HANDLER_INIT,editBudgetHandlerSaga);\r\n// Order Report\r\nyield takeLatest(orderReportAction.SUBMIT_ORDER_REPORT_INIT,submitOrderReportHandlerSaga);\r\n// Top Sell\r\nyield takeLatest(topSellAction.SUBMIT_TOP_SELL_DISH_INIT,submitTopSellDishHandlerSaga);\r\nyield takeLatest(topSellAction.SUBMIT_TOP_SELL_INGREDIENT_INIT,submitTopSellIngredientHandlerSaga);\r\n// Profit Loss\r\nyield takeLatest(profitLossAction.SUBMIT_PROFIT_LOSS_INIT,submitProfitLossHandlerSaga);\r\n// Table Reservation\r\nyield takeLatest(reservationAction.RESERVATION_TABLE_INIT,initlizeReservationSaga);\r\nyield takeLatest(reservationAction.RESERVATION_TABLE_SUBMIT_INIT,submitTableHandlerSaga)\r\nyield takeLatest(reservationAction.EDIT_TABLE_RESERVATION_INIT,editTableReservationHandlerSaga);\r\nyield takeLatest(reservationAction.DELETE_TABLE_RESERVATION_INIT,deleteTableReservationHandlerSaga);\r\n\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from \"react-redux\";\nimport {createStore,applyMiddleware,compose} from \"redux\";\nimport rootReducer from \"./store/reducer/root_reducer\";\nimport {watch} from \"./store/saga/root_saga\";\nimport createSagaMiddleware from \"redux-saga\";\nimport {HashRouter} from \"react-router-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(rootReducer,composeEnhancers(applyMiddleware(sagaMiddleware)));\n\nsagaMiddleware.run(watch);\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter>\n      <CssBaseline />\n      <App />\n    </HashRouter>\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}